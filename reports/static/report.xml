<?xml version='1.0' encoding='UTF-8' standalone='no'?><ResultsSession buildId="2024-02-22" climode="true" endTime="2024-02-22T14:45:23-08:00" execEnv="win32_x86_64" hasViols="true" id="1707572504919" lang="en_US" machine="machine-name" prjModule="com.parasoft:project-with-default-package" project="" tag="${scontrol_branch}-win32_x86_64" time="2024-02-22T14:43:58-08:00" toolDispName="Jtest" toolId="jtest" toolName="DTP Engine for Java" toolVer="2023.2.0" user="user-name">
   <TestConfig machine="machine-name" name="jtest_settings" pseudoUrl="file:/${platform_working_directory}\jtest_settings.properties" user="user-name"/>
   <Authors>
      <Author id="dev1" name="user"/>
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.jtest.globals.analyzer.GlobalsAnalyzer" name="Parasoft Globals Analyzer" ver="10.6.3.20231105"/>
      <Analyzer id="com.parasoft.jtest.flowanalyzer" name="Parasoft Java Flow Analyzer" ver="10.6.3.20231027B4444"/>
      <Analyzer id="com.parasoft.jtest.standards.dupcode" name="Code Duplication Detector" ver="10.6.3.20231103"/>
      <Analyzer id="com.parasoft.jtest.globals.classpath.ClasspathAnalyzer" name="Parasoft Classpath Analyzer" ver="10.6.3.20231105"/>
      <Analyzer id="com.parasoft.jtest.globals.ioc.springxml.analyzer.IOCAnalyzer" name="Parasoft IOC Analyzer" ver="10.6.3.20231105"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.xml" name="Parasoft XML Static Analyzer" ver="10.6.3.20231105"/>
      <Analyzer id="com.parasoft.xtest.dupcode.parser" name="Code Duplication Parser" ver="10.6.3.20231103"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.java" name="Parasoft Java Static Analyzer" ver="10.6.3.20231105"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.prop" name="Parasoft Properties Static Analyzer" ver="10.6.3.20231105"/>
      <Analyzer id="com.parasoft.jtest.standards.metrics.analyzer" name="Parasoft Metrics Analyzer" ver="10.6.3.20231105"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.rulewizard" name="Parasoft RuleWizard Static Analyzer" ver="10.6.3.20231105"/>
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IChangeImpactViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1"/>
   </VersionInfos>
   <Goals tsks="50">
      
   </Goals>
   <Metrics>
      <Metric avg="0.5" disp="true" id="METRIC.CBO" max="2" min="0" name="Coupling Between Objects" noi="12" stddev="0.764">
         <Info avg="0.5" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0" noi="12" stddev="0.764"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.CC" max="1" min="1" name="McCabe Cyclomatic Complexity" noi="18" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.CLLOCRIF" max="0" min="0" name="Comment/Logical Lines in Files" noi="6" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="6" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.CLLOCRIM" max="0" min="0" name="Comment/Logical Lines in Methods" noi="16" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="16" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.CLLOCRIT" max="0" min="0" name="Comment/Logical Lines in Types" noi="8" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="8" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.DIF" max="0" min="0" name="Depth of Nested 'if' Statements" noi="18" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.ECC" max="1" min="1" name="Essential Cyclomatic Complexity" noi="18" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="0.5" disp="true" id="METRIC.FO" max="2" min="0" name="Fan Out" noi="10" stddev="0.671">
         <Info avg="0.5" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0" noi="10" stddev="0.671"/>
      </Metric>
      <Metric avg="3.233" disp="true" id="METRIC.HDIFM" max="7" min="0.5" name="Halstead Difficulty" noi="18" stddev="1.739">
         <Info avg="3.233" disp="true" elem="com.parasoft:project-with-default-package" max="7" min="0.5" noi="18" stddev="1.739"/>
      </Metric>
      <Metric avg="197.066" disp="true" id="METRIC.HEFM" max="1163.358" min="2.377" name="Halstead Effort" noi="18" stddev="268.37">
         <Info avg="197.066" disp="true" elem="com.parasoft:project-with-default-package" max="1163.358" min="2.377" noi="18" stddev="268.37"/>
      </Metric>
      <Metric avg="13.112" disp="true" id="METRIC.HICM" max="24.123" min="8.242" name="Halstead Intelligent Content" noi="18" stddev="4.657">
         <Info avg="13.112" disp="true" elem="com.parasoft:project-with-default-package" max="24.123" min="8.242" noi="18" stddev="4.657"/>
      </Metric>
      <Metric avg="13.167" disp="true" id="METRIC.HLENM" max="44" min="3" name="Halstead Program Length" noi="18" stddev="8.908">
         <Info avg="13.167" disp="true" elem="com.parasoft:project-with-default-package" max="44" min="3" noi="18" stddev="8.908"/>
      </Metric>
      <Metric avg="0.511" disp="true" id="METRIC.HLEVM" max="2" min="0.143" name="Halstead Program Level" noi="18" stddev="0.537">
         <Info avg="0.511" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0.143" noi="18" stddev="0.537"/>
      </Metric>
      <Metric avg="0.01" disp="true" id="METRIC.HNOBM" max="0.037" min="0.001" name="Halstead Number of Bugs" noi="18" stddev="0.008">
         <Info avg="0.01" disp="true" elem="com.parasoft:project-with-default-package" max="0.037" min="0.001" noi="18" stddev="0.008"/>
      </Metric>
      <Metric avg="10.948" disp="true" id="METRIC.HTTPM" max="64.631" min="0.132" name="Halstead Time to Program" noi="18" stddev="14.909">
         <Info avg="10.948" disp="true" elem="com.parasoft:project-with-default-package" max="64.631" min="0.132" noi="18" stddev="14.909"/>
      </Metric>
      <Metric avg="9.444" disp="true" id="METRIC.HVOCM" max="14" min="3" name="Halstead Program Vocabulary" noi="18" stddev="3.095">
         <Info avg="9.444" disp="true" elem="com.parasoft:project-with-default-package" max="14" min="3" noi="18" stddev="3.095"/>
      </Metric>
      <Metric avg="44.989" disp="true" id="METRIC.HVOLM" max="167.524" min="4.755" name="Halstead Program Volume" noi="18" stddev="35.798">
         <Info avg="44.989" disp="true" elem="com.parasoft:project-with-default-package" max="167.524" min="4.755" noi="18" stddev="35.798"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.IDOC" max="1" min="1" name="Inheritance Depth of Class" noi="7" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="7" stddev="0"/>
      </Metric>
      <Metric avg="0.021" disp="true" id="METRIC.LCOM" max="0.25" min="0" name="Lack of Cohesion" noi="12" stddev="0.069">
         <Info avg="0.021" disp="true" elem="com.parasoft:project-with-default-package" max="0.25" min="0" noi="12" stddev="0.069"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.MCC" max="1" min="1" name="Modified Cyclomatic Complexity" noi="18" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="128.084" disp="true" id="METRIC.MI" max="133.922" min="110.469" name="Maintainability Index" noi="7" stddev="8.176">
         <Info avg="128.084" disp="true" elem="com.parasoft:project-with-default-package" max="133.922" min="110.469" noi="7" stddev="8.176"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NBD" max="0" min="0" name="Nested Blocks Depth" noi="18" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="4" disp="true" id="METRIC.NOBLIF" max="12" min="1" name="Blank Lines in Files" noi="7" stddev="3.625">
         <Info avg="4" disp="true" elem="com.parasoft:project-with-default-package" max="12" min="1" noi="7" stddev="3.625"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOBLIM" max="0" min="0" name="Blank Lines in Methods" noi="18" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="1.5" disp="true" id="METRIC.NOBLIT" max="6" min="0" name="Blank Lines in Types" noi="12" stddev="1.848">
         <Info avg="1.5" disp="true" elem="com.parasoft:project-with-default-package" max="6" min="0" noi="12" stddev="1.848"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.NOC" max="1" min="1" name="Number of Classes" noi="7" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="7" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOCLIF" max="0" min="0" name="Comment Lines in Files" noi="7" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="7" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOCLIM" max="0" min="0" name="Comment Lines in Methods" noi="18" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOCLIT" max="0" min="0" name="Comment Lines in Types" noi="12" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="12" stddev="0"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.NOF" max="1" min="1" name="Number of Files" noi="7" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="7" stddev="0"/>
      </Metric>
      <Metric avg="4" disp="true" id="METRIC.NOLLOCIF" max="9" min="0" name="Logical Lines in Files" noi="7" stddev="2.928">
         <Info avg="4" disp="true" elem="com.parasoft:project-with-default-package" max="9" min="0" noi="7" stddev="2.928"/>
      </Metric>
      <Metric avg="1.5" disp="true" id="METRIC.NOLLOCIM" max="6" min="0" name="Logical Lines in Methods" noi="18" stddev="1.302">
         <Info avg="1.5" disp="true" elem="com.parasoft:project-with-default-package" max="6" min="0" noi="18" stddev="1.302"/>
      </Metric>
      <Metric avg="2.333" disp="true" id="METRIC.NOLLOCIT" max="8" min="0" name="Logical Lines in Types" noi="12" stddev="2.494">
         <Info avg="2.333" disp="true" elem="com.parasoft:project-with-default-package" max="8" min="0" noi="12" stddev="2.494"/>
      </Metric>
      <Metric avg="0.5" disp="true" id="METRIC.NOMCIM" max="5" min="0" name="Method Calls in Methods" noi="18" stddev="1.167">
         <Info avg="0.5" disp="true" elem="com.parasoft:project-with-default-package" max="5" min="0" noi="18" stddev="1.167"/>
      </Metric>
      <Metric avg="1.5" disp="true" id="METRIC.NOMIT" max="6" min="0" name="Number of Methods in Types" noi="12" stddev="1.5">
         <Info avg="1.5" disp="true" elem="com.parasoft:project-with-default-package" max="6" min="0" noi="12" stddev="1.5"/>
      </Metric>
      <Metric avg="0.556" disp="true" id="METRIC.NOPAR" max="2" min="0" name="Parameters of Methods" noi="18" stddev="0.762">
         <Info avg="0.556" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0" noi="18" stddev="0.762"/>
      </Metric>
      <Metric avg="18.857" disp="true" id="METRIC.NOPLIF" max="50" min="5" name="Physical Lines in Files" noi="7" stddev="14.297">
         <Info avg="18.857" disp="true" elem="com.parasoft:project-with-default-package" max="50" min="5" noi="7" stddev="14.297"/>
      </Metric>
      <Metric avg="3.389" disp="true" id="METRIC.NOPLIM" max="8" min="1" name="Physical Lines in Methods" noi="18" stddev="1.458">
         <Info avg="3.389" disp="true" elem="com.parasoft:project-with-default-package" max="8" min="1" noi="18" stddev="1.458"/>
      </Metric>
      <Metric avg="9.167" disp="true" id="METRIC.NOPLIT" max="30" min="3" name="Physical Lines in Types" noi="12" stddev="7.198">
         <Info avg="9.167" disp="true" elem="com.parasoft:project-with-default-package" max="30" min="3" noi="12" stddev="7.198"/>
      </Metric>
      <Metric avg="0.333" disp="true" id="METRIC.NOPRIVMIT" max="2" min="0" name="Private Members of Types" noi="12" stddev="0.624">
         <Info avg="0.333" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0" noi="12" stddev="0.624"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOPROTMIT" max="0" min="0" name="Protected Members of Types" noi="12" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="12" stddev="0"/>
      </Metric>
      <Metric avg="2.167" disp="true" id="METRIC.NOPUBMIT" max="6" min="0" name="Public Members of Types" noi="12" stddev="1.724">
         <Info avg="2.167" disp="true" elem="com.parasoft:project-with-default-package" max="6" min="0" noi="12" stddev="1.724"/>
      </Metric>
      <Metric avg="0.556" disp="true" id="METRIC.NORET" max="1" min="0" name="Number of Returns in Methods" noi="18" stddev="0.497">
         <Info avg="0.556" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="0" noi="18" stddev="0.497"/>
      </Metric>
      <Metric avg="14.857" disp="true" id="METRIC.NOSLIF" max="38" min="4" name="Source Lines in Files" noi="7" stddev="10.71">
         <Info avg="14.857" disp="true" elem="com.parasoft:project-with-default-package" max="38" min="4" noi="7" stddev="10.71"/>
      </Metric>
      <Metric avg="3.389" disp="true" id="METRIC.NOSLIM" max="8" min="1" name="Source Lines in Methods" noi="18" stddev="1.458">
         <Info avg="3.389" disp="true" elem="com.parasoft:project-with-default-package" max="8" min="1" noi="18" stddev="1.458"/>
      </Metric>
      <Metric avg="7.667" disp="true" id="METRIC.NOSLIT" max="24" min="3" name="Source Lines in Types" noi="12" stddev="5.662">
         <Info avg="7.667" disp="true" elem="com.parasoft:project-with-default-package" max="24" min="3" noi="12" stddev="5.662"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.NOT" max="1" min="1" name="Number of Types" noi="12" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="12" stddev="0"/>
      </Metric>
      <Metric avg="2.5" disp="true" id="METRIC.RFC" max="7" min="0" name="Response for Class" noi="12" stddev="2.141">
         <Info avg="2.5" disp="true" elem="com.parasoft:project-with-default-package" max="7" min="0" noi="12" stddev="2.141"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.SCC" max="1" min="1" name="Strict Cyclomatic Complexity" noi="18" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="1.5" disp="true" id="METRIC.WMC" max="6" min="0" name="Weighted Methods of Class" noi="12" stddev="1.5">
         <Info avg="1.5" disp="true" elem="com.parasoft:project-with-default-package" max="6" min="0" noi="12" stddev="1.5"/>
      </Metric>
   </Metrics>
   <Scope>
      <Repositories/>
      <Locations>
         <Loc hash="1741334343" locRef="1" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" resProjPath="src/main/java/Calculator.java" totLns="27" uri="file:/${platform_working_directory}/src/main/java/Calculator.java"/>
         <Loc hash="-662881149" locRef="2" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" resProjPath="src/main/java/com/parasoft/Convertor.java" totLns="14" uri="file:/${platform_working_directory}/src/main/java/com/parasoft/Convertor.java"/>
         <Loc hash="469181545" locRef="3" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" resProjPath="src/main/java/com/parasoft/another/Convertor.java" totLns="14" uri="file:/${platform_working_directory}/src/main/java/com/parasoft/another/Convertor.java"/>
         <Loc hash="473374080" locRef="4" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" resProjPath="src/main/java/com/parasoft/differentViolations/GenerateViolations.java" totLns="15" uri="file:/${platform_working_directory}/src/main/java/com/parasoft/differentViolations/GenerateViolations.java"/>
         <Loc hash="-1706285489" locRef="5" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" resProjPath="src/main/java/com/parasoft/interfaces/IConvertor.java" totLns="5" uri="file:/${platform_working_directory}/src/main/java/com/parasoft/interfaces/IConvertor.java"/>
         <Loc hash="1200206342" locRef="6" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" resProjPath="src/main/java/com/parasoft/interfaces2/ICalculator.java" totLns="7" uri="file:/${platform_working_directory}/src/main/java/com/parasoft/interfaces2/ICalculator.java"/>
         <Loc hash="-1917579824" locRef="7" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" resProjPath="src/main/java/com/parasoft/nested/PhoneFactory.java" totLns="50" uri="file:/${platform_working_directory}/src/main/java/com/parasoft/nested/PhoneFactory.java"/>
      </Locations>
   </Scope>
   
  <SetupProblems>
    <Problem msg="Project compilation problems:" sev="2" totErrs="1" type="ProjectCompilationProblem">
      <ErrorList>
        <Error val="Project 'com.parasoft:project-with-default-package' contains compilation problems"/>
      </ErrorList>
    </Problem>
    <Problem msg="Compilation setup problems:" sev="1" totErrs="4" type="CompilationSetupProblem">
      <ErrorList>
        <Error val="Compilation error during Static Analysis:&#xd;&#xa;file:/${platform_working_directory}\src\test\java\CalculatorTest.java:9: Calculator cannot be resolved to a type&#xd;&#xa;"/>
        <Error val="Compilation error during Static Analysis:&#xd;&#xa;file:/${platform_working_directory}\src\test\java\com\parasoft\ConvertorTest.java:11: Convertor cannot be resolved to a type&#xd;&#xa;"/>
        <Error val="Compilation error during Static Analysis:&#xd;&#xa;file:/${platform_working_directory}\src\test\java\com\parasoft\another\ConvertorTest.java:11: Convertor cannot be resolved to a type&#xd;&#xa;"/>
        <Error val="Compilation error during Static Analysis:&#xd;&#xa;file:/${platform_working_directory}\src\test\java\com\parasoft\nested\PhoneFactoryTest.java:11: PhoneFactory cannot be resolved to a type&#xd;&#xa;"/>
      </ErrorList>
    </Problem>
    <Problem msg="Configuration setup problems:" sev="1" totErrs="10" type="ConfigurationSetupProblem">
      <ErrorList>
        <Error val="The METRICS rule category is deprecated. Consider enabling code metrics in your test configuration."/>
        <Error val="The rule HIBERNATE.CSF has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule HIBERNATE.CHS has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule PB.RE.PNPD has been deprecated and should be replaced with BD.EXCEPT.NP in your test configuration."/>
        <Error val="The rule JDBC.CDBC has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule CODSTA.BP.PPAC has been removed. You can obtain similar results by enabling OPT.AAM in your test configuration."/>
        <Error val="The rule PB.USC.CC has been deprecated and should be replaced with BD.PB.CC in your test configuration."/>
        <Error val="The rule JDBC.RRWD has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule OPT.CCR has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule OPT.CIO has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
      </ErrorList>
    </Problem>
  </SetupProblems>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:47">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="7" checkedLns="132" id="com.parasoft:project-with-default-package" name="com.parasoft:project-with-default-package" qfixErrs="0" suppErrs="0" totErrs="429" totFiles="7" totLns="132"/>
      </Projects>
      
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;" authUrg="0;" desc="DISA ASD STIG" name="APSC_DV" rules="1376" total="0">
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001300 The application must protect audit information from unauthorized deletion." name="APSC_DV.001300" rules="20" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001740 The application must only store cryptographic representations of passwords." name="APSC_DV.001740" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002510 The application must protect from command injection." name="APSC_DV.002510" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000510 The application must execute without excessive account permissions." name="APSC_DV.000510" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001660 Service-Oriented Applications handling non-releasable data must authenticate endpoint devices via mutual SSL/TLS." name="APSC_DV.001660" rules="30" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002530 The application must validate all input." name="APSC_DV.002530" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001860 The application must use mechanisms meeting the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance for authentication to a cryptographic module." name="APSC_DV.001860" rules="26" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000650 The application must not write sensitive data into the application logs." name="APSC_DV.000650" rules="7" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002550 The application must not be vulnerable to XML-oriented attacks." name="APSC_DV.002550" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002210 The application must set the HTTPOnly flag on session cookies." name="APSC_DV.002210" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002350 The application must use appropriate cryptography in order to protect stored DoD information when required by the information owner or DoD policy." name="APSC_DV.002350" rules="31" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002570 The application must generate error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries." name="APSC_DV.002570" rules="13" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000170 The application must implement cryptographic mechanisms to protect the integrity of remote access sessions." name="APSC_DV.000170" rules="54" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002010 The application must implement NSA-approved cryptography to protect classified information in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards." name="APSC_DV.002010" rules="25" total="0"/>
               <Category authTot="7;" authUrg="0;" desc="APSC_DV.001460 An application vulnerability assessment must be conducted." name="APSC_DV.001460" rules="93" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001680 The application must enforce a minimum 15-character password length." name="APSC_DV.001680" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002590 The application must not be vulnerable to overflow attacks." name="APSC_DV.002590" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002470 The application must maintain the confidentiality and integrity of information during reception." name="APSC_DV.002470" rules="48" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000080 The application must automatically terminate the admin user session and log off admin users after a 10 minute idle time period is exceeded." name="APSC_DV.000080" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001290 The application must protect audit information from unauthorized modification." name="APSC_DV.001290" rules="20" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001995 The application must not be vulnerable to race conditions." name="APSC_DV.001995" rules="66" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000500 The application must prevent non-privileged users from executing privileged functions to include disabling, circumventing, or altering implemented security safeguards/countermeasures." name="APSC_DV.000500" rules="18" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001850 The application must not display passwords/PINs as clear text." name="APSC_DV.001850" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002400 The application must restrict the ability to launch Denial of Service (DoS) attacks against itself or other information systems." name="APSC_DV.002400" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002500 The application must protect from Cross-Site Request Forgery (CSRF) vulnerabilities." name="APSC_DV.002500" rules="4" total="0"/>
               <Category authTot="36;" authUrg="7;" desc="APSC_DV.003215 The application development team must follow a set of coding standards." name="APSC_DV.003215" rules="37" total="36"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000460 The application must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies." name="APSC_DV.000460" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002520 The application must protect from canonical representation vulnerabilities." name="APSC_DV.002520" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.003235 The application must not be subject to error handling vulnerabilities." name="APSC_DV.003235" rules="36" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001750 The application must transmit only cryptographically-protected passwords." name="APSC_DV.001750" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002000 The application must terminate all network connections associated with a communications session at the end of the session." name="APSC_DV.002000" rules="7" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002220 The application must set the secure flag on session cookies." name="APSC_DV.002220" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002440 The application must protect the confidentiality and integrity of transmitted information." name="APSC_DV.002440" rules="37" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002540 The application must not be vulnerable to SQL Injection." name="APSC_DV.002540" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000160 The application must implement DoD-approved encryption to protect the confidentiality of remote access sessions." name="APSC_DV.000160" rules="53" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002460 The application must maintain the confidentiality and integrity of information during preparation for transmission." name="APSC_DV.002460" rules="48" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002560 The application must not be subject to input handling vulnerabilities." name="APSC_DV.002560" rules="45" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.003110 The application must not contain embedded authentication data." name="APSC_DV.003110" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002480 The application must not disclose unnecessary information to users." name="APSC_DV.002480" rules="48" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000480 The application must enforce approved authorizations for controlling the flow of information within the system based on organization-defined information flow control policies." name="APSC_DV.000480" rules="24" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002490 The application must protect from Cross-Site Scripting (XSS) vulnerabilities." name="APSC_DV.002490" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000070 The application must automatically terminate the non-privileged user session and log off non-privileged users after a 15 minute idle time period has elapsed." name="APSC_DV.000070" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002290 The application must use the Federal Information Processing Standard (FIPS) 140-2-validated cryptographic modules and random number generator if the application implements encryption, key exchange, digital signature, and hash functionality." name="APSC_DV.002290" rules="30" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Flow Analysis" name="BD" rules="78" total="0">
               <Category authTot="0;" authUrg="0;" desc="API" name="BD.API" rules="3" total="0"/>
               <Category authTot="1;" authUrg="0;" desc="Possible Bugs" name="BD.PB" rules="26" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="Resources" name="BD.RES" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Optimization" name="BD.OPT" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Threads &amp; Synchronization" name="BD.TRS" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Collections" name="BD.CO" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Security" name="BD.SECURITY" rules="36" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Exceptions" name="BD.EXCEPT" rules="1" total="0"/>
            </Category>
            <Category authTot="8;" authUrg="0;" desc="JavaBeans" name="BEAN" rules="5" total="8"/>
            <Category authTot="1;" authUrg="1;" desc="Code Duplication Detection" name="CDD" rules="6" total="1"/>
            <Category authTot="0;" authUrg="0;" desc="SEI CERT Oracle Coding Standard for Java" name="CERT" rules="206" total="0">
               <Category authTot="0;" authUrg="0;" desc="IDS00-J: Prevent SQL Injection" name="CERT.IDS00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM00-J: Detect or prevent integer overflow" name="CERT.NUM00" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM01-J: Do not perform bitwise and arithmetic operations on the same data" name="CERT.NUM01" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS03-J: Do not log unsanitized user input" name="CERT.IDS03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS06-J: Exclude unsanitized uer input from format strings" name="CERT.IDS06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS07-J: Sanitize untrusted data passed to Runtime.exec() method" name="CERT.IDS07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM08-J: Check floating-point inputs for exceptional values" name="CERT.NUM08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM09-J: Do not use floating-point variables as loop counters" name="CERT.NUM09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="TSM02-J: Do not use background threads during class initialization" name="CERT.TSM02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM07-J: Do not attempt comparisons with NaN" name="CERT.NUM07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET12-J: Do not use finalizers" name="CERT.MET12" rules="9" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM04-J: Do not use floating-point numbers if precise computation is required" name="CERT.NUM04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET11-J: Ensure that keys used in comparison operations are immutable" name="CERT.MET11" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM02-J: Ensure that division and remainder operations do not result in divide by zero errors" name="CERT.NUM02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK10-J: Use a correct form of the double-checked locking idiom" name="CERT.LCK10" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET04-J: Do not increase the accessibility of overridden or hidden methods" name="CERT.MET04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET07-J: Never declare a class method that hides a method declared in a superclass or superinterfaces" name="CERT.MET07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET06-J: Do not invoke overridable methods in clone()" name="CERT.MET06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET09-J: Classes that define equals() method must also define hashCode() method" name="CERT.MET09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="TSM00-J: Do not override thread-safe methods with methods that are not thread-safe" name="CERT.TSM00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET08-J: Preserve the equality contract when overriding the equals() method" name="CERT.MET08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="TSM01-J: Do not let the this reference escape during object construction" name="CERT.TSM01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="VNA03-J: Do not assume that a group of calls to independently atomic methods is atomic" name="CERT.VNA03" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="VNA00-J: Ensure visibility when accessing shared primitive variables" name="CERT.VNA00" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="VNA02-J: Ensure that compound operations on shared variables are atomic" name="CERT.VNA02" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM12-J: Ensure conversions of numeric types to narrower types do not result in lost or misinterpreted data" name="CERT.NUM12" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER04-J: Do not allow serialization and deserialization to bypass the security manager" name="CERT.SER04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER07-J: Do not use the default serialized form for classes with implementation-defined invariants" name="CERT.SER07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM10-J: Do not construct BigDecimal objects from floating-point literals" name="CERT.NUM10" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER01-J: Do not deviate from the proper signatures of serialization methods" name="CERT.SER01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER00-J: Enable serialization compatibility during class evolution" name="CERT.SER00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER03-J: Do not serialize unencrypted, sensitive data" name="CERT.SER03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ENV02-J: Do not trust the values of environment variables" name="CERT.ENV02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER09-J: Do not invoke overridable methods from readObject() method" name="CERT.SER09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM13-J: Avoid loss of precision when converting primitive integers to floating-point" name="CERT.NUM13" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET02-J: Do not use deprecated or obsolete classes or methods" name="CERT.MET02" rules="2" total="0"/>
               <Category authTot="3;" authUrg="0;" desc="OBJ05-J: Defensively copy private mutable class members before returning their references" name="CERT.OBJ05" rules="4" total="3"/>
               <Category authTot="3;" authUrg="1;" desc="OBJ06-J: Defensively copy mutable inputs and mutable internal components" name="CERT.OBJ06" rules="4" total="3"/>
               <Category authTot="10;" authUrg="2;" desc="OBJ07-J: Sensitive classes must not let themselves be copied" name="CERT.OBJ07" rules="1" total="10"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ08-J: Do not expose private members of an outer class from within a nested class" name="CERT.OBJ08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK02-J: Do not synchronize on the class object returned by getClass()" name="CERT.LCK02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK00-J: Use private final lock objects to synchronize classes that may interact with untrusted code" name="CERT.LCK00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ03-J: Prevent heap pollution" name="CERT.OBJ03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK01-J: Do not synchronize on objects that may be reused" name="CERT.LCK01" rules="1" total="0"/>
               <Category authTot="3;" authUrg="1;" desc="OBJ04-J: Provide mutable classes with copy functionality to safely allow passing instances to untrusted code" name="CERT.OBJ04" rules="5" total="3"/>
               <Category authTot="0;" authUrg="0;" desc="LCK06-J: Do not use an instance lock to protect shared static data" name="CERT.LCK06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK07-J: Avoid deadlock by requesting and releasing locks in the same order" name="CERT.LCK07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK04-J: Do not synchronize on a collection view if the backing collection is accessible" name="CERT.LCK04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK05-J: Synchronize access to static fields that can be modified by untrusted code" name="CERT.LCK05" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK08-J: Ensure acrively held locks are released on exceptional conditions" name="CERT.LCK08" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK09-J: Do not perform operations that can block while holding a lock" name="CERT.LCK09" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER11-J: Prevent overwriting of externalizable objects" name="CERT.SER11" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC02-J: Generate strong random numbers" name="CERT.MSC02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC01-J: Do not use an empty infinite loop" name="CERT.MSC01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC00-J: Use SSLSocket rather than Socket for secure data exchange" name="CERT.MSC00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="TPS00-J: Use thread pools to enable graceful degradation of service during traffic bursts" name="CERT.TPS00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="DCL00-J: Prevent class initialization cycles" name="CERT.DCL00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="DCL02-J: Do not modify the collector's elements during an enhanced for statement" name="CERT.DCL02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO04-J: Release resources when they are no longer needed" name="CERT.FIO04" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO05-J: Do not expose buffers created using the wrap() or duplicate() methods to untrusted code" name="CERT.FIO05" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO06-J: Do not create multiple buffered wrappers on a single byte of character strream" name="CERT.FIO06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO07.JDo not let external process block on IO buffers" name="CERT.FIO07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO08-J: Distinguish between characters or bytes read from a stream and -1" name="CERT.FIO08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO09-J: Do not rely on the write() method to output integers outside the range 0 - 255" name="CERT.FIO09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO03-J: Remove temporary files before termination" name="CERT.FIO03" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR01-J: Do not allow exceptions to expose sensitive data" name="CERT.ERR01" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO16-J: Canonicalize path names before validating them." name="CERT.FIO16" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR00-J: Do not suppress or ignore checked exceptions" name="CERT.ERR00" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR09-J: Do not allow untrusted code to terminate the JVM" name="CERT.ERR09" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR07-J: Do not throw RuntimeExceptions, Exceptions or Throwable" name="CERT.ERR07" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR08-J: Do not catch NullPointerExceptions or any of its ancestors" name="CERT.ERR08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR05-J: Do not let checked exceptions escape from a finally block" name="CERT.ERR05" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="JNI01-J: Safely invoke standard APIs that perform tasks using the immediate caller's class loader instance (LoadLibrary)" name="CERT.JNI01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR03-J: Restore prior object state on method failure" name="CERT.ERR03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="JNI00-J: Define wrappers around native methods" name="CERT.JNI00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR04-J: Do not complete abruptly from finally block" name="CERT.ERR04" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC07-J: Prevent multiple instantiations of singleton objects" name="CERT.MSC07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC06-J: Do not modify the underlying collection when an iteration is in progress" name="CERT.MSC06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC04-J: Do not leak memory" name="CERT.MSC04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC03-J: Never hard code sensitive information" name="CERT.MSC03" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO12-J: Provide methods to read a write little-endian data" name="CERT.FIO12" rules="1" total="0"/>
               <Category authTot="4;" authUrg="1;" desc="STR00-J: Don't form strings containing partial characters from variable-width encodings" name="CERT.STR00" rules="1" total="4"/>
               <Category authTot="0;" authUrg="0;" desc="FIO13-J: Do not log sensitive information outside a trusted boundary" name="CERT.FIO13" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="STR01-J: Do not assume that a Java char fully represents a Unicode code point" name="CERT.STR01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO14-J: Perform proper cleanup at program termination" name="CERT.FIO14" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="STR02-J: Specify an appropriate locale when comparing locale-dependent data" name="CERT.STR02" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ09-J: Compare classes and not class names" name="CERT.OBJ09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC04-J: Protect sensitive operations with security manager checks" name="CERT.SEC04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC03-J: Do not load trusted classes after allowing untrusted code to load in arbitrary classes" name="CERT.SEC03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC05-J: Do not use reflection to increase accessibility of classes, methods or fields" name="CERT.SEC05" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP00-J: Do not ignore values returned by methods" name="CERT.EXP00" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP02-J: Do not use the Object.equals() method to compare two arrays" name="CERT.EXP02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC02-J: Do not base security checks on untrusted sources" name="CERT.SEC02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP01-J: Do not use a null in a case where an object is required" name="CERT.EXP01" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC01-J: Do not allow tainted variables in privileged blocks" name="CERT.SEC01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ10-J: Do not use public static nonfinal variables" name="CERT.OBJ10" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ11-J: Be wary of letting constructors throw exceptions" name="CERT.OBJ11" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS11-J: Perform any string modifications before validation" name="CERT.IDS11" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI00-J: Do not invoke Thread::run()" name="CERT.THI00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI02-J: Notify all waiting threads rather than a single thread" name="CERT.THI02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI01-J: Do not invode ThreadGroup methods" name="CERT.THI01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS16-J: Prevent XML injection" name="CERT.IDS16" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP03-J: Do not use the equality operators when comparing boxed values" name="CERT.EXP03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP05-J: Do not follow a write by a subsequent write or read of the same object within an expression" name="CERT.EXP05" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI03-J: Always invoke wait() and await() methods inside a loop" name="CERT.THI03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI05-J: Do not use Thread::stop() to terminate threads." name="CERT.THI05" rules="1" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Coding Conventions" name="CODSTA" rules="112" total="0">
               <Category authTot="8;" authUrg="0;" desc="Poor Object Oriented Design" name="CODSTA.POD" rules="11" total="8"/>
               <Category authTot="11;" authUrg="1;" desc="Bad Practice" name="CODSTA.BP" rules="24" total="11"/>
               <Category authTot="4;" authUrg="0;" desc="Organization" name="CODSTA.ORG" rules="15" total="4"/>
               <Category authTot="0;" authUrg="0;" desc="Error-Prone Coding" name="CODSTA.EPC" rules="15" total="0"/>
               <Category authTot="10;" authUrg="0;" desc="Readability" name="CODSTA.READ" rules="39" total="10"/>
               <Category authTot="0;" authUrg="0;" desc="Overriding and Implementing Methods" name="CODSTA.OIM" rules="8" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Common Weakness Enumeration 4.13" name="CWE" rules="451" total="0">
               <Category authTot="0;" authUrg="0;" desc="CWE-787: Out-of-bounds Write" name="CWE.787" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-543: Use of Singleton Pattern Without Synchronization in a Multithreaded Context" name="CWE.543" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-662: Improper Synchronization" name="CWE.662" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-306: Missing Authentication for Critical Function" name="CWE.306" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-427: Uncontrolled Search Path Element" name="CWE.427" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-307: Improper Restriction of Excessive Authentication Attempts" name="CWE.307" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-546: Suspicious Comment" name="CWE.546" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-667: Improper Locking" name="CWE.667" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-15: External Control of System or Configuration Setting" name="CWE.15" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-426: Untrusted Search Path" name="CWE.426" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-789: Memory Allocation with Excessive Size Value" name="CWE.789" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-413: Improper Resource Locking" name="CWE.413" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-652: Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')" name="CWE.652" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-532: Insertion of Sensitive Information into Log File" name="CWE.532" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-771: Missing Reference to Active Allocated Resource" name="CWE.771" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-772: Missing Release of Resource after Effective Lifetime" name="CWE.772" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-770: Allocation of Resources Without Limits or Throttling" name="CWE.770" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-20: Improper Input Validation" name="CWE.20" rules="27" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" name="CWE.22" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-416: Use After Free" name="CWE.416" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-778: Insufficient Logging" name="CWE.778" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-522: Insufficiently Protected Credentials" name="CWE.522" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-643: Improper Neutralization of Data within XPath Expressions ('XPath Injection')" name="CWE.643" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-764: Multiple Locks of a Critical Resource" name="CWE.764" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-523: Unprotected Transport of Credentials" name="CWE.523" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-644: Improper Neutralization of HTTP Headers for Scripting Syntax" name="CWE.644" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-400: Uncontrolled Resource Consumption" name="CWE.400" rules="5" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-521: Weak Password Requirements" name="CWE.521" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-404: Improper Resource Shutdown or Release" name="CWE.404" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-511: Logic/Time Bomb" name="CWE.511" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-198: Use of Incorrect Byte Ordering" name="CWE.198" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-193: Off-by-one Error" name="CWE.193" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-191: Integer Underflow (Wrap or Wraparound)" name="CWE.191" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-190: Integer Overflow or Wraparound" name="CWE.190" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-759: Use of a One-Way Hash without a Salt" name="CWE.759" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-755: Improper Handling of Exceptional Conditions" name="CWE.755" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-500: Public Static Field Not Marked Final" name="CWE.500" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-863: Incorrect Authorization" name="CWE.863" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-501: Trust Boundary Violation" name="CWE.501" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-862: Missing Authorization" name="CWE.862" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-185: Incorrect Regular Expression" name="CWE.185" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-506: Embedded Malicious Code" name="CWE.506" rules="1" total="0"/>
               <Category authTot="3;" authUrg="0;" desc="CWE-749: Exposed Dangerous Method or Function" name="CWE.749" rules="3" total="3"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-502: Deserialization of Untrusted Data" name="CWE.502" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-611: Improper Restriction of XML External Entity Reference" name="CWE.611" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-732: Incorrect Permission Assignment for Critical Resource" name="CWE.732" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-297: Improper Validation of Certificate with Host Mismatch" name="CWE.297" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-295: Improper Certificate Validation" name="CWE.295" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-290: Authentication Bypass by Spoofing" name="CWE.290" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-617: Reachable Assertion" name="CWE.617" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute" name="CWE.614" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-613: Insufficient Session Expiration" name="CWE.613" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-841: Improper Enforcement of Behavioral Workflow" name="CWE.841" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-600: Uncaught Exception in Servlet" name="CWE.600" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-287: Improper Authentication" name="CWE.287" rules="21" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-609: Double-Checked Locking" name="CWE.609" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-607: Public Static Final Field References Mutable Object" name="CWE.607" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-605: Multiple Binds to the Same Port" name="CWE.605" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-601: URL Redirection to Untrusted Site ('Open Redirect')" name="CWE.601" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-843: Access of Resource Using Incompatible Type ('Type Confusion')" name="CWE.843" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-279: Incorrect Execution-Assigned Permissions" name="CWE.279" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-397: Declaration of Throws for Generic Exception" name="CWE.397" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-395: Use of NullPointerException Catch to Detect NULL Pointer Dereference" name="CWE.395" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-396: Declaration of Catch for Generic Exception" name="CWE.396" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-391: Unchecked Error Condition" name="CWE.391" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag" name="CWE.1004" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-390: Detection of Error Condition Without Action" name="CWE.390" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-838: Inappropriate Encoding for Output Context" name="CWE.838" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-836: Use of Password Hash Instead of Password for Authentication" name="CWE.836" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-835: Loop with Unreachable Exit Condition ('Infinite Loop')" name="CWE.835" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-832: Unlock of a Resource that is not Locked" name="CWE.832" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-833: Deadlock" name="CWE.833" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-269: Improper Privilege Management" name="CWE.269" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-384: Session Fixation" name="CWE.384" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-261: Weak Encoding for Password" name="CWE.261" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-382: J2EE Bad Practices: Use of System.exit()" name="CWE.382" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-383: J2EE Bad Practices: Direct Use of Threads" name="CWE.383" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-260: Password in Configuration File" name="CWE.260" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-99: Improper Control of Resource Identifiers ('Resource Injection')" name="CWE.99" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-829: Inclusion of Functionality from Untrusted Control Sphere" name="CWE.829" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-94: Improper Control of Generation of Code ('Code Injection')" name="CWE.94" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')" name="CWE.95" rules="1" total="0"/>
               <Category authTot="1;" authUrg="0;" desc="CWE-704: Incorrect Type Conversion or Cast" name="CWE.704" rules="2" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-258: Empty Password in Configuration File" name="CWE.258" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-256: Plaintext Storage of a Password" name="CWE.256" rules="10" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-377: Insecure Temporary File" name="CWE.377" rules="1" total="0"/>
               <Category authTot="10;" authUrg="2;" desc="CWE-499: Serializable Class Containing Sensitive Data" name="CWE.499" rules="2" total="10"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-375: Returning a Mutable Object to an Untrusted Caller" name="CWE.375" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-496: Public Data Assigned to Private Array-Typed Field" name="CWE.496" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-134: Use of Externally-Controlled Format String" name="CWE.134" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere" name="CWE.497" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-131: Incorrect Calculation of Buffer Size" name="CWE.131" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-252: Unchecked Return Value" name="CWE.252" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-495: Private Data Structure Returned From A Public Method" name="CWE.495" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-250: Execution with Unnecessary Privileges" name="CWE.250" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-492: Use of Inner Class Containing Sensitive Data" name="CWE.492" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-491: Public cloneable() Method Without Final ('Object Hijack')" name="CWE.491" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-369: Divide By Zero" name="CWE.369" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-245: J2EE Bad Practices: Direct Management of Connections" name="CWE.245" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-487: Reliance on Package-level Scope" name="CWE.487" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-125: Out-of-bounds Read" name="CWE.125" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-246: J2EE Bad Practices: Direct Use of Sockets" name="CWE.246" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition" name="CWE.367" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-486: Comparison of Classes by Name" name="CWE.486" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')" name="CWE.362" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-483: Incorrect Block Delimitation" name="CWE.483" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-484: Omitted Break Statement in Switch" name="CWE.484" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-481: Assigning instead of Comparing" name="CWE.481" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-807: Reliance on Untrusted Inputs in a Security Decision" name="CWE.807" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-806: Buffer Access Using Size of Source Buffer" name="CWE.806" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-129: Improper Validation of Array Index" name="CWE.129" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-478: Missing Default Case in Multiple Condition Expression" name="CWE.478" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')" name="CWE.113" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-476: NULL Pointer Dereference" name="CWE.476" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-114: Process Control" name="CWE.114" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-477: Use of Obsolete Function" name="CWE.477" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-111: Direct Use of Unsafe JNI" name="CWE.111" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-595: Comparison of Object References Instead of Object Contents" name="CWE.595" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-352: Cross-Site Request Forgery (CSRF)" name="CWE.352" rules="8" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-594: J2EE Framework: Saving Unserializable Objects to Disk" name="CWE.594" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')" name="CWE.470" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-350: Reliance on Reverse DNS Resolution for a Security-Critical Action" name="CWE.350" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-918: Server-Side Request Forgery (SSRF)" name="CWE.918" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer" name="CWE.119" rules="5" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-117: Improper Output Neutralization for Logs" name="CWE.117" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-359: Exposure of Private Personal Information to an Unauthorized Actor" name="CWE.359" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-104: Struts: Form Bean Does Not Extend Validation Class" name="CWE.104" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-346: Origin Validation Error" name="CWE.346" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-347: Improper Verification of Cryptographic Signature" name="CWE.347" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-102: Struts: Duplicate Validation Forms" name="CWE.102" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-586: Explicit Call to Finalize()" name="CWE.586" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-103: Struts: Incomplete validate() Method Definition" name="CWE.103" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-584: Return Inside Finally Block" name="CWE.584" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-585: Empty Synchronized Block" name="CWE.585" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-582: Array Declared Public, Final, and Static" name="CWE.582" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-583: finalize() Method Declared Public" name="CWE.583" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-580: clone() Method Without super.clone()" name="CWE.580" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-581: Object Model Violation: Just One of Equals and Hashcode Defined" name="CWE.581" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-109: Struts: Validator Turned Off" name="CWE.109" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-106: Struts: Plug-in Framework not in Use" name="CWE.106" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-59: Improper Link Resolution Before File Access ('Link Following')" name="CWE.59" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-456: Missing Initialization of a Variable" name="CWE.456" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-577: EJB Bad Practices: Use of Sockets" name="CWE.577" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-215: Insertion of Sensitive Information Into Debugging Code" name="CWE.215" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-336: Same Seed in Pseudo-Random Number Generator (PRNG)" name="CWE.336" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-457: Use of Uninitialized Variable" name="CWE.457" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-578: EJB Bad Practices: Use of Class Loader" name="CWE.578" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer" name="CWE.212" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-213: Exposure of Sensitive Information Due to Incompatible Policies" name="CWE.213" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-576: EJB Bad Practices: Use of Java I/O" name="CWE.576" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-571: Expression is Always True" name="CWE.571" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-572: Call to Thread run() instead of start()" name="CWE.572" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-570: Expression is Always False" name="CWE.570" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-691: Insufficient Control Flow Management" name="CWE.691" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-64: Windows Shortcut Following (.LNK)" name="CWE.64" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-61: UNIX Symbolic Link (Symlink) Following" name="CWE.61" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-337: Predictable Seed in Pseudo-Random Number Generator (PRNG)" name="CWE.337" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-579: J2EE Bad Practices: Non-serializable Object Stored in Session" name="CWE.579" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)" name="CWE.338" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-459: Incomplete Cleanup" name="CWE.459" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-325: Missing Cryptographic Step" name="CWE.325" rules="2" total="0"/>
               <Category authTot="7;" authUrg="1;" desc="CWE-200: Exposure of Sensitive Information to an Unauthorized Actor" name="CWE.200" rules="7" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-321: Use of Hard-coded Cryptographic Key" name="CWE.321" rules="1" total="0"/>
               <Category authTot="2;" authUrg="0;" desc="CWE-563: Assignment to Variable without Use" name="CWE.563" rules="6" total="2"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-681: Incorrect Conversion between Numeric Types" name="CWE.681" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-561: Dead Code" name="CWE.561" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-680: Integer Overflow to Buffer Overflow" name="CWE.680" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)" name="CWE.80" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')" name="CWE.77" rules="1" total="0"/>
               <Category authTot="7;" authUrg="1;" desc="CWE-209: Generation of Error Message Containing Sensitive Information" name="CWE.209" rules="4" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-328: Use of Weak Hash" name="CWE.328" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')" name="CWE.78" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-329: Generation of Predictable IV with CBC Mode" name="CWE.329" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" name="CWE.79" rules="7" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-568: finalize() Method Without super.finalize()" name="CWE.568" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" name="CWE.327" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-313: Cleartext Storage in a File or on Disk" name="CWE.313" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-434: Unrestricted Upload of File with Dangerous Type" name="CWE.434" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-555: J2EE Misconfiguration: Plaintext Password in Configuration File" name="CWE.555" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-676: Use of Potentially Dangerous Function" name="CWE.676" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-798: Use of Hard-coded Credentials" name="CWE.798" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-311: Missing Encryption of Sensitive Data" name="CWE.311" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-6: J2EE Misconfiguration: Insufficient Session-ID Length" name="CWE.6" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-674: Uncontrolled Recursion" name="CWE.674" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-312: Cleartext Storage of Sensitive Information" name="CWE.312" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')" name="CWE.90" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-91: XML Injection (aka Blind XPath Injection)" name="CWE.91" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-81: Improper Neutralization of Script in an Error Message Web Page" name="CWE.81" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-83: Improper Neutralization of Script in Attributes in a Web Page" name="CWE.83" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-319: Cleartext Transmission of Sensitive Information" name="CWE.319" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-8: J2EE Misconfiguration: Entity Bean Declared Remote" name="CWE.8" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')" name="CWE.89" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-7: J2EE Misconfiguration: Missing Custom Error Page" name="CWE.7" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-315: Cleartext Storage of Sensitive Information in a Cookie" name="CWE.315" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-9: J2EE Misconfiguration: Weak Access Permissions for EJB Methods" name="CWE.9" rules="1" total="0"/>
            </Category>
            <Category authTot="2;" authUrg="0;" desc="Design by Contract" name="DBC" rules="18" total="2"/>
            <Category authTot="0;" authUrg="0;" desc="Eclipse Development" name="ECLIPSE" rules="3" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Enterprise JavaBeans" name="EJB" rules="62" total="0">
               <Category authTot="0;" authUrg="0;" desc="Enterprise JavaBeans 3" name="EJB.EJB3" rules="19" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Exceptions" name="EXCEPT" rules="19" total="0"/>
            <Category authTot="36;" authUrg="7;" desc="Formatting" name="FORMAT" rules="37" total="36"/>
            <Category authTot="0;" authUrg="0;" desc="Garbage Collection" name="GC" rules="12" total="0"/>
            <Category authTot="26;" authUrg="2;" desc="Global Static Analysis" name="GLOBAL" rules="23" total="26"/>
            <Category authTot="0;" authUrg="0;" desc="Hibernate Framework" name="HIBERNATE" rules="13" total="0"/>
            <Category authTot="1;" authUrg="0;" desc="Initialization" name="INIT" rules="14" total="1"/>
            <Category authTot="14;" authUrg="4;" desc="Internationalization" name="INTER" rules="17" total="14"/>
            <Category authTot="40;" authUrg="8;" desc="Javadoc Comments" name="JAVADOC" rules="25" total="40"/>
            <Category authTot="0;" authUrg="0;" desc="Java Database Connectivity" name="JDBC" rules="10" total="0"/>
            <Category authTot="14;" authUrg="2;" desc="JUnit Test Case" name="JUNIT" rules="31" total="14"/>
            <Category authTot="18;" authUrg="0;" desc="Metric" name="METRIC" rules="50" total="18"/>
            <Category authTot="10;" authUrg="0;" desc="Metrics - deprecated" name="METRICS" rules="23" total="10"/>
            <Category authTot="13;" authUrg="1;" desc="Embedded Devices" name="MOBILE" rules="17" total="13">
               <Category authTot="0;" authUrg="0;" desc="Java 2 Micro Edition" name="MOBILE.J2ME" rules="7" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Google Android" name="MOBILE.ANDROID" rules="2" total="0"/>
            </Category>
            <Category authTot="15;" authUrg="4;" desc="Naming Conventions" name="NAMING" rules="38" total="15"/>
            <Category authTot="11;" authUrg="0;" desc="Object Oriented Programming" name="OOP" rules="35" total="11"/>
            <Category authTot="3;" authUrg="0;" desc="Optimization" name="OPT" rules="56" total="3"/>
            <Category authTot="0;" authUrg="0;" desc="OWASP Top 10 Most Critical Web Application Security Risks (2017)" name="OWASP2017" rules="75" total="0">
               <Category authTot="0;" authUrg="0;" desc="A2-Broken Authentication" name="OWASP2017.A2" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A1-Injection" name="OWASP2017.A1" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A10-Insufficient Logging&amp;Monitoring" name="OWASP2017.A10" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A8-Insecure Deserialization" name="OWASP2017.A8" rules="9" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A7-Cross-Site Scripting (XSS)" name="OWASP2017.A7" rules="3" total="0"/>
               <Category authTot="7;" authUrg="1;" desc="A6-Security Misconfiguration" name="OWASP2017.A6" rules="18" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="A5-Broken Access Control" name="OWASP2017.A5" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A4-XML External Entities (XXE)" name="OWASP2017.A4" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A3-Sensitive Data Exposure" name="OWASP2017.A3" rules="22" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="OWASP API Security Top 10 (2019)" name="OWASP2019" rules="167" total="0">
               <Category authTot="0;" authUrg="0;" desc="API3-Excessive Data Exposure" name="OWASP2019.API3" rules="33" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="API2-Broken User Authentication" name="OWASP2019.API2" rules="23" total="0"/>
               <Category authTot="7;" authUrg="0;" desc="API10-Insufficient Logging &amp; Monitoring" name="OWASP2019.API10" rules="11" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="API5-Broken Function Level Authorization" name="OWASP2019.API5" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="API4-Lack of Resources &amp; Rate Limiting" name="OWASP2019.API4" rules="9" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="API7-Security Misconfiguration" name="OWASP2019.API7" rules="46" total="0"/>
               <Category authTot="1;" authUrg="0;" desc="API9-Improper Assets Management" name="OWASP2019.API9" rules="11" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="API8-Injection" name="OWASP2019.API8" rules="33" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="OWASP Top 10 Most Critical Web Application Security Risks (2021)" name="OWASP2021" rules="93" total="0">
               <Category authTot="0;" authUrg="0;" desc="A10-Server-Side Request Forgery" name="OWASP2021.A10" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A7-Identification and Authentication Failures" name="OWASP2021.A7" rules="6" total="0"/>
               <Category authTot="7;" authUrg="0;" desc="A5-Security Misconfiguration" name="OWASP2021.A5" rules="18" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="A4-Insecure Design" name="OWASP2021.A4" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A9-Security Logging and Monitoring Failures" name="OWASP2021.A9" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A8-Software and Data Integrity Failures" name="OWASP2021.A8" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A3-Injection" name="OWASP2021.A3" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A2-Cryptographic Failures" name="OWASP2021.A2" rules="20" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A1-Broken Access Control" name="OWASP2021.A1" rules="2" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Possible Bugs" name="PB" rules="142" total="0">
               <Category authTot="0;" authUrg="0;" desc="Typographical Errors" name="PB.TYPO" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Useless Code" name="PB.USC" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Numerical Errors" name="PB.NUM" rules="17" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="API Usage and Implementation" name="PB.API" rules="25" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Logical Errors" name="PB.LOGIC" rules="18" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Confusing or Unintended Behavior" name="PB.CUB" rules="33" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Runtime Exceptions" name="PB.RE" rules="17" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Payment Card Industry Data Security Standard 3.2" name="PCIDSS32" rules="72" total="0">
               <Category authTot="0;" authUrg="0;" desc="6.5.10 Broken authentication and session management" name="PCIDSS32.6510" rules="14" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.8 Improper access control" name="PCIDSS32.658" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.9 Cross-site request forgery (CSRF)" name="PCIDSS32.659" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.7 Cross-site scripting (XSS)" name="PCIDSS32.657" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.4 Insecure communications" name="PCIDSS32.654" rules="6" total="0"/>
               <Category authTot="7;" authUrg="0;" desc="6.5.5 Improper error handling" name="PCIDSS32.655" rules="11" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.3 Insecure cryptographic storage" name="PCIDSS32.653" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.1 Injection flaws" name="PCIDSS32.651" rules="14" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Portability" name="PORT" rules="9" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Property Files" name="PROPS" rules="17" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Security" name="SECURITY" rules="175" total="0">
               <Category authTot="0;" authUrg="0;" desc="Unsafe Environment Configuration" name="SECURITY.UEC" rules="38" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Unsafe Error Handling and Logging" name="SECURITY.UEHL" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Input-Based Attacks" name="SECURITY.IBA" rules="14" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Deadlocks and Race Conditions" name="SECURITY.DRC" rules="1" total="0"/>
               <Category authTot="50;" authUrg="3;" desc="Weak Security Controls" name="SECURITY.WSC" rules="81" total="50"/>
               <Category authTot="0;" authUrg="0;" desc="Backdoor Vulnerabilities" name="SECURITY.BV" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Erratic Application Behavior" name="SECURITY.EAB" rules="14" total="0"/>
               <Category authTot="7;" authUrg="0;" desc="Exposing Sensitive Data" name="SECURITY.ESD" rules="14" total="7"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Serialization" name="SERIAL" rules="18" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Servlets" name="SERVLET" rules="17" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Spring Framework" name="SPRING" rules="14" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Struts Framework" name="STRUTS" rules="30" total="0">
               <Category authTot="0;" authUrg="0;" desc="Struts 2" name="STRUTS.STRUTS2" rules="4" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Threads &amp; Synchronization" name="TRS" rules="52" total="0"/>
            <Category authTot="1;" authUrg="0;" desc="Unused Code" name="UC" rules="28" total="1"/>
            <Category authTot="0;" authUrg="0;" desc="XML Development" name="XML" rules="3" total="0"/>
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000070" desc="Ensure proper session expiration" id="APSC_DV.000070.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000080" desc="Ensure proper session expiration" id="APSC_DV.000080.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.000160.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000160.ADS" origId="SECURITY.UEC.ADS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000160.AELQ" origId="SECURITY.UEC.AELQ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.000160.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.000160.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.000160.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.000160.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000160.DSL" origId="SECURITY.UEC.DSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.000160.DSR" origId="SECURITY.UEC.DSR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000160.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.000160.FMCD" origId="SECURITY.UEC.FMCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.000160.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.000160.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.000160.ISOS" origId="SECURITY.UEC.ISOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000160.LCA" origId="SECURITY.UEC.LCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use hash functions with a salt" id="APSC_DV.000160.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.000160.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.000160.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000160.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000160.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.000160.RAJ" origId="SECURITY.UEC.RAJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.000160.REST" origId="SECURITY.UEC.REST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000160.SDAR" origId="SECURITY.UEC.SDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Always specify error pages in web.xml" id="APSC_DV.000160.SEP" origId="SECURITY.UEC.SEP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.000160.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using the SOAP Monitor module" id="APSC_DV.000160.SMM" origId="SECURITY.UEC.SMM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000160.SRCD" origId="SECURITY.UEC.SRCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.000160.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.000160.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000160.TDAR" origId="SECURITY.UEC.TDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.000160.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.000160.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.000160.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMI" origId="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCUTS" origId="SECURITY.UEC.WCUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.000160.WELC" origId="SECURITY.UEC.WELC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.000160.WSS" origId="SECURITY.UEC.WSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WUTS" origId="SECURITY.UEC.WUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.000170.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000170.ADS" origId="SECURITY.UEC.ADS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000170.AELQ" origId="SECURITY.UEC.AELQ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.000170.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.000170.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.000170.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.000170.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000170.DSL" origId="SECURITY.UEC.DSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.000170.DSR" origId="SECURITY.UEC.DSR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000170.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.000170.FMCD" origId="SECURITY.UEC.FMCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.000170.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.000170.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.000170.ISOS" origId="SECURITY.UEC.ISOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000170.LCA" origId="SECURITY.UEC.LCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use hash functions with a salt" id="APSC_DV.000170.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.000170.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.000170.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000170.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000170.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.000170.RAJ" origId="SECURITY.UEC.RAJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.000170.REST" origId="SECURITY.UEC.REST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000170.SDAR" origId="SECURITY.UEC.SDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Always specify error pages in web.xml" id="APSC_DV.000170.SEP" origId="SECURITY.UEC.SEP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.000170.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using the SOAP Monitor module" id="APSC_DV.000170.SMM" origId="SECURITY.UEC.SMM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000170.SRCD" origId="SECURITY.UEC.SRCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.000170.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.000170.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000170.TDAR" origId="SECURITY.UEC.TDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.000170.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.000170.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.000170.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMI" origId="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCUTS" origId="SECURITY.UEC.WCUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.000170.WELC" origId="SECURITY.UEC.WELC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.000170.WSS" origId="SECURITY.UEC.WSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WUTS" origId="SECURITY.UEC.WUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.000460.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000460.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Avoid EJB 3 methods without security annotations" id="APSC_DV.000460.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000460.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Keep all authentication methods centralized to enforce consistency" id="APSC_DV.000480.CAM" origId="SECURITY.WSC.CAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.000480.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure that an appropriate security manager is set" id="APSC_DV.000480.SSM" origId="SECURITY.WSC.SSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Protect against SQL injection" id="APSC_DV.000480.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid using anonymous &quot;privileged&quot; classes when invoking &quot;AccessController.doPrivileged()&quot;" id="APSC_DV.000500.ACDP" origId="SECURITY.WSC.ACDP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="APSC_DV.000500.PAF" origId="SECURITY.WSC.PAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Wrap &quot;privileged&quot; method invocations in &quot;final&quot; methods" id="APSC_DV.000500.PCFM" origId="SECURITY.BV.PCFM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="APSC_DV.000500.PCL" origId="SECURITY.EAB.PCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Wrap &quot;privileged&quot; method invocations in &quot;private&quot; methods" id="APSC_DV.000500.PCPM" origId="SECURITY.BV.PCPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="APSC_DV.000500.PDLC" origId="SECURITY.BV.PDLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package" id="APSC_DV.000500.PPKG" origId="SECURITY.WSC.PPKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid operating on tainted data in privileged blocks" id="APSC_DV.000500.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="APSC_DV.000500.PRMF" origId="SECURITY.WSC.PRMF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid using anonymous &quot;privileged&quot; classes when invoking &quot;AccessController.doPrivileged()&quot;" id="APSC_DV.000510.ACDP" origId="SECURITY.WSC.ACDP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="APSC_DV.000510.PAF" origId="SECURITY.WSC.PAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Wrap &quot;privileged&quot; method invocations in &quot;final&quot; methods" id="APSC_DV.000510.PCFM" origId="SECURITY.BV.PCFM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="APSC_DV.000510.PCL" origId="SECURITY.EAB.PCL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Wrap &quot;privileged&quot; method invocations in &quot;private&quot; methods" id="APSC_DV.000510.PCPM" origId="SECURITY.BV.PCPM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="APSC_DV.000510.PDLC" origId="SECURITY.BV.PDLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package" id="APSC_DV.000510.PPKG" origId="SECURITY.WSC.PPKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid operating on tainted data in privileged blocks" id="APSC_DV.000510.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="APSC_DV.000510.PRMF" origId="SECURITY.WSC.PRMF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Do not log confidential or sensitive information" id="APSC_DV.000650.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Ensure all sensitive method invocations are logged" id="APSC_DV.000650.ENFL" origId="SECURITY.BV.ENFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="APSC_DV.000650.LHII" origId="HIBERNATE.LHII" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Prevent exposure of sensitive data" id="APSC_DV.000650.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Avoid passing sensitive data to functions that write to log files" id="APSC_DV.000650.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Avoid untrusted input when logging messages with Seam Logging API" id="APSC_DV.001290.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.001290.LOG" origId="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against log forging" id="APSC_DV.001290.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against SQL injection" id="APSC_DV.001290.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Avoid untrusted input when logging messages with Seam Logging API" id="APSC_DV.001300.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.001300.LOG" origId="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against log forging" id="APSC_DV.001300.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="APSC_DV.001460.ACPST" origId="SECURITY.WSC.ACPST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="APSC_DV.001460.AECB" origId="PB.TYPO.AECB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.001460.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.001460.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.001460.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid parsing untrusted data with XMLDecoder" id="APSC_DV.001460.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Canonicalize data before validation" id="APSC_DV.001460.CDBV" origId="SECURITY.IBA.CDBV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not log confidential or sensitive information" id="APSC_DV.001460.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not disable CSRF protection" id="APSC_DV.001460.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not disable CSRF protection" id="APSC_DV.001460.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid duplicated forms in the 'validation.xml'" id="APSC_DV.001460.DFV" origId="STRUTS.DFV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using the DriverManagerDataSource class in production code" id="APSC_DV.001460.DMDS" origId="SECURITY.WSC.DMDS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid DNS lookups for decision making" id="APSC_DV.001460.DNSL" origId="SECURITY.WSC.DNSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="APSC_DV.001460.DPANY" origId="EJB.DPANY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="APSC_DV.001460.DUID" origId="SERIAL.DUID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Disable XML external entity injection" id="APSC_DV.001460.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure all sensitive method invocations are logged" id="APSC_DV.001460.ENFL" origId="SECURITY.BV.ENFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.001460.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure validators are enabled in the 'struts-config.xml'" id="APSC_DV.001460.EV" origId="STRUTS.EV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid debug information from Spring Security framework to logs" id="APSC_DV.001460.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.001460.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not hard-code IP addresses and port numbers" id="APSC_DV.001460.HCNA" origId="PORT.HCNA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.001460.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="APSC_DV.001460.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001460.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.001460.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.001460.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="APSC_DV.001460.ISL" origId="SECURITY.WSC.ISL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.001460.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Restrict cross-origin resource sharing to secure origins" id="APSC_DV.001460.JXCORS" origId="SECURITY.WSC.JXCORS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="APSC_DV.001460.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes" id="APSC_DV.001460.MASP" origId="PB.API.MASP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.001460.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use hash functions with a salt" id="APSC_DV.001460.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not catch exception types which are too general or are unchecked exceptions" id="APSC_DV.001460.NCE" origId="CODSTA.EPC.NCE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not catch 'NullPointerException'" id="APSC_DV.001460.NCNPE" origId="EXCEPT.NCNPE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not throw exception types which are too general or are unchecked exceptions" id="APSC_DV.001460.NTERR" origId="EXCEPT.NTERR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid declaring methods to throw general or unchecked Exception types" id="APSC_DV.001460.NTX" origId="CODSTA.BP.NTX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure method arguments are serializable" id="APSC_DV.001460.ONS" origId="PB.API.ONS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes" id="APSC_DV.001460.OROM" origId="SECURITY.EAB.OROM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure sufficient protection against multiple failed authentication attempts" id="APSC_DV.001460.PBFA" origId="SECURITY.WSC.PBFA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always specify absolute paths to execute commands" id="APSC_DV.001460.PBRTE" origId="SECURITY.WSC.PBRTE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001460.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.001460.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Password information should not be included in properties file in plaintext" id="APSC_DV.001460.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.001460.PLC" origId="SECURITY.ESD.PLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure Plugins are added in the 'struts-config.xml'" id="APSC_DV.001460.PLUGIN" origId="STRUTS.PLUGIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001460.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001460.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001460.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not declare entity beans as remote" id="APSC_DV.001460.RR" origId="EJB.RR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="APSC_DV.001460.RRSC" origId="SERIAL.RRSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure proper session expiration" id="APSC_DV.001460.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="APSC_DV.001460.RWAF" origId="SERIAL.RWAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Disable LDAP deserialization" id="APSC_DV.001460.SC" origId="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="APSC_DV.001460.SCBNP" origId="SERIAL.SCBNP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Prevent exposure of sensitive data" id="APSC_DV.001460.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always specify error pages in web.xml" id="APSC_DV.001460.SEP" origId="SECURITY.UEC.SEP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Initialize KeyGenerator instances" id="APSC_DV.001460.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="APSC_DV.001460.SIO" origId="SECURITY.ESD.SIO" sev="2" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.001460.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not store non-serializable objects as HttpSession attributes" id="APSC_DV.001460.SNSO" origId="SERIAL.SNSO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.001460.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="APSC_DV.001460.SROS" origId="SERIAL.SROS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Safely serialize sensitive data" id="APSC_DV.001460.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.001460.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Command injection" id="APSC_DV.001460.TDCMD" origId="BD.SECURITY.TDCMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Jakarta Digester injection" id="APSC_DV.001460.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Environment injection" id="APSC_DV.001460.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against File contents injection" id="APSC_DV.001460.TDFILES" origId="BD.SECURITY.TDFILES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against File names injection" id="APSC_DV.001460.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Exclude unsanitized user input from format strings" id="APSC_DV.001460.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against JXPath injection" id="APSC_DV.001460.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against LDAP injection" id="APSC_DV.001460.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Library injection" id="APSC_DV.001460.TDLIB" origId="BD.SECURITY.TDLIB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against log forging" id="APSC_DV.001460.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against network resource injection" id="APSC_DV.001460.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against using unprotected credentials" id="APSC_DV.001460.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against HTTP response splitting" id="APSC_DV.001460.TDRESP" origId="BD.SECURITY.TDRESP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Reflection injection" id="APSC_DV.001460.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not store untrusted data in HTTP session" id="APSC_DV.001460.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against SQL injection" id="APSC_DV.001460.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against XPath injection" id="APSC_DV.001460.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against XSS vulnerabilities" id="APSC_DV.001460.TDXSS" origId="BD.SECURITY.TDXSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="APSC_DV.001460.UOSC" origId="SECURITY.WSC.UOSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="APSC_DV.001460.UPS" origId="SECURITY.IBA.UPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.001460.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.001460.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always verify JarFile signatures" id="APSC_DV.001460.VJFS" origId="SECURITY.WSC.VJFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Validate objects before deserialization" id="APSC_DV.001460.VOBD" origId="SERIAL.VOBD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Properly validate server identity" id="APSC_DV.001460.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001460.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001460.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001660.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001660.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001660.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001680" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="APSC_DV.001680.MLVP" origId="STRUTS.MLVP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001740.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001740.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001740.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001740.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001740.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001750.ADS" origId="SECURITY.UEC.ADS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001750.AELQ" origId="SECURITY.UEC.AELQ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001750.DSL" origId="SECURITY.UEC.DSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.001750.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001750.EDAR" origId="SECURITY.UEC.EDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.001750.FMCD" origId="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001750.HTTPS" origId="SECURITY.UEC.HTTPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.001750.ISOS" origId="SECURITY.UEC.ISOS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.001750.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001750.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001750.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001750.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001750.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.001750.RAJ" origId="SECURITY.UEC.RAJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.001750.REST" origId="SECURITY.UEC.REST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001750.SDAR" origId="SECURITY.UEC.SDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Always specify error pages in web.xml" id="APSC_DV.001750.SEP" origId="SECURITY.UEC.SEP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.001750.SLID" origId="SECURITY.UEC.SLID" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid using the SOAP Monitor module" id="APSC_DV.001750.SMM" origId="SECURITY.UEC.SMM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.001750.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.001750.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001750.TDAR" origId="SECURITY.UEC.TDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.001750.UDC" origId="SECURITY.UEC.UDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001750.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMC" origId="SECURITY.UEC.WCMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMI" origId="SECURITY.UEC.WCMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMT" origId="SECURITY.UEC.WCMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCUTS" origId="SECURITY.UEC.WCUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.001750.WELC" origId="SECURITY.UEC.WELC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMC" origId="SECURITY.UEC.WMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMI" origId="SECURITY.UEC.WMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMT" origId="SECURITY.UEC.WMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.001750.WSS" origId="SECURITY.UEC.WSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WUTS" origId="SECURITY.UEC.WUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001850.ADS" origId="SECURITY.UEC.ADS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001850.AELQ" origId="SECURITY.UEC.AELQ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001850.DSL" origId="SECURITY.UEC.DSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.001850.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001850.EDAR" origId="SECURITY.UEC.EDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.001850.FMCD" origId="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001850.HTTPS" origId="SECURITY.UEC.HTTPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.001850.ISOS" origId="SECURITY.UEC.ISOS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.001850.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001850.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001850.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001850.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001850.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.001850.RAJ" origId="SECURITY.UEC.RAJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.001850.REST" origId="SECURITY.UEC.REST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001850.SDAR" origId="SECURITY.UEC.SDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Always specify error pages in web.xml" id="APSC_DV.001850.SEP" origId="SECURITY.UEC.SEP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.001850.SLID" origId="SECURITY.UEC.SLID" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid using the SOAP Monitor module" id="APSC_DV.001850.SMM" origId="SECURITY.UEC.SMM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.001850.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.001850.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001850.TDAR" origId="SECURITY.UEC.TDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.001850.UDC" origId="SECURITY.UEC.UDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001850.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMC" origId="SECURITY.UEC.WCMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMI" origId="SECURITY.UEC.WCMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMT" origId="SECURITY.UEC.WCMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCUTS" origId="SECURITY.UEC.WCUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.001850.WELC" origId="SECURITY.UEC.WELC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMC" origId="SECURITY.UEC.WMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMI" origId="SECURITY.UEC.WMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMT" origId="SECURITY.UEC.WMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.001850.WSS" origId="SECURITY.UEC.WSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WUTS" origId="SECURITY.UEC.WUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.001860.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.001860.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.001860.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.001860.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.001860.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Use hash functions with a salt" id="APSC_DV.001860.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.001860.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="APSC_DV.001995.DCL" origId="TRS.DCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="APSC_DV.001995.TOCTOU" origId="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002000" desc="Ensure resources are deallocated" id="APSC_DV.002000.LEAKS" origId="BD.RES.LEAKS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002010.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002010.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002010.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002010.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002010.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002210" desc="Mark cookies as HttpOnly" id="APSC_DV.002210.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002220" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="APSC_DV.002220.UOSC" origId="SECURITY.WSC.UOSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002290.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Use hash functions with a salt" id="APSC_DV.002290.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.002290.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002350.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Do not use initialization circularities for fields" id="APSC_DV.002350.IC" origId="INIT.IC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002400" desc="Protect against network resource injection" id="APSC_DV.002400.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Do not log confidential or sensitive information" id="APSC_DV.002440.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Do not hard-code IP addresses and port numbers" id="APSC_DV.002440.HCNA" origId="PORT.HCNA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Password information should not be included in properties file in plaintext" id="APSC_DV.002440.PLAIN" origId="PROPS.PLAIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.002440.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Prevent exposure of sensitive data" id="APSC_DV.002440.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Prevent exposure of sensitive data" id="APSC_DV.002460.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Prevent exposure of sensitive data" id="APSC_DV.002470.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Prevent exposure of sensitive data" id="APSC_DV.002480.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002490" desc="Protect against XSS vulnerabilities" id="APSC_DV.002490.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Do not disable CSRF protection" id="APSC_DV.002500.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Do not disable CSRF protection" id="APSC_DV.002500.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Validate all dangerous data" id="APSC_DV.002500.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against Command injection" id="APSC_DV.002510.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against Environment injection" id="APSC_DV.002520.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against File names injection" id="APSC_DV.002520.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against LDAP injection" id="APSC_DV.002520.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against network resource injection" id="APSC_DV.002520.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against SQL injection" id="APSC_DV.002520.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Command injection" id="APSC_DV.002530.TDCMD" origId="BD.SECURITY.TDCMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Jakarta Digester injection" id="APSC_DV.002530.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Environment injection" id="APSC_DV.002530.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against File contents injection" id="APSC_DV.002530.TDFILES" origId="BD.SECURITY.TDFILES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against File names injection" id="APSC_DV.002530.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against JXPath injection" id="APSC_DV.002530.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against LDAP injection" id="APSC_DV.002530.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Library injection" id="APSC_DV.002530.TDLIB" origId="BD.SECURITY.TDLIB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against network resource injection" id="APSC_DV.002530.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Reflection injection" id="APSC_DV.002530.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against SQL injection" id="APSC_DV.002530.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against XML data injection" id="APSC_DV.002530.TDXML" origId="BD.SECURITY.TDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against XPath injection" id="APSC_DV.002530.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002540" desc="Protect against SQL injection" id="APSC_DV.002540.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Protect against XML data injection" id="APSC_DV.002550.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Command injection" id="APSC_DV.002560.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Jakarta Digester injection" id="APSC_DV.002560.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Environment injection" id="APSC_DV.002560.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against File contents injection" id="APSC_DV.002560.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against File names injection" id="APSC_DV.002560.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against JXPath injection" id="APSC_DV.002560.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against LDAP injection" id="APSC_DV.002560.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Library injection" id="APSC_DV.002560.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against network resource injection" id="APSC_DV.002560.TDNET" origId="BD.SECURITY.TDNET" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Reflection injection" id="APSC_DV.002560.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against SQL injection" id="APSC_DV.002560.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against XML data injection" id="APSC_DV.002560.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against XPath injection" id="APSC_DV.002560.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Do not log confidential or sensitive information" id="APSC_DV.002570.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Do not cast primitive data types to lower precision" id="APSC_DV.002590.CLP" origId="PB.NUM.CLP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Avoid calculations which result in overflow or NaN" id="APSC_DV.002590.ICO" origId="PB.NUM.ICO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Use unsigned right shift instead of division when overflow is possible" id="APSC_DV.002590.IOF" origId="PB.NUM.IOF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="APSC_DV.003110.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Use '()' to separate complex expressions" id="APSC_DV.003215.APAREN" origId="FORMAT.APAREN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Ensure proper spacing in array references" id="APSC_DV.003215.ASPACE" origId="FORMAT.ASPACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Do not place empty whitespace at the end of a line" id="APSC_DV.003215.ATS" origId="FORMAT.ATS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Put a blank line before each C-style comment" id="APSC_DV.003215.BLBC" origId="FORMAT.BLBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="12;" authUrg="2;" cat="APSC_DV.003215" desc="Enforce number of blank line(s) before type declarations" id="APSC_DV.003215.BLCD" origId="FORMAT.BLCD" sev="3" total="12"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of blank line(s) to separate &quot;imports&quot; from different packages" id="APSC_DV.003215.BLSIM" origId="FORMAT.BLSIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place a closing brace on its own line" id="APSC_DV.003215.CBRACE" origId="FORMAT.CBRACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place a single space character or no space character after type casting" id="APSC_DV.003215.CMS" origId="FORMAT.CMS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Do not leave spaces between qualified names and method invocations" id="APSC_DV.003215.DOT" origId="FORMAT.DOT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Use spaces instead of tabs (or tabs instead of spaces)" id="APSC_DV.003215.DUT" origId="FORMAT.DUT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce the position of '{' brace" id="APSC_DV.003215.FCB" origId="FORMAT.FCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place the type that has the same name as the file as the first type" id="APSC_DV.003215.FCN" origId="FORMAT.FCN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Declare arrays with '[]' brackets after the array type and before the variable name(s)" id="APSC_DV.003215.IAD" origId="FORMAT.IAD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="1;" cat="APSC_DV.003215" desc="Enforce number of space(s) for indentation" id="APSC_DV.003215.IND" origId="FORMAT.IND" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Limit the maximum length of a line" id="APSC_DV.003215.LL" origId="FORMAT.LL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="APSC_DV.003215" desc="Include a meaningful file header comment in every source file" id="APSC_DV.003215.MCH" origId="FORMAT.MCH" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce the order of annotations and modifiers" id="APSC_DV.003215.MO" origId="FORMAT.MO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place a single space character or no space character between a method name and the opening &quot;(&quot; parenthesis" id="APSC_DV.003215.MSP" origId="FORMAT.MSP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Do not place statements on the same line as the '{' opening brace" id="APSC_DV.003215.NSAB" origId="FORMAT.NSAB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Write one statement per line" id="APSC_DV.003215.OSPL" origId="FORMAT.OSPL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) after every comma" id="APSC_DV.003215.SAC" origId="FORMAT.SAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of an assignment operator" id="APSC_DV.003215.SAOP" origId="FORMAT.SAOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) after the opening parenthesis &quot;(&quot; of a conditional statement" id="APSC_DV.003215.SAP" origId="FORMAT.SAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) after every semicolon" id="APSC_DV.003215.SAS" origId="FORMAT.SAS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) between a prefixed unary operator and its operand" id="APSC_DV.003215.SAUOP" origId="FORMAT.SAUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of a bitwise operator" id="APSC_DV.003215.SBOP" origId="FORMAT.SBOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) between a postfixed unary operator and its operand" id="APSC_DV.003215.SBUOP" origId="FORMAT.SBUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) between a conditional statement and the opening &quot;(&quot; parenthesis" id="APSC_DV.003215.SC" origId="FORMAT.SC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) before and after the &quot;?&quot; conditional operator" id="APSC_DV.003215.SCOP" origId="FORMAT.SCOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of a logical operator" id="APSC_DV.003215.SLOP" origId="FORMAT.SLOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of a relational operator" id="APSC_DV.003215.SROP" origId="FORMAT.SROP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Avoid using trailing comments" id="APSC_DV.003215.TC" origId="FORMAT.TC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Avoid or enforce the use of trailing commas in array initializers" id="APSC_DV.003215.TCOMMA" origId="FORMAT.TCOMMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Use the preferred formatting for conditional expressions" id="APSC_DV.003215.TE" origId="FORMAT.TE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Make sure all files are terminated with a newline character" id="APSC_DV.003215.TNL" origId="FORMAT.TNL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="15;" authUrg="2;" cat="APSC_DV.003215" desc="Enforce number of blank line(s) between major sections" id="APSC_DV.003215.U2BL" origId="FORMAT.U2BL" sev="3" total="15"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Avoid unnecessary parentheses" id="APSC_DV.003215.UP" origId="FORMAT.UP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Check the return value of methods which read or skip input" id="APSC_DV.003235.CRRV" origId="PB.LOGIC.CRRV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.API" desc="Make sure implementation of Object.equals(Object) properly handles null values" id="BD.API.EQNULL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.API" desc="Make sure implementation of Object.equals(Object) is reflexive" id="BD.API.EQREFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.API" desc="Do not rely on the write() method to output integers outside the range 0 to 255" id="BD.API.ARGWRITE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.CO" desc="Do not modify collection while iterating over it" id="BD.CO.ITMOD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.EXCEPT" desc="Avoid NullPointerException" id="BD.EXCEPT.NP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.OPT" desc="Avoid inefficient removal of Collection elements" id="BD.OPT.INEFCOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.OPT" desc="Avoid inefficient iteration over Map entries" id="BD.OPT.INEFMAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.OPT" desc="Avoid inefficient removal of Map entries" id="BD.OPT.INEFMAPRM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid use before explicit initialization" id="BD.PB.NOTEXPLINIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid use of fields before initialization in constructors and static initializers" id="BD.PB.NOTINITCTOR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid overwriting method parameters before each use" id="BD.PB.POVR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Do not append null value to strings" id="BD.PB.STRNULL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid division by zero" id="BD.PB.ZERO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid accessing arrays out of bounds" id="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid incorrect shift operations" id="BD.PB.BADSHIFT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid conditions that always evaluate to the same value" id="BD.PB.CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Consistently check the returned value of non-void methods" id="BD.PB.CHECKRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Always catch exceptions" id="BD.PB.EXCEPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Method getPermission() is supposed to be invoked when user-defined class loaders are applied" id="BD.PB.GETPERM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid infinite recursion" id="BD.PB.INFREC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Do not create multiple buffered wrappers on a single byte or character stream" id="BD.PB.MULBUF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Do not invoke overridable methods from the readObject() method" id="BD.PB.VREADOBJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Do not check for null after dereferencing" id="BD.PB.DEREF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid integer overflows" id="BD.PB.INTOVERF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Prevent external processes from blocking on input and output streams" id="BD.PB.PBIOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Ensure proper usage of StringBuilder/StringBuffer objects" id="BD.PB.SBONE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid switch with unreachable branches" id="BD.PB.SWITCH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;" authUrg="0;" cat="BD.PB" desc="Avoid unused values" id="BD.PB.VOVR" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Methods shall not call themselves, either directly or indirectly" id="BD.PB.RECFUN" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Restore prior object state on method failure" id="BD.PB.REVOBJ" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.RES" desc="Do not use resources that have been freed" id="BD.RES.FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.RES" desc="Ensure resources are deallocated" id="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Avoid unvalidated input in array indexes" id="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Prevent exposure of sensitive data" id="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Command injection" id="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Validate potentially tainted data before it is used in methods that generate code" id="BD.SECURITY.TDCODE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Jakarta Digester injection" id="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Environment injection" id="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against File contents injection" id="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against File names injection" id="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Exclude unsanitized user input from format strings" id="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against JXPath injection" id="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against LDAP injection" id="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Library injection" id="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against HTTP response splitting" id="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Reflection injection" id="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Do not store untrusted data in HTTP session" id="BD.SECURITY.TDSESSION" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against SQL injection" id="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against XML data injection" id="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against XPath injection" id="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against XSS vulnerabilities" id="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Path should be standardized before validation" id="BD.SECURITY.CANPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Encapsulate arguments of dangerous methods with a validation method" id="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Check floating-point inputs for exceptional values" id="BD.SECURITY.FPEXC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Avoid passing unvalidated binary data to log methods" id="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Avoid operating on tainted data in privileged blocks" id="BD.SECURITY.PRIVIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Remove temporary files before termination" id="BD.SECURITY.REMTMP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Avoid passing sensitive data to functions that write to log files" id="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Do not rely on the default automatic signature verification provided by URLClassLoader and java.util.jar" id="BD.SECURITY.SIGCLASS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against log forging" id="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against network resource injection" id="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against using unprotected credentials" id="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Validate all dangerous data" id="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Validate untrusted XML using schema or DTD before reading" id="BD.SECURITY.XMLVAL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Do not expose data wrapped by a buffer to untrusted code" id="BD.SECURITY.BUFEXP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Prevent security vulnerability (custom rule)" id="BD.SECURITY.CUSTOM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Safely serialize sensitive data" id="BD.SECURITY.SSSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Avoid double locking" id="BD.TRS.DLOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not abandon unreleased locks" id="BD.TRS.LOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not acquire locks in different order" id="BD.TRS.ORDER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not use blocking methods while holding a lock" id="BD.TRS.TSHL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Variable should be used in context of single critical section" id="BD.TRS.DIFCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not use an instance lock to protect shared static data" id="BD.TRS.INSTLOCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="BEAN" desc="Use appropriate signatures for listener method names in JavaBean classes" id="BEAN.BLNC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="BEAN" desc="Override 'Object.equals()' in JavaBean classes" id="BEAN.EQUALS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="BEAN" desc="Do not use JDBC code in JavaBean classes" id="BEAN.JDBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="BEAN" desc="Ensure that JavaBean classes implement 'java.io.Serializable'" id="BEAN.SERIALIZABLE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="8;" authUrg="0;" cat="BEAN" desc="Define get and set methods for each instance field" id="BEAN.NFM" sev="4" total="8"/>
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid method duplication" id="CDD.DUPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid class duplication" id="CDD.DUPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid code duplication" id="CDD.DUPC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid duplicate import statements" id="CDD.DUPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="1;" authUrg="1;" cat="CDD" desc="Avoid string literal duplication" id="CDD.DUPS" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid duplicated field initialization in constructors" id="CDD.DFI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.DCL00" desc="Ensure that files do not contain cyclical dependencies" id="CERT.DCL00.ACD" origId="GLOBAL.ACD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.DCL02" desc="Do not modify collection while iterating over it" id="CERT.DCL02.ITMOD" origId="BD.CO.ITMOD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ENV02" desc="Do not use the non-portable 'System.getenv()' method" id="CERT.ENV02.ENV" origId="PORT.ENV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR00" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="CERT.ERR00.LGE" origId="SECURITY.UEHL.LGE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR00" desc="Use a caught exception in the &quot;catch&quot; block" id="CERT.ERR00.UCATCH" origId="UC.UCATCH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR01" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="CERT.ERR01.ACPST" origId="SECURITY.WSC.ACPST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR01" desc="Avoid writing to Consoles" id="CERT.ERR01.ACW" origId="SECURITY.ESD.ACW" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR01" desc="Catch all exceptions which may be thrown within Servlet methods" id="CERT.ERR01.CETS" origId="SERVLET.CETS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.ERR03" desc="Restore prior object state on method failure" id="CERT.ERR03.REVOBJ" origId="BD.PB.REVOBJ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR04" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="CERT.ERR04.ARCF" origId="PB.CUB.ARCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR04" desc="Do not exit &quot;finally&quot; blocks abruptly" id="CERT.ERR04.ATSF" origId="PB.CUB.ATSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR05" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="CERT.ERR05.ARCF" origId="PB.CUB.ARCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR05" desc="Do not exit &quot;finally&quot; blocks abruptly" id="CERT.ERR05.ATSF" origId="PB.CUB.ATSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR07" desc="Do not throw exception types which are too general or are unchecked exceptions" id="CERT.ERR07.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR07" desc="Avoid declaring methods to throw general or unchecked Exception types" id="CERT.ERR07.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR08" desc="Do not catch 'NullPointerException'" id="CERT.ERR08.NCNPE" origId="EXCEPT.NCNPE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR09" desc="Do not call methods which terminates Java Virtual Machine" id="CERT.ERR09.EXIT" origId="CODSTA.BP.EXIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR09" desc="Do not stop the JVM in a web component" id="CERT.ERR09.JVM" origId="SECURITY.EAB.JVM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP00" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="CERT.EXP00.AECB" origId="PB.TYPO.AECB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP00" desc="Ensure method and constructor return values are used" id="CERT.EXP00.NASSIG" origId="PB.USC.NASSIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP01" desc="Ensure that dereferenced variables match variables which were previously checked for &quot;null&quot;" id="CERT.EXP01.NCMD" origId="PB.RE.NCMD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.EXP01" desc="Avoid NullPointerException" id="CERT.EXP01.NP" origId="BD.EXCEPT.NP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP02" desc="Do not use '==' or '!=' to compare objects" id="CERT.EXP02.UEIC" origId="PB.CUB.UEIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP03" desc="Do not use '==' or '!=' to compare objects" id="CERT.EXP03.UEIC" origId="PB.CUB.UEIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP05" desc="Avoid using increment or decrement operators in nested expressions" id="CERT.EXP05.CID" origId="CODSTA.READ.CID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO03" desc="Avoid temporary files" id="CERT.FIO03.ATF" origId="SECURITY.IBA.ATF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO03" desc="Remove temporary files before termination" id="CERT.FIO03.REMTMP" origId="BD.SECURITY.REMTMP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO04" desc="Close all &quot;java.io.Closeable&quot; resources in a &quot;finally&quot; block" id="CERT.FIO04.CCR" origId="OPT.CCR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO04" desc="Close input and output resources in &quot;finally&quot; blocks" id="CERT.FIO04.CIO" origId="OPT.CIO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO04" desc="Ensure resources are deallocated" id="CERT.FIO04.LEAKS" origId="BD.RES.LEAKS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO05" desc="Do not expose data wrapped by a buffer to untrusted code" id="CERT.FIO05.BUFEXP" origId="BD.SECURITY.BUFEXP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO06" desc="Do not create multiple buffered wrappers on a single byte or character stream" id="CERT.FIO06.MULBUF" origId="BD.PB.MULBUF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO07" desc="Do not use &quot;Runtime.exec()&quot;" id="CERT.FIO07.EXEC" origId="PORT.EXEC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO08" desc="Check the return value of methods which read or skip input" id="CERT.FIO08.CRRV" origId="PB.LOGIC.CRRV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO09" desc="Do not rely on the write() method to output integers outside the range 0 to 255" id="CERT.FIO09.ARGWRITE" origId="BD.API.ARGWRITE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO12" desc="Provide methods to read and write little-endian data" id="CERT.FIO12.PMRWLED" origId="PB.NUM.PMRWLED" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO13" desc="Do not log confidential or sensitive information" id="CERT.FIO13.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CERT.FIO13" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="CERT.FIO13.LHII" origId="HIBERNATE.LHII" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO13" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="CERT.FIO13.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO13" desc="Prevent exposure of sensitive data" id="CERT.FIO13.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO14" desc="Close all &quot;java.io.Closeable&quot; resources in a &quot;finally&quot; block" id="CERT.FIO14.CCR" origId="OPT.CCR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO14" desc="Close input and output resources in &quot;finally&quot; blocks" id="CERT.FIO14.CIO" origId="OPT.CIO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO14" desc="Close resources as early as possible" id="CERT.FIO14.CRWD" origId="OPT.CRWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO16" desc="Canonicalize data before validation" id="CERT.FIO16.CDBV" origId="SECURITY.IBA.CDBV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.IDS00" desc="Protect against SQL injection" id="CERT.IDS00.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.IDS03" desc="Protect against log forging" id="CERT.IDS03.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.IDS06" desc="Ensure the correct number of arguments for varargs methods with format strings" id="CERT.IDS06.VAFS" origId="PB.API.VAFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.IDS07" desc="Do not use &quot;Runtime.exec()&quot;" id="CERT.IDS07.EXEC" origId="PORT.EXEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.IDS11" desc="Validate all dangerous data" id="CERT.IDS11.VPPD" origId="BD.SECURITY.VPPD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.IDS16" desc="Protect against XML data injection" id="CERT.IDS16.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.JNI00" desc="Use wrapper methods to secure native methods" id="CERT.JNI00.NATIW" origId="SECURITY.IBA.NATIW" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.JNI01" desc="Protect against Library injection" id="CERT.JNI01.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK00" desc="Do not synchronize on &quot;public&quot; fields since doing so may cause deadlocks" id="CERT.LCK00.SOPF" origId="TRS.SOPF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK01" desc="Do not synchronize on constant Strings" id="CERT.LCK01.SCS" origId="TRS.SCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK02" desc="Do not synchronize on the class object returned by the 'getClass' method" id="CERT.LCK02.SGC" origId="TRS.SGC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK04" desc="Do not synchronize on a collection view if the backing collection is accessible" id="CERT.LCK04.SOBC" origId="TRS.SOBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK05" desc="Inspect accesses to &quot;static&quot; fields which may require synchronization" id="CERT.LCK05.IASF" origId="TRS.IASF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.LCK06" desc="Do not use an instance lock to protect shared static data" id="CERT.LCK06.INSTLOCK" origId="BD.TRS.INSTLOCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK07" desc="Ensure that nested locks are ordered correctly" id="CERT.LCK07.LORD" origId="TRS.LORD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.LCK08" desc="Do not abandon unreleased locks" id="CERT.LCK08.LOCK" origId="BD.TRS.LOCK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK08" desc="Release Locks in a &quot;finally&quot; block" id="CERT.LCK08.RLF" origId="TRS.RLF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.LCK09" desc="Do not use blocking methods while holding a lock" id="CERT.LCK09.TSHL" origId="BD.TRS.TSHL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK09" desc="Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks" id="CERT.LCK09.TSHL2" origId="TRS.TSHL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK10" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="CERT.LCK10.DCL" origId="TRS.DCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET02" desc="Do not use deprecated APIs" id="CERT.MET02.DPRAPI" origId="PB.API.DPRAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET02" desc="Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'" id="CERT.MET02.THRD" origId="TRS.THRD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET04" desc="Do not override an instance &quot;private&quot; method" id="CERT.MET04.OPM" origId="OOP.OPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET06" desc="Make your 'clone()' method &quot;final&quot; for security" id="CERT.MET06.CLONE" origId="SECURITY.WSC.CLONE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET07" desc="Do not hide inherited &quot;static&quot; member methods" id="CERT.MET07.AHSM" origId="OOP.AHSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.MET08" desc="Make sure implementation of Object.equals(Object) is reflexive" id="CERT.MET08.EQREFL" origId="BD.API.EQREFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET09" desc="Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa" id="CERT.MET09.OVERRIDE" origId="CODSTA.OIM.OVERRIDE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET11" desc="Ensure that keys used in comparison operations are immutable" id="CERT.MET11.IKICO" origId="PB.IKICO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Avoid empty &quot;finalize()&quot; methods" id="CERT.MET12.EF" origId="UC.EF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Call 'super.finalize()' from 'finalize()'" id="CERT.MET12.FCF" origId="GC.FCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Avoid redundant 'finalize()' methods which only call the superclass' 'finalize()' method" id="CERT.MET12.FCSF" origId="UC.FCSF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Do not use 'finalize()' methods to unregister listeners" id="CERT.MET12.FM" origId="GC.FM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Call 'super.finalize()' in the &quot;finally&quot; block of 'finalize()' methods" id="CERT.MET12.IFF" origId="GC.IFF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Give &quot;finalize()&quot; methods &quot;protected&quot; access" id="CERT.MET12.MFP" origId="OOP.MFP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Do not define 'finalize()' method in bean classes" id="CERT.MET12.MNDF" origId="EJB.MNDF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Do not call 'finalize()' explicitly" id="CERT.MET12.NCF" origId="GC.NCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Do not overload the 'finalize()' method" id="CERT.MET12.OF" origId="PB.API.OF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC00" desc="Use the SSL-enabled version of classes when possible" id="CERT.MSC00.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC01" desc="Avoid control statements with empty bodies" id="CERT.MSC01.EB" origId="PB.TYPO.EB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC02" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="CERT.MSC02.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC03" desc="Avoid hard-coding the arguments to certain methods" id="CERT.MSC03.AHCA" origId="SECURITY.WSC.AHCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC03" desc="Avoid using hard-coded cryptographic keys" id="CERT.MSC03.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC03" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="CERT.MSC03.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.MSC04" desc="Ensure resources are deallocated" id="CERT.MSC04.LEAKS" origId="BD.RES.LEAKS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.MSC06" desc="Do not modify collection while iterating over it" id="CERT.MSC06.ITMOD" origId="BD.CO.ITMOD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC07" desc="Make lazy initializations thread-safe" id="CERT.MSC07.ILI" origId="TRS.ILI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM00" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CERT.NUM00.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM00" desc="Avoid using compound assignment operators in cases which may cause overflow" id="CERT.NUM00.CACO" origId="PB.NUM.CACO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM00" desc="Avoid calculations which result in overflow or NaN" id="CERT.NUM00.ICO" origId="PB.NUM.ICO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.NUM01" desc="Avoid incorrect shift operations" id="CERT.NUM01.BADSHIFT" origId="BD.PB.BADSHIFT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM01" desc="Do not perform bitwise and arithmetic operations on the same data" id="CERT.NUM01.NCBAV" origId="CODSTA.EPC.NCBAV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.NUM02" desc="Avoid division by zero" id="CERT.NUM02.ZERO" origId="BD.PB.ZERO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM04" desc="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" id="CERT.NUM04.UBD" origId="PB.NUM.UBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM07" desc="Avoid comparisons to Double.NaN or Float.NaN" id="CERT.NUM07.NAN" origId="PB.NUM.NAN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.NUM08" desc="Check floating-point inputs for exceptional values" id="CERT.NUM08.FPEXC" origId="BD.SECURITY.FPEXC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM09" desc="Do not use floating point variables as loop indices" id="CERT.NUM09.FPLI" origId="PB.NUM.FPLI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM10" desc="Do not pass floating point values to the 'BigDecimal' constructor" id="CERT.NUM10.BBDCC" origId="PB.NUM.BBDCC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM12" desc="Do not cast primitive data types to lower precision" id="CERT.NUM12.CLP" origId="PB.NUM.CLP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM13" desc="Avoid implicit casts from integer data types to floating point data types" id="CERT.NUM13.AIC" origId="PB.NUM.AIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ03" desc="Avoid conversions from parameterized types to raw types" id="CERT.OBJ03.AGBPT" origId="CODSTA.EPC.AGBPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ04" desc="Make your 'clone()' method &quot;final&quot; for security" id="CERT.OBJ04.CLONE" origId="SECURITY.WSC.CLONE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ04" desc="Enforce returning a defensive copy in 'clone()' methods" id="CERT.OBJ04.CPCL" origId="SECURITY.EAB.CPCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ04" desc="Do not pass user-given mutable objects directly to certain types" id="CERT.OBJ04.MPT" origId="SECURITY.EAB.MPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="1;" cat="CERT.OBJ04" desc="Provide mutable classes with copy functionality" id="CERT.OBJ04.MUCOP" origId="OOP.MUCOP" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ04" desc="Do not store user-given mutable objects directly into variables" id="CERT.OBJ04.SMO" origId="SECURITY.EAB.SMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ05" desc="Enforce returning a defensive copy in 'clone()' methods" id="CERT.OBJ05.CPCL" origId="SECURITY.EAB.CPCL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ05" desc="Do not pass user-given mutable objects directly to certain types" id="CERT.OBJ05.MPT" origId="SECURITY.EAB.MPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="CERT.OBJ05" desc="Provide mutable classes with copy functionality" id="CERT.OBJ05.MUCOP" origId="OOP.MUCOP" sev="1" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ05" desc="Do not store user-given mutable objects directly into variables" id="CERT.OBJ05.SMO" origId="SECURITY.EAB.SMO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ06" desc="Enforce returning a defensive copy in 'clone()' methods" id="CERT.OBJ06.CPCL" origId="SECURITY.EAB.CPCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ06" desc="Do not pass user-given mutable objects directly to certain types" id="CERT.OBJ06.MPT" origId="SECURITY.EAB.MPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="1;" cat="CERT.OBJ06" desc="Provide mutable classes with copy functionality" id="CERT.OBJ06.MUCOP" origId="OOP.MUCOP" sev="2" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ06" desc="Do not store user-given mutable objects directly into variables" id="CERT.OBJ06.SMO" origId="SECURITY.EAB.SMO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;" authUrg="2;" cat="CERT.OBJ07" desc="Make your classes noncloneable" id="CERT.OBJ07.MCNC" origId="SECURITY.WSC.MCNC" sev="2" total="10"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ08" desc="Make all member classes &quot;private&quot;" id="CERT.OBJ08.INNER" origId="SECURITY.WSC.INNER" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ09" desc="Do not compare Class objects by name" id="CERT.OBJ09.CMP" origId="SECURITY.EAB.CMP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ10" desc="Avoid referencing mutable fields" id="CERT.OBJ10.RMO" origId="PB.CUB.RMO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ10" desc="Inspect 'static' fields which may have intended to be declared 'static final'" id="CERT.OBJ10.SPFF" origId="SECURITY.EAB.SPFF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ11" desc="Do not throw exceptions from constructors of &quot;public&quot; non-&quot;final&quot; classes" id="CERT.OBJ11.EPNFC" origId="EXCEPT.EPNFC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.SEC01" desc="Avoid operating on tainted data in privileged blocks" id="CERT.SEC01.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.SEC02" desc="Protect against Reflection injection" id="CERT.SEC02.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SEC03" desc="Do not access the class loader in a web component" id="CERT.SEC03.ACL" origId="SECURITY.BV.ACL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SEC04" desc="Enforce 'SecurityManager' checks before setting or getting fields" id="CERT.SEC04.SCF" origId="SECURITY.WSC.SCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SEC05" desc="Avoid using reflection methods" id="CERT.SEC05.ARM" origId="CODSTA.BP.ARM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER00" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="CERT.SER00.DUID" origId="SERIAL.DUID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER01" desc="Ensure that the 'readObject()' and 'writeObject()' methods have the correct signature" id="CERT.SER01.ROWO" origId="SERIAL.ROWO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER03" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="CERT.SER03.SIF" origId="SECURITY.ESD.SIF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER04" desc="Enforce 'SecurityManager' checks in methods of 'Serializable' classes" id="CERT.SER04.SCSER" origId="SECURITY.WSC.SCSER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER07" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="CERT.SER07.RRSC" origId="SERIAL.RRSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.SER09" desc="Do not invoke overridable methods from the readObject() method" id="CERT.SER09.VREADOBJ" origId="BD.PB.VREADOBJ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER11" desc="Avoid re-initializing fields in the 'readExternal()' method of 'Externalizable' classes" id="CERT.SER11.IRX" origId="SERIAL.IRX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="4;" authUrg="1;" cat="CERT.STR00" desc="Do not use String concatenation in an Internationalized environment" id="CERT.STR00.COS" origId="INTER.COS" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.STR01" desc="Do not assume that a Java char fully represents a Unicode code point" id="CERT.STR01.NCUCP" origId="PB.CUB.NCUCP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.STR02" desc="Use the optional java.util.Locale parameter" id="CERT.STR02.CCL" origId="INTER.CCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.STR02" desc="Do not call 'Character.toLowerCase(char)' or 'Character.toUpperCase(char)' in an internationalized environment" id="CERT.STR02.CTLC" origId="INTER.CTLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI00" desc="Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'" id="CERT.THI00.IRUN" origId="TRS.IRUN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI01" desc="Do not use variables of the unsafe type 'java.lang.ThreadGroup'" id="CERT.THI01.AUTG" origId="TRS.AUTG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI02" desc="Do not use 'notify()'; use 'notifyAll()' instead so that all waiting threads will be notified" id="CERT.THI02.ANF" origId="TRS.ANF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI03" desc="Call 'wait()' and 'await()' only inside a loop that tests the liveness condition" id="CERT.THI03.UWIL" origId="TRS.UWIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI05" desc="Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'" id="CERT.THI05.THRD" origId="TRS.THRD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.TPS00" desc="Do not call the 'start()' method directly on Thread class instances" id="CERT.TPS00.ISTART" origId="TRS.ISTART" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.TSM00" desc="Avoid overriding synchronized methods with non-synchronized methods" id="CERT.TSM00.OSNS" origId="TRS.OSNS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.TSM01" desc="Do not let &quot;this&quot; reference escape during construction" id="CERT.TSM01.CTRE" origId="TRS.CTRE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.TSM02" desc="Do not call the &quot;start&quot; method of threads from inside a constructor" id="CERT.TSM02.CSTART" origId="TRS.CSTART" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA00" desc="Ensure that nested locks are ordered correctly" id="CERT.VNA00.LORD" origId="TRS.LORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA00" desc="Access related Atomic variables in a synchronized block" id="CERT.VNA00.MRAV" origId="TRS.MRAV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA02" desc="Access related Atomic variables in a synchronized block" id="CERT.VNA02.MRAV" origId="TRS.MRAV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA02" desc="Make the get method for a field synchronized if the set method is synchronized" id="CERT.VNA02.SSUG" origId="TRS.SSUG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA03" desc="Access related Atomic variables in a synchronized block" id="CERT.VNA03.MRAV" origId="TRS.MRAV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA03" desc="Make the get method for a field synchronized if the set method is synchronized" id="CERT.VNA03.SSUG" origId="TRS.SSUG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid returning &quot;null&quot; for arrays and certain types" id="CODSTA.BP.ARN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid passing non-reifiable types to varargs methods" id="CODSTA.BP.NRVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid label statements" id="CODSTA.BP.AULS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using multiple loggers, use logging levels instead" id="CODSTA.BP.AUML" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Provide a '{}' block for conditional statements" id="CODSTA.BP.BLK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid unnecessary nested blocks" id="CODSTA.BP.BLOCK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Declare fields with uppercase character names as &quot;final&quot;" id="CODSTA.BP.CFNF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="CODSTA.BP" desc="Avoid 'public' or 'protected' constructors for immutable classes" id="CODSTA.BP.CMUTA" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Place constants on the appropriate side of comparisons" id="CODSTA.BP.CS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Declare loggers as &quot;static final&quot; fields" id="CODSTA.BP.DLSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Do not call methods which terminates Java Virtual Machine" id="CODSTA.BP.EXIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="8;" authUrg="1;" cat="CODSTA.BP" desc="Declare all formal parameters as &quot;final&quot;" id="CODSTA.BP.FPF" sev="3" total="8"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using 'Hashtable' and 'Vector'" id="CODSTA.BP.HTV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid or enforce usage of '*' form of import statements" id="CODSTA.BP.IMPTD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid declaring methods to throw general or unchecked Exception types" id="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Ensure that a class which has only &quot;private&quot; constructors is declared as &quot;final&quot;" id="CODSTA.BP.PCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid &quot;break&quot; and/or &quot;continue&quot; with labels" id="CODSTA.BP.ABCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid declaring methods that return 'Object'" id="CODSTA.BP.AMRO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using reflection methods" id="CODSTA.BP.ARM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using wildcards in method return types" id="CODSTA.BP.AWRT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Reference interface constants with their declaring interface names" id="CODSTA.BP.FQNIC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Do not use &quot;break&quot; and/or &quot;continue&quot; statements" id="CODSTA.BP.CONTINUE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Ensure overloaded constructors and methods share the same accessibility" id="CODSTA.BP.OCMA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Do not define &quot;public&quot; or &quot;protected&quot; members in anonymous classes" id="CODSTA.BP.PPAC" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Call 'super.clone()' in all 'clone()' methods" id="CODSTA.EPC.SCLONE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not use constructors in the 'clone()' method" id="CODSTA.EPC.CLNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not call methods that might cause unexpected NullPointerExceptions during constructor execution" id="CODSTA.EPC.NCNFC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Avoid conversions from parameterized types to raw types" id="CODSTA.EPC.AGBPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Avoid using the conditional operator with mismatched numeric types" id="CODSTA.EPC.COMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not perform bitwise and arithmetic operations on the same data" id="CODSTA.EPC.NCBAV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not catch exception types which are too general or are unchecked exceptions" id="CODSTA.EPC.NCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Avoid using the same generic type variable for multiple method arguments" id="CODSTA.EPC.STA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Use 'StringTokenizer' instead of 'indexOf()' and 'substring()' for String parsing" id="CODSTA.EPC.UST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not call an &quot;abstract&quot; method from a constructor in an &quot;abstract&quot; class" id="CODSTA.EPC.NCAC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Use overloading judiciously" id="CODSTA.EPC.OVERLOAD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not make assignments to method parameters" id="CODSTA.EPC.AFP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Use &quot;int&quot; instead of &quot;byte&quot; or &quot;short&quot; and &quot;double&quot; instead of &quot;float&quot; for variable declarations" id="CODSTA.EPC.IBS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not use too many non-&quot;final&quot; &quot;static&quot; fields" id="CODSTA.EPC.MSF" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not write to static fields from non-static methods" id="CODSTA.EPC.WSIM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa" id="CODSTA.OIM.OVERRIDE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Do not override non &quot;abstract&quot; methods of a parent class with &quot;abstract&quot; methods" id="CODSTA.OIM.AMMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Declare 'clone() throws CloneNotSupportedException' for Cloneable class" id="CODSTA.OIM.CLONE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Use the 'clone()' method only to implement 'Cloneable' interface" id="CODSTA.OIM.CLONE2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Ensure 'clone()' method of non-final Cloneable class declared to throw 'CloneNotSupportedException'" id="CODSTA.OIM.CLONET" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Define a &quot;static&quot; 'valueOf()' method for &quot;enum&quot; types which override 'toString()'" id="CODSTA.OIM.DVOM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Do not override 'toString()' in enum types" id="CODSTA.OIM.OVOTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Override 'toString()'" id="CODSTA.OIM.OTOSM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Do not use assertions in production code" id="CODSTA.ORG.ASSERT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Do not make method calls to internal classes from non-internal classes" id="CODSTA.ORG.DINT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="CODSTA.ORG" desc="Order class elements appropriately" id="CODSTA.ORG.FO" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Avoid importing specific classes or packages" id="CODSTA.ORG.IMP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Organize methods by name" id="CODSTA.ORG.OGM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Order compilation unit elements appropriately" id="CODSTA.ORG.ORCU" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="1;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure all types have a non default package name" id="CODSTA.ORG.UNDPN" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Do not have more than one type in each file" id="CODSTA.ORG.AMOC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Define constants in an &quot;interface&quot;" id="CODSTA.ORG.DCI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure that comments do not contain task tags" id="CODSTA.ORG.TODOJAVA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure that comments do not contain task tags" id="CODSTA.ORG.TODOPROP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure that comments do not contain task tags" id="CODSTA.ORG.TODOXML" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Place 'finalize()' methods between &quot;public&quot; and &quot;protected&quot; methods" id="CODSTA.ORG.ORFIM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Present &quot;import&quot; statements in alphabetical order" id="CODSTA.ORG.ORIMP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Place the 'main()' method last" id="CODSTA.ORG.PML" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid constant interface anti-pattern" id="CODSTA.POD.ACIAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid &quot;static&quot; methods when the declaring class is a parameter type" id="CODSTA.POD.ASM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Use less specific types to accomplish loose coupling" id="CODSTA.POD.AUVT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CODSTA.POD" desc="Use chain constructors in classes with multiple constructors" id="CODSTA.POD.CHAIN" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid chains of &quot;instanceof&quot; comparisons" id="CODSTA.POD.CIOC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Do not access static members indirectly" id="CODSTA.POD.IASM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid &quot;switch&quot; statements with too many or too few &quot;case&quot; statements" id="CODSTA.POD.SMC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Use &quot;enum&quot; types instead of a series of &quot;static final&quot; constants" id="CODSTA.POD.UET" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="CODSTA.POD" desc="Enforce or avoid the use of parameterized types" id="CODSTA.POD.UPT" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Do not define constants in interfaces" id="CODSTA.POD.ISACF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="5;" authUrg="0;" cat="CODSTA.POD" desc="Define a no argument constructor whenever possible" id="CODSTA.POD.DCTOR" sev="5" total="5"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid literal constants" id="CODSTA.READ.USN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not use complicated conditional expressions in control structures" id="CODSTA.READ.ACCS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Access and set fields directly in the declaring type instead of using getter and setter methods" id="CODSTA.READ.AFD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid anonymous inner classes" id="CODSTA.READ.AIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="CODSTA.READ" desc="Avoid static import statements" id="CODSTA.READ.ASIS" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid unnecessary calls to 'toString()'" id="CODSTA.READ.AUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Comment the ends of control structures" id="CODSTA.READ.CCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Comment empty blocks" id="CODSTA.READ.CEB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using increment or decrement operators in nested expressions" id="CODSTA.READ.CID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Enforce or avoid usage of conditional operators" id="CODSTA.READ.CX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Explicitly call one of the superclass' constructors from all constructors" id="CODSTA.READ.ECSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CODSTA.READ" desc="Declare &quot;private&quot; constant fields &quot;final&quot;" id="CODSTA.READ.FF" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CODSTA.READ" desc="Declare constant local variables &quot;final&quot;" id="CODSTA.READ.FLV" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using Hexadecimal binary exponents" id="CODSTA.READ.HBE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid having a lower-case &quot;l&quot; or the number &quot;1&quot; at the end of a &quot;long&quot; integer constant" id="CODSTA.READ.LONG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare multiple variables in one statement" id="CODSTA.READ.MVOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid nested assignments or assignments embedded in other expressions" id="CODSTA.READ.NEA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid non-static initializers" id="CODSTA.READ.NSI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Declare &quot;for&quot; loops with an initializer, conditional, and updater statements" id="CODSTA.READ.PCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare &quot;public&quot; constructors in non-public classes" id="CODSTA.READ.PCTOR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Use 'isEmpty()' for Collections and Maps instead of comparing 'size()' to 0" id="CODSTA.READ.SIE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="4;" authUrg="0;" cat="CODSTA.READ" desc="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" id="CODSTA.READ.UATS" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Use underscore characters (_) in numerical literal" id="CODSTA.READ.ULIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare multiple variables of different types in one statement" id="CODSTA.READ.VDT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Limit the number of initialization and update statements in &quot;for&quot; loops" id="CODSTA.READ.VIFS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not rely on automatic boxing and unboxing of primitive types" id="CODSTA.READ.ABUB" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not use fully qualified type names" id="CODSTA.READ.AFQN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using negative logic in if-else statement" id="CODSTA.READ.ANL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not use too many negation operators '!' in a single method" id="CODSTA.READ.DUN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Declare variables as close as possible to where they are used" id="CODSTA.READ.DVCU" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Minimize &quot;try&quot; block size" id="CODSTA.READ.MTBS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Declare never-modified collections as &quot;unmodifiable&quot; for clarity" id="CODSTA.READ.NMUC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Put declarations only at the beginning of blocks" id="CODSTA.READ.PDBB" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid create integer values from binary notation using Integer.parseInt() methods" id="CODSTA.READ.UBL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid or enforce usage of enhanced &quot;for&quot; loops" id="CODSTA.READ.AEFS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="CODSTA.READ" desc="Comment local variables" id="CODSTA.READ.CLV" sev="5" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Always call 'Collection.toArray()' with an empty constant array argument" id="CODSTA.READ.CTA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using &quot;do-while&quot; statements" id="CODSTA.READ.DOWHILE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Enforce use of &quot;for&quot; or &quot;while&quot; loops" id="CODSTA.READ.PFL" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.1004" desc="Mark cookies as HttpOnly" id="CWE.1004.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.102" desc="Avoid duplicated forms in the 'validation.xml'" id="CWE.102.DFV" origId="STRUTS.DFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.103" desc="Always call 'super.validate()' from validation methods in 'ActionForm' classes" id="CWE.103.CSVFV" origId="SECURITY.IBA.CSVFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.104" desc="Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'" id="CWE.104.AEAF" origId="SECURITY.IBA.AEAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.106" desc="Ensure Plugins are added in the 'struts-config.xml'" id="CWE.106.PLUGIN" origId="STRUTS.PLUGIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.109" desc="Ensure validators are enabled in the 'struts-config.xml'" id="CWE.109.EV" origId="STRUTS.EV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.111" desc="Use wrapper methods to secure native methods" id="CWE.111.NATIW" origId="SECURITY.IBA.NATIW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.111" desc="Do not use user-defined &quot;native&quot; methods" id="CWE.111.NATV" origId="PORT.NATV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.113" desc="Protect against HTTP response splitting" id="CWE.113.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.114" desc="Protect against Library injection" id="CWE.114.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.114" desc="Inspect usage of standard API calls that bypass security" id="CWE.114.APIBS" origId="SECURITY.WSC.APIBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.117" desc="Protect against log forging" id="CWE.117.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.119" desc="Avoid unvalidated input in array indexes" id="CWE.119.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.119" desc="Do not use resources that have been freed" id="CWE.119.FREE" origId="BD.RES.FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.119" desc="Avoid accessing arrays out of bounds" id="CWE.119.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.119" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.119.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.119" desc="Prevent external processes from blocking on output or error streams" id="CWE.119.BUSSB" origId="SECURITY.WSC.BUSSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.125" desc="Avoid unvalidated input in array indexes" id="CWE.125.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.125" desc="Avoid accessing arrays out of bounds" id="CWE.125.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.129" desc="Avoid unvalidated input in array indexes" id="CWE.129.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.129" desc="Avoid accessing arrays out of bounds" id="CWE.129.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.129" desc="Always check parameters before use in array access" id="CWE.129.CAI" origId="PB.RE.CAI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.131" desc="Avoid accessing arrays out of bounds" id="CWE.131.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.134" desc="Exclude unsanitized user input from format strings" id="CWE.134.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.15" desc="Do not access or set System properties" id="CWE.15.SYSP" origId="SECURITY.BV.SYSP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.15" desc="Use a Context Object to manage HTTP request parameters" id="CWE.15.UCO" origId="SERVLET.UCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.185" desc="Avoid using &quot;.&quot; as a regular expression in 'String.replaceAll()' and 'String.replaceFirst()'" id="CWE.185.REP" origId="PB.API.REP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Avoid calculations which result in overflow or NaN" id="CWE.190.ICO" origId="PB.NUM.ICO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.190.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Do not cast primitive data types to lower precision" id="CWE.190.CLP" origId="PB.NUM.CLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Avoid using compound assignment operators in cases which may cause overflow" id="CWE.190.CACO" origId="PB.NUM.CACO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.190" desc="Avoid integer overflows" id="CWE.190.INTOVERF" origId="BD.PB.INTOVERF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Use unsigned right shift instead of division when overflow is possible" id="CWE.190.IOF" origId="PB.NUM.IOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.191" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.191.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.191" desc="Avoid integer overflows" id="CWE.191.INTOVERF" origId="BD.PB.INTOVERF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.193" desc="Avoid off-by-one errors in loop conditions" id="CWE.193.AOBO" origId="PB.LOGIC.AOBO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.198" desc="Provide methods to read and write little-endian data" id="CWE.198.PMRWLED" origId="PB.NUM.PMRWLED" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'" id="CWE.20.AEAF" origId="SECURITY.IBA.AEAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid unvalidated input in array indexes" id="CWE.20.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Always call 'super.validate()' from validation methods in 'ActionForm' classes" id="CWE.20.CSVFV" origId="SECURITY.IBA.CSVFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid duplicated forms in the 'validation.xml'" id="CWE.20.DFV" origId="STRUTS.DFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not use resources that have been freed" id="CWE.20.FREE" origId="BD.RES.FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid calculations which result in overflow or NaN" id="CWE.20.ICO" origId="PB.NUM.ICO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.20" desc="Ensure Plugins are added in the 'struts-config.xml'" id="CWE.20.PLUGIN" origId="STRUTS.PLUGIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Exclude unsanitized user input from format strings" id="CWE.20.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Protect against Library injection" id="CWE.20.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Protect against HTTP response splitting" id="CWE.20.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Protect against Reflection injection" id="CWE.20.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid accessing arrays out of bounds" id="CWE.20.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.20.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not cast primitive data types to lower precision" id="CWE.20.CLP" origId="PB.NUM.CLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not access or set System properties" id="CWE.20.SYSP" origId="SECURITY.BV.SYSP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="CWE.20.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Protect against log forging" id="CWE.20.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Use a Context Object to manage HTTP request parameters" id="CWE.20.UCO" origId="SERVLET.UCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Inspect usage of standard API calls that bypass security" id="CWE.20.APIBS" origId="SECURITY.WSC.APIBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Prevent external processes from blocking on output or error streams" id="CWE.20.BUSSB" origId="SECURITY.WSC.BUSSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid using compound assignment operators in cases which may cause overflow" id="CWE.20.CACO" origId="PB.NUM.CACO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Always check parameters before use in array access" id="CWE.20.CAI" origId="PB.RE.CAI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.20" desc="Ensure validators are enabled in the 'struts-config.xml'" id="CWE.20.EV" origId="STRUTS.EV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid integer overflows" id="CWE.20.INTOVERF" origId="BD.PB.INTOVERF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Use unsigned right shift instead of division when overflow is possible" id="CWE.20.IOF" origId="PB.NUM.IOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Use wrapper methods to secure native methods" id="CWE.20.NATIW" origId="SECURITY.IBA.NATIW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not use user-defined &quot;native&quot; methods" id="CWE.20.NATV" origId="PORT.NATV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.200" desc="Do not log confidential or sensitive information" id="CWE.200.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.200" desc="Avoid debug information from Spring Security framework to logs" id="CWE.200.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.200" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="CWE.200.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.200" desc="Prevent exposure of sensitive data" id="CWE.200.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.200" desc="Avoid passing sensitive data to functions that write to log files" id="CWE.200.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.200" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="CWE.200.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="1;" cat="CWE.200" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="CWE.200.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.209" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="CWE.209.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.209" desc="Prevent exposure of sensitive data" id="CWE.209.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.209" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="CWE.209.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="1;" cat="CWE.209" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="CWE.209.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.212" desc="Avoid declaring &quot;transient&quot; fields in non-serializable classes" id="CWE.212.FT" origId="SERIAL.FT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.213" desc="Do not log confidential or sensitive information" id="CWE.213.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.215" desc="Avoid debug information from Spring Security framework to logs" id="CWE.215.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.22" desc="Protect against File names injection" id="CWE.22.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.245" desc="Avoid using native JDBC" id="CWE.245.JDBCTEMPLATE" origId="SPRING.JDBCTEMPLATE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.246" desc="Do not use sockets in EJBs" id="CWE.246.AUS" origId="EJB.AUS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.246" desc="Do not call 'Socket.setSocketImplFactory()' or 'URL.setURLStreamHandlerFactory()' in a web component" id="CWE.246.NSF" origId="SECURITY.BV.NSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.246" desc="Do not use sockets in web components" id="CWE.246.SS" origId="SECURITY.WSC.SS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.250" desc="Limit the number of &quot;AccessController.doPrivileged&quot; calls per class" id="CWE.250.LDP" origId="SECURITY.EAB.LDP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.250" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="CWE.250.PCL" origId="SECURITY.EAB.PCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.252" desc="Consistently check the returned value of non-void methods" id="CWE.252.CHECKRET" origId="BD.PB.CHECKRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.252" desc="Check the return value of methods which read or skip input" id="CWE.252.CRRV" origId="PB.LOGIC.CRRV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="CWE.256.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.256" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.256.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.256.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="CWE.256.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="CWE.256.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="CWE.256.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.256" desc="Password information should not be included in properties file in plaintext" id="CWE.256.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.256" desc="Protect against using unprotected credentials" id="CWE.256.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="CWE.256.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid using plain text passwords in Axis2 configuration files" id="CWE.256.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.258" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.258.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.260" desc="Avoid using plain text passwords in Axis2 configuration files" id="CWE.260.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.261" desc="Avoid using cryptographic keys which are too short" id="CWE.261.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.269" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="CWE.269.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.269" desc="Limit the number of &quot;AccessController.doPrivileged&quot; calls per class" id="CWE.269.LDP" origId="SECURITY.EAB.LDP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.269" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="CWE.269.PCL" origId="SECURITY.EAB.PCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.279" desc="Avoid setting the write or execute file permissions to unintended users" id="CWE.279.IDP" origId="SECURITY.WSC.IDP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid DNS lookups for decision making" id="CWE.287.DNSL" origId="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid using hard-coded cryptographic keys" id="CWE.287.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="CWE.287.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="CWE.287.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="CWE.287.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.287.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.287.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure that an appropriate security manager is set" id="CWE.287.SSM" origId="SECURITY.WSC.SSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="CWE.287.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="CWE.287.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="CWE.287.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid using cryptographic keys which are too short" id="CWE.287.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="CWE.287.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.287" desc="Password information should not be included in properties file in plaintext" id="CWE.287.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.287" desc="Protect against using unprotected credentials" id="CWE.287.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Properly validate server identity" id="CWE.287.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="CWE.287.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="CWE.287.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Use the SSL-enabled version of classes when possible" id="CWE.287.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid using plain text passwords in Axis2 configuration files" id="CWE.287.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure sufficient protection against multiple failed authentication attempts" id="CWE.287.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.290" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="CWE.290.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.295" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="CWE.295.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.295" desc="Properly validate server identity" id="CWE.295.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.297" desc="Properly validate server identity" id="CWE.297.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.306" desc="Ensure that an appropriate security manager is set" id="CWE.306.SSM" origId="SECURITY.WSC.SSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.307" desc="Ensure sufficient protection against multiple failed authentication attempts" id="CWE.307.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.311" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.311.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.311" desc="Prevent exposure of sensitive data" id="CWE.311.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.312" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.312.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.313" desc="Password information should not be included in properties file in plaintext" id="CWE.313.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.315" desc="Avoid storing sensitive data in plaintext in a cookie" id="CWE.315.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.319" desc="Use the SSL-enabled version of classes when possible" id="CWE.319.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.319" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="CWE.319.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.321" desc="Avoid using hard-coded cryptographic keys" id="CWE.321.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.325" desc="MessageDigest objects must process the data with the 'update' method" id="CWE.325.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.325" desc="Initialize KeyGenerator instances" id="CWE.325.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.327" desc="Avoid using custom MessageDigest implementations" id="CWE.327.ACMD" origId="SECURITY.WSC.ACMD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="CWE.328.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.328" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="CWE.328.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Avoid using insecure algorithms for cryptography" id="CWE.328.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Use hash functions with a salt" id="CWE.328.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="CWE.328.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="CWE.328.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.329" desc="Ensure arguments passed to certain methods come from predefined methods list" id="CWE.329.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.329" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="CWE.329.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.336" desc="Ensure arguments passed to certain methods come from predefined methods list" id="CWE.336.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.337" desc="Ensure arguments passed to certain methods come from predefined methods list" id="CWE.337.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.338" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="CWE.338.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.346" desc="Restrict cross-origin resource sharing to secure origins" id="CWE.346.JXCORS" origId="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.347" desc="Always verify JarFile signatures" id="CWE.347.VJFS" origId="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.350" desc="Avoid DNS lookups for decision making" id="CWE.350.DNSL" origId="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.352" desc="Protect against HTTP response splitting" id="CWE.352.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.352" desc="Protect against XSS vulnerabilities" id="CWE.352.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.352" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="CWE.352.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.352" desc="Do not disable CSRF protection" id="CWE.352.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.352" desc="Do not disable CSRF protection" id="CWE.352.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.352" desc="Encapsulate arguments of dangerous methods with a validation method" id="CWE.352.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.352" desc="Ensure that methods annotated with @RequestMapping specify the HTTP request method they call" id="CWE.352.REQMAP" origId="SPRING.REQMAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.352" desc="Validate all dangerous data" id="CWE.352.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.359" desc="Do not log confidential or sensitive information" id="CWE.359.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.362" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="CWE.362.DCL" origId="TRS.DCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.362" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="CWE.362.TOCTOU" origId="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.367" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="CWE.367.TOCTOU" origId="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.369" desc="Avoid division by zero" id="CWE.369.ZERO" origId="BD.PB.ZERO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.375" desc="Avoid methods that might expose internal representations by returning arrays or other mutable fields" id="CWE.375.RA" origId="SECURITY.ESD.RA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.377" desc="Avoid temporary files" id="CWE.377.ATF" origId="SECURITY.IBA.ATF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.382" desc="Do not stop the JVM in a web component" id="CWE.382.JVM" origId="SECURITY.EAB.JVM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.382" desc="Do not call methods which terminates Java Virtual Machine" id="CWE.382.EXIT" origId="CODSTA.BP.EXIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.383" desc="Do not use threads in web components" id="CWE.383.THR" origId="SECURITY.DRC.THR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.384" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="CWE.384.ISL" origId="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.390" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="CWE.390.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.391" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="CWE.391.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.395" desc="Do not catch 'NullPointerException'" id="CWE.395.NCNPE" origId="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.396" desc="Do not catch exception types which are too general or are unchecked exceptions" id="CWE.396.NCE" origId="CODSTA.EPC.NCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.397" desc="Do not throw exception types which are too general or are unchecked exceptions" id="CWE.397.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.397" desc="Avoid declaring methods to throw general or unchecked Exception types" id="CWE.397.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.400" desc="Avoid using the DriverManagerDataSource class in production code" id="CWE.400.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.400" desc="Ensure resources are deallocated" id="CWE.400.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.400" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="CWE.400.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.400" desc="Do not call the 'start()' method directly on Thread class instances" id="CWE.400.ISTART" origId="TRS.ISTART" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.404" desc="Close JDBC objects in the correct order" id="CWE.404.COCO" origId="JDBC.COCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.404" desc="Close resources as early as possible" id="CWE.404.CRWD" origId="OPT.CRWD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.404" desc="Do not open or close JDBC connections in loops" id="CWE.404.ODBIL" origId="JDBC.ODBIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.413" desc="Ensure that nested locks are ordered correctly" id="CWE.413.LORD" origId="TRS.LORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.416" desc="Do not use resources that have been freed" id="CWE.416.FREE" origId="BD.RES.FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.426" desc="Always specify absolute paths to execute commands" id="CWE.426.PBRTE" origId="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.427" desc="Always specify absolute paths to execute commands" id="CWE.427.PBRTE" origId="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.434" desc="Protect against File names injection" id="CWE.434.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.456" desc="Initialize all local variables explicitly at the declaration statement" id="CWE.456.LV" origId="INIT.LV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.457" desc="Avoid use before explicit initialization" id="CWE.457.NOTEXPLINIT" origId="BD.PB.NOTEXPLINIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.457" desc="Avoid use of fields before initialization in constructors and static initializers" id="CWE.457.NOTINITCTOR" origId="BD.PB.NOTINITCTOR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.457" desc="Avoid NullPointerException" id="CWE.457.NP" origId="BD.EXCEPT.NP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.457" desc="Avoid uninitialized reads of fields before or during constructor execution" id="CWE.457.UIRC" origId="INIT.UIRC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.459" desc="Ensure resources are deallocated" id="CWE.459.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.470" desc="Protect against Reflection injection" id="CWE.470.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.470" desc="Inspect usage of standard API calls that bypass security" id="CWE.470.APIBS" origId="SECURITY.WSC.APIBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.476" desc="Avoid NullPointerException" id="CWE.476.NP" origId="BD.EXCEPT.NP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.476" desc="Do not check for null after dereferencing" id="CWE.476.DEREF" origId="BD.PB.DEREF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.477" desc="Do not use deprecated APIs" id="CWE.477.DPRAPI" origId="PB.API.DPRAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.478" desc="Provide &quot;default:&quot; for each &quot;switch&quot; statement" id="CWE.478.PDS" origId="PB.PDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.481" desc="Avoid assignment within a condition" id="CWE.481.ASI" origId="PB.TYPO.ASI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.483" desc="Avoid erroneously placing statements outside blocks" id="CWE.483.EBI" origId="PB.CUB.EBI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.483" desc="Provide a '{}' block for conditional statements" id="CWE.483.BLK" origId="CODSTA.BP.BLK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.483" desc="Avoid control statements with empty bodies" id="CWE.483.EB" origId="PB.TYPO.EB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.484" desc="Avoid assigning same variable in the fall-through switch case" id="CWE.484.DAV" origId="PB.TYPO.DAV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.484" desc="Do not use a &quot;switch&quot; statement with a bad &quot;case&quot;" id="CWE.484.SBC" origId="PB.CUB.SBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.486" desc="Do not compare Class objects by name" id="CWE.486.CMP" origId="SECURITY.EAB.CMP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.486" desc="Inspect usage of 'getName()' from 'java.lang.Class' object" id="CWE.486.AUG" origId="SECURITY.BV.AUG" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.487" desc="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" id="CWE.487.AF" origId="OOP.AF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.491" desc="Make your 'clone()' method &quot;final&quot; for security" id="CWE.491.CLONE" origId="SECURITY.WSC.CLONE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.492" desc="Make all member classes &quot;private&quot;" id="CWE.492.INNER" origId="SECURITY.WSC.INNER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.495" desc="Avoid methods that might expose internal representations by returning arrays or other mutable fields" id="CWE.495.RA" origId="SECURITY.ESD.RA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.496" desc="Always clone array parameters which are stored to fields" id="CWE.496.CAP" origId="SECURITY.WSC.CAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.497" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="CWE.497.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.497" desc="Prevent exposure of sensitive data" id="CWE.497.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.499" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="CWE.499.SIF" origId="SECURITY.ESD.SIF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;" authUrg="2;" cat="CWE.499" desc="Make your classes nonserializeable" id="CWE.499.SER" origId="SECURITY.WSC.SER" sev="5" total="10"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.500" desc="Inspect 'static' fields which may have intended to be declared 'static final'" id="CWE.500.SPFF" origId="SECURITY.EAB.SPFF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.501" desc="Do not store untrusted data in HTTP session" id="CWE.501.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Avoid parsing untrusted data with XMLDecoder" id="CWE.502.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Disable LDAP deserialization" id="CWE.502.SC" origId="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes" id="CWE.502.MASP" origId="PB.API.MASP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="CWE.502.RWAF" origId="SERIAL.RWAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.502" desc="Safely serialize sensitive data" id="CWE.502.SSSD" origId="BD.SECURITY.SSSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Validate objects before deserialization" id="CWE.502.VOBD" origId="SERIAL.VOBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.506" desc="Avoid using hard-coded cryptographic keys" id="CWE.506.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.511" desc="Inspect 'Random' objects or 'Math.random()' methods that could indicate areas where malicious code has been placed" id="CWE.511.RDM" origId="SECURITY.WSC.RDM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.521" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="CWE.521.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="CWE.522.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.522" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.522.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.522.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="CWE.522.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="CWE.522.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="CWE.522.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.522" desc="Password information should not be included in properties file in plaintext" id="CWE.522.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.522" desc="Protect against using unprotected credentials" id="CWE.522.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="CWE.522.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.522" desc="Use the SSL-enabled version of classes when possible" id="CWE.522.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid using plain text passwords in Axis2 configuration files" id="CWE.522.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.523" desc="Use the SSL-enabled version of classes when possible" id="CWE.523.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.532" desc="Do not log confidential or sensitive information" id="CWE.532.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.532" desc="Avoid passing sensitive data to functions that write to log files" id="CWE.532.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.543" desc="Inspect accesses to &quot;static&quot; fields which may require synchronization" id="CWE.543.IASF" origId="TRS.IASF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.543" desc="Make lazy initializations thread-safe" id="CWE.543.ILI" origId="TRS.ILI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.546" desc="Ensure that comments do not contain task tags" id="CWE.546.TODOJAVA" origId="CODSTA.ORG.TODOJAVA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.546" desc="Ensure that comments do not contain task tags" id="CWE.546.TODOPROP" origId="CODSTA.ORG.TODOPROP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.546" desc="Ensure that comments do not contain task tags" id="CWE.546.TODOXML" origId="CODSTA.ORG.TODOXML" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.555" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.555.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.561" desc="Avoid conditions that always evaluate to the same value" id="CWE.561.CC" origId="BD.PB.CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.561" desc="Do not check for null after dereferencing" id="CWE.561.DEREF" origId="BD.PB.DEREF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.561" desc="Avoid unused &quot;private&quot; methods" id="CWE.561.PM" origId="UC.PM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.561" desc="Avoid switch with unreachable branches" id="CWE.561.SWITCH" origId="BD.PB.SWITCH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.563" desc="Avoid overwriting method parameters before each use" id="CWE.563.POVR" origId="BD.PB.POVR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CWE.563" desc="Avoid local variables that are never read" id="CWE.563.AURV" origId="UC.AURV" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.563" desc="Avoid unused &quot;private&quot; fields" id="CWE.563.PF" origId="UC.PF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.563" desc="Avoid unused parameters" id="CWE.563.UP" origId="UC.UP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;" authUrg="0;" cat="CWE.563" desc="Avoid unused values" id="CWE.563.VOVR" origId="BD.PB.VOVR" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.563" desc="Avoid globally unused &quot;public/protected&quot; fields" id="CWE.563.UPPF" origId="GLOBAL.UPPF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.568" desc="Call 'super.finalize()' from 'finalize()'" id="CWE.568.FCF" origId="GC.FCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.570" desc="Avoid conditions that always evaluate to the same value" id="CWE.570.CC" origId="BD.PB.CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.570" desc="Avoid unnecessary 'if' statements" id="CWE.570.UCIF" origId="UC.UCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.571" desc="Avoid conditions that always evaluate to the same value" id="CWE.571.CC" origId="BD.PB.CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.571" desc="Avoid unnecessary 'if' statements" id="CWE.571.UCIF" origId="UC.UCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.572" desc="Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'" id="CWE.572.IRUN" origId="TRS.IRUN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.576" desc="Do not use types from the &quot;java.io&quot; package within bean classes" id="CWE.576.JIO" origId="EJB.JIO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.577" desc="Do not use sockets in EJBs" id="CWE.577.AUS" origId="EJB.AUS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.578" desc="Do not access, use, or create a class loader within a bean class" id="CWE.578.ACL" origId="EJB.ACL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.579" desc="Ensure method arguments are serializable" id="CWE.579.ONS" origId="PB.API.ONS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.579" desc="Do not store non-serializable objects as HttpSession attributes" id="CWE.579.SNSO" origId="SERIAL.SNSO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.580" desc="Call 'super.clone()' in all 'clone()' methods" id="CWE.580.SCLONE" origId="CODSTA.EPC.SCLONE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.581" desc="Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa" id="CWE.581.OVERRIDE" origId="CODSTA.OIM.OVERRIDE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.582" desc="Ensure &quot;static&quot; &quot;final&quot; fields are immutable" id="CWE.582.IMM" origId="PB.CUB.IMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.582" desc="Avoid using &quot;public static final&quot; array fields" id="CWE.582.PSFA" origId="PB.CUB.PSFA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.583" desc="Give &quot;finalize()&quot; methods &quot;protected&quot; access" id="CWE.583.MFP" origId="OOP.MFP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.584" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="CWE.584.ARCF" origId="PB.CUB.ARCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.585" desc="Avoid empty &quot;synchronized&quot; statements" id="CWE.585.SNE" origId="UC.SNE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.586" desc="Do not call 'finalize()' explicitly" id="CWE.586.NCF" origId="GC.NCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.59" desc="Validate shortcut target paths before use" id="CWE.59.LNK" origId="SECURITY.WSC.LNK" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.59" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="CWE.59.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.594" desc="Ensure instance variables of @Stateful beans are Serializable" id="CWE.594.SIVS" origId="EJB.EJB3.SIVS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.595" desc="Do not use '==' or '!=' to compare objects" id="CWE.595.UEIC" origId="PB.CUB.UEIC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.6" desc="Ensure Session-ID Length is sufficient" id="CWE.6.SLID" origId="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.600" desc="Catch all exceptions which may be thrown within Servlet methods" id="CWE.600.CETS" origId="SERVLET.CETS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.601" desc="Protect against HTTP response splitting" id="CWE.601.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.601" desc="Protect against network resource injection" id="CWE.601.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.601" desc="Use a Context Object to manage HTTP request parameters" id="CWE.601.UCO" origId="SERVLET.UCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.601" desc="Encapsulate all redirect and forward URLs with a validation function" id="CWE.601.VRD" origId="SECURITY.IBA.VRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.605" desc="Do not hard-code IP addresses and port numbers" id="CWE.605.HCNA" origId="PORT.HCNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.607" desc="Ensure &quot;static&quot; &quot;final&quot; fields are immutable" id="CWE.607.IMM" origId="PB.CUB.IMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.607" desc="Avoid referencing mutable fields" id="CWE.607.RMO" origId="PB.CUB.RMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.609" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="CWE.609.DCL" origId="TRS.DCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.61" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="CWE.61.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.611" desc="Disable XML external entity injection" id="CWE.611.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.611" desc="Validate untrusted XML using schema or DTD before reading" id="CWE.611.XMLVAL" origId="BD.SECURITY.XMLVAL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.613" desc="Ensure proper session expiration" id="CWE.613.RUIM" origId="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.613" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="CWE.613.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.614" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="CWE.614.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.617" desc="Do not use assertions in production code" id="CWE.617.ASSERT" origId="CODSTA.ORG.ASSERT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.64" desc="Validate shortcut target paths before use" id="CWE.64.LNK" origId="SECURITY.WSC.LNK" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.643" desc="Protect against JXPath injection" id="CWE.643.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.643" desc="Protect against XPath injection" id="CWE.643.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.644" desc="Protect against HTTP response splitting" id="CWE.644.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.652" desc="Protect against XPath injection" id="CWE.652.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.652" desc="Avoid XPath injection when evaluating XPath queries" id="CWE.652.XPIJ" origId="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.662" desc="Variable should be used in context of single critical section" id="CWE.662.DIFCS" origId="BD.TRS.DIFCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.667" desc="Unrestricted lock resource" id="CWE.667.CLOSE" origId="PB.CLOSE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.667" desc="Do not abandon unreleased locks" id="CWE.667.LOCK" origId="BD.TRS.LOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.674" desc="Avoid infinite recursive method calls" id="CWE.674.FLRC" origId="PB.LOGIC.FLRC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.676" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="CWE.676.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.680" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.680.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.681" desc="Do not assign the result of an integer division to a floating point variable" id="CWE.681.IDCD" origId="PB.NUM.IDCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.681" desc="Do not cast primitive data types to lower precision" id="CWE.681.CLP" origId="PB.NUM.CLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.691" desc="Avoid using negative logic in if-else statement" id="CWE.691.ANL" origId="CODSTA.READ.ANL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.7" desc="Always specify error pages in web.xml" id="CWE.7.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.704" desc="Avoid conversions from parameterized types to raw types" id="CWE.704.AGBPT" origId="CODSTA.EPC.AGBPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CWE.704" desc="Do not convert a value to a String by concatenating the empty String" id="CWE.704.CPTS" origId="OPT.CPTS" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.732" desc="Mark cookies as HttpOnly" id="CWE.732.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.732" desc="Avoid setting the write or execute file permissions to unintended users" id="CWE.732.IDP" origId="SECURITY.WSC.IDP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.749" desc="Declare package-private methods as inaccessible as possible" id="CWE.749.DPAM" origId="GLOBAL.DPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.749" desc="Declare a package-private method &quot;final&quot; if it is not overridden" id="CWE.749.SPAM" origId="GLOBAL.SPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="CWE.749" desc="Declare &quot;public/protected&quot; methods as inaccessible as possible" id="CWE.749.DPPM" origId="GLOBAL.DPPM" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.755" desc="Do not catch InterruptedException except in classes extending Thread" id="CWE.755.CIET" origId="TRS.CIET" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.759" desc="Use hash functions with a salt" id="CWE.759.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.764" desc="Avoid double locking" id="CWE.764.DLOCK" origId="BD.TRS.DLOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.77" desc="Protect against Command injection" id="CWE.77.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.770" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="CWE.770.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.770" desc="Do not call the 'start()' method directly on Thread class instances" id="CWE.770.ISTART" origId="TRS.ISTART" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.771" desc="Ensure resources are deallocated" id="CWE.771.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.772" desc="Unrestricted lock resource" id="CWE.772.CLOSE" origId="PB.CLOSE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.772" desc="Ensure resources are deallocated" id="CWE.772.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.778" desc="Ensure all sensitive method invocations are logged" id="CWE.778.ENFL" origId="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.78" desc="Protect against Command injection" id="CWE.78.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.787" desc="Avoid unvalidated input in array indexes" id="CWE.787.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.787" desc="Avoid accessing arrays out of bounds" id="CWE.787.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.789" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="CWE.789.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.79" desc="Process XML and HTML with a library instead of raw text" id="CWE.79.ARXML" origId="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Protect against Jakarta Digester injection" id="CWE.79.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Protect against HTTP response splitting" id="CWE.79.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Protect against XML data injection" id="CWE.79.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Protect against XSS vulnerabilities" id="CWE.79.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Encapsulate arguments of dangerous methods with a validation method" id="CWE.79.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Validate all dangerous data" id="CWE.79.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.798" desc="Avoid using hard-coded cryptographic keys" id="CWE.798.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.798" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="CWE.798.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.8" desc="Do not declare entity beans as remote" id="CWE.8.RR" origId="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.80" desc="Process XML and HTML with a library instead of raw text" id="CWE.80.ARXML" origId="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.80" desc="Protect against Jakarta Digester injection" id="CWE.80.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.80" desc="Protect against XML data injection" id="CWE.80.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.806" desc="Prevent external processes from blocking on output or error streams" id="CWE.806.BUSSB" origId="SECURITY.WSC.BUSSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.807" desc="Avoid storing sensitive data in plaintext in a cookie" id="CWE.807.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.807" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="CWE.807.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.807" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="CWE.807.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.81" desc="Process XML and HTML with a library instead of raw text" id="CWE.81.ARXML" origId="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.829" desc="Protect against File contents injection" id="CWE.829.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.829" desc="Protect against File names injection" id="CWE.829.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.829" desc="Protect against Library injection" id="CWE.829.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.829" desc="Protect against XPath injection" id="CWE.829.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.83" desc="Process XML and HTML with a library instead of raw text" id="CWE.83.ARXML" origId="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.832" desc="Ensure that nested locks are ordered correctly" id="CWE.832.LORD" origId="TRS.LORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.833" desc="Do not cause deadlocks by calling a &quot;synchronized&quot; method from a &quot;synchronized&quot; method" id="CWE.833.CSFS" origId="TRS.CSFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.833" desc="Do not acquire locks in different order" id="CWE.833.ORDER" origId="BD.TRS.ORDER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.833" desc="Release Locks in a &quot;finally&quot; block" id="CWE.833.RLF" origId="TRS.RLF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.833" desc="Do not use blocking methods while holding a lock" id="CWE.833.TSHL" origId="BD.TRS.TSHL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.833" desc="Do not perform synchronization nor call semaphore methods on an Object's 'this' reference" id="CWE.833.STR" origId="TRS.STR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.833" desc="Use 'wait()' and 'notifyAll()' instead of polling loops" id="CWE.833.UWNA" origId="TRS.UWNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.835" desc="Avoid infinite loops" id="CWE.835.AIL" origId="PB.LOGIC.AIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.835" desc="Declare &quot;for&quot; loops with an initializer, conditional, and updater statements" id="CWE.835.PCIF" origId="CODSTA.READ.PCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.836" desc="Password information should not be included in properties file in plaintext" id="CWE.836.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.838" desc="Avoid calling methods and constructors which do not allow you to specify a character encoding option" id="CWE.838.SEO" origId="INTER.SEO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.841" desc="Avoid EJB 3 methods without security annotations" id="CWE.841.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.843" desc="Do not call 'equals()' methods that always return false" id="CWE.843.EQUS" origId="PB.LOGIC.EQUS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.862" desc="Avoid EJB 3 methods without security annotations" id="CWE.862.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.862" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="CWE.862.LCA" origId="SECURITY.UEC.LCA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.863" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="CWE.863.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.863" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="CWE.863.SRCD" origId="SECURITY.UEC.SRCD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.89" desc="Protect against SQL injection" id="CWE.89.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.89" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="CWE.89.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.9" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="CWE.9.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.90" desc="Protect against LDAP injection" id="CWE.90.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.91" desc="Protect against XML data injection" id="CWE.91.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.918" desc="Protect against network resource injection" id="CWE.918.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.94" desc="Avoid untrusted input when logging messages with Seam Logging API" id="CWE.94.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.94" desc="Validate potentially tainted data before it is used in methods that generate code" id="CWE.94.TDCODE" origId="BD.SECURITY.TDCODE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.94" desc="Prevent the scripting API from executing untrusted code" id="CWE.94.ASAPI" origId="SECURITY.WSC.ASAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.95" desc="Validate potentially tainted data before it is used in methods that generate code" id="CWE.95.TDCODE" origId="BD.SECURITY.TDCODE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.99" desc="Protect against network resource injection" id="CWE.99.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Do not include a postcondition saying that &quot;$result!=null&quot; in methods which can return null" id="DBC.CPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all getter methods" id="DBC.IGM" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Do not invoke a method on a reference that is not guaranteed to be non-null" id="DBC.IMNR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" id="DBC.IPAN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all package-private classes" id="DBC.PKGC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@post' contract for all package-private methods" id="DBC.PKGMPOST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@pre' contract for all package-private methods" id="DBC.PKGMPRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all &quot;protected&quot; classes" id="DBC.PROC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@post' contract for all &quot;protected&quot; methods" id="DBC.PROMPOST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@pre' contract for all &quot;protected&quot; methods" id="DBC.PROMPRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all &quot;public&quot; classes" id="DBC.PUBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@post' contract for all &quot;public&quot; methods" id="DBC.PUBMPOST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@pre' contract for all &quot;public&quot; methods" id="DBC.PUBMPRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Avoid rechecking @pre and @post conditions" id="DBC.RCC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Use correct syntax in the DbC contracts" id="DBC.SYNTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all &quot;private&quot; classes" id="DBC.PRIC" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@post' contract for all &quot;private&quot; methods" id="DBC.PRIMPOST" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@pre' contract for all &quot;private&quot; methods" id="DBC.PRIMPRE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="ECLIPSE" desc="Ensure &quot;Export-Package&quot; and &quot;Provide-Package&quot; match in MANIFEST.MF for Eclipse 3.0 compatibility" id="ECLIPSE.PCMF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="ECLIPSE" desc="Avoid exporting &quot;internal&quot; packages in MANIFEST.MF" id="ECLIPSE.IPMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="ECLIPSE" desc="Avoid missing &quot;Eclipse-AutoStart&quot; entry in MANIFEST.MF" id="ECLIPSE.SMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare bean classes &quot;public&quot;" id="EJB.CDP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not declare bean classes as &quot;abstract&quot;" id="EJB.CNDA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not declare bean classes as &quot;final&quot;" id="EJB.CNDF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare 'ejbCreate()' methods  &quot;public&quot;, but neither &quot;static&quot; nor &quot;final&quot;" id="EJB.CRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Implement a no-argument 'ejbCreate()' method for all Message-driven bean classes" id="EJB.MDBC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not define 'finalize()' method in bean classes" id="EJB.MNDF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare a &quot;public&quot; constructor that takes no parameters in bean classes" id="EJB.NFDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare 'ejbPostCreate()' &quot;public&quot; and neither &quot;static&quot; nor &quot;final&quot;" id="EJB.PCRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Make the return type &quot;void&quot; for SessionBeans or MessageDrivenBeans' 'ejbCreate()' methods" id="EJB.RTC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Make the return type &quot;void&quot; for the 'ejbPostCreate()' method" id="EJB.RTP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid passing the &quot;this&quot; reference as an argument" id="EJB.THISARG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not return &quot;this&quot;" id="EJB.THISRET" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not access, use, or create a class loader within a bean class" id="EJB.ACL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use EJB code in java swing or servlet classes" id="EJB.ADCB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not access or modify security configuration objects" id="EJB.AMSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use types from the &quot;java.io&quot; package within bean classes" id="EJB.JIO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare all &quot;static&quot; fields in EJB bean classes &quot;final&quot;" id="EJB.NFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="The return type of EJB finder methods should be the primary key or a collection of primary keys" id="EJB.RT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not set or create a new SecurityManager in EJBs" id="EJB.SMSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Ensure EJB beans include necessary methods and EJB bean and interface classes follow the name format" id="EJB.STD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid starting, stopping, or managing threads in any way in bean classes" id="EJB.THREAD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use Servlet code in EJB classes" id="EJB.ABCS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use Entity Beans as fine-grained objects" id="EJB.ABFG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid excessive inter-entity bean communication" id="EJB.AIEBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use JDBC code inside of EJB classes" id="EJB.AJDBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use sockets in EJBs" id="EJB.AUS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not call finder methods in the 'ejbLoad()'" id="EJB.EJBLOAD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare finder methods &quot;public&quot; and neither &quot;final&quot; nor &quot;static&quot;" id="EJB.FNDM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Implement one or more 'ejbCreate()' methods in bean classes" id="EJB.IECM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Implement one or more 'ejbPostCreate()' methods in EntityBean classes" id="EJB.IEPM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid loading native libraries in a Bean class" id="EJB.LNL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Define a matching 'ejbPostCreate()' method for each 'ejbCreate' method in entity bean classes" id="EJB.MEC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Throw 'java.rmi.RemoteException' in the methods of remote interface and remote home interface" id="EJB.MRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not throw 'java.rmi.RemoteException' in a bean's local interface and local home interface" id="EJB.RILH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="EJB" desc="Do not declare entity beans as remote" id="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Throw 'javax.ejb.CreateException' in create methods of remote home or local home interfaces" id="EJB.TCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Throw 'javax.ejb.FinderException' in finder methods of remote home or local home interfaces" id="EJB.TFE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Cache reusable JNDI resources to minimize the use of expensive operations" id="EJB.UCIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Use a Session Facade to manage access to entity beans" id="EJB.USF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid one-to-one mapping between session beans and entity beans" id="EJB.AOTO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Reuse EJB homes" id="EJB.RUH" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Use Value Objects to reduce the granularity of calls to the server" id="EJB.UVO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not expose @AroundInvoke method in business interface" id="EJB.EJB3.EAII" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Avoid EJB 3 methods without security annotations" id="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Call 'InvocationContext.proceed()' from @AroundInvoke methods" id="EJB.EJB3.CPIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Avoid improper use of @Id annotation" id="EJB.EJB3.IDA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not inject @Stateful beans into @Stateless beans" id="EJB.EJB3.ISB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Ensure instance variables of @Stateful beans are Serializable" id="EJB.EJB3.SIVS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Avoid IllegalStateException when using transactions" id="EJB.EJB3.AISE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not start business method names with &quot;ejb&quot;" id="EJB.EJB3.BMN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Improper signature of the annotated method in EJB bean" id="EJB.EJB3.CMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Ensure @IdClass is Serializable and defines &quot;equals()&quot; and &quot;hashCode()&quot; methods" id="EJB.EJB3.IDCS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not extend other @MessageDriven beans from a @MessageDriven bean" id="EJB.EJB3.MDBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Ensure @MessageDriven beans specify a MessageListener" id="EJB.EJB3.MDML" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not declare multiple &quot;@Timeout&quot; methods" id="EJB.EJB3.MTM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Specify a @Remove method for @Stateful beans" id="EJB.EJB3.RMSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Ensure parameters and return type of remote business methods are Serializable" id="EJB.EJB3.SRBM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Avoid ignored or invalid annotations" id="EJB.EJB3.AIA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not declare an interface both @Local and @Remote" id="EJB.EJB3.RLI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Always specify &quot;unitName&quot; with @PersistenceContext" id="EJB.EJB3.PCUN" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Access beans through a local interface" id="EJB.EJB3.ULI" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw exceptions from the constructors of exception classes" id="EXCEPT.TEFEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Catch all &quot;Throwable&quot; objects which may be thrown in the body of certain methods" id="EXCEPT.CATO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not abuse exceptions as flow control statements" id="EXCEPT.AEFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not use instanceof in a catch block to check the exception type" id="EXCEPT.AIOC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Avoid catch clauses with the same content" id="EXCEPT.CDUPL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Avoid using finally block for closing resource only" id="EXCEPT.CLFIN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Always chain thrown exceptions" id="EXCEPT.CTE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw exceptions from constructors of &quot;public&quot; non-&quot;final&quot; classes" id="EXCEPT.EPNFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not hide 'catch' blocks" id="EXCEPT.HCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Declare all fields of user-defined 'Exception' as &quot;final&quot;" id="EXCEPT.IMMEX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not declare any thrown exceptions in the 'main()' method" id="EXCEPT.MTE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not catch the 'java.lang.Error' object" id="EXCEPT.NCERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not catch 'NullPointerException'" id="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Ensure that the 'parse' methods of the numeric classes do not throw unhandled &quot;NumberFormatExceptions&quot;" id="EXCEPT.NFE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw exception types which are too general or are unchecked exceptions" id="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw 'NullPointerException'" id="EXCEPT.NTNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Rethrow certain exceptions if they are caught" id="EXCEPT.RTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Place &quot;try/catch/finally&quot; blocks outside of loops" id="EXCEPT.TRY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Exception messages must meet minimum character requirement" id="EXCEPT.TSCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="FORMAT" desc="Include a meaningful file header comment in every source file" id="FORMAT.MCH" sev="2" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Use '()' to separate complex expressions" id="FORMAT.APAREN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Ensure proper spacing in array references" id="FORMAT.ASPACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Do not place empty whitespace at the end of a line" id="FORMAT.ATS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Put a blank line before each C-style comment" id="FORMAT.BLBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="12;" authUrg="2;" cat="FORMAT" desc="Enforce number of blank line(s) before type declarations" id="FORMAT.BLCD" sev="3" total="12"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of blank line(s) to separate &quot;imports&quot; from different packages" id="FORMAT.BLSIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Place a closing brace on its own line" id="FORMAT.CBRACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Place a single space character or no space character after type casting" id="FORMAT.CMS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Do not leave spaces between qualified names and method invocations" id="FORMAT.DOT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Use spaces instead of tabs (or tabs instead of spaces)" id="FORMAT.DUT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce the position of '{' brace" id="FORMAT.FCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Place the type that has the same name as the file as the first type" id="FORMAT.FCN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Declare arrays with '[]' brackets after the array type and before the variable name(s)" id="FORMAT.IAD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="1;" cat="FORMAT" desc="Enforce number of space(s) for indentation" id="FORMAT.IND" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Limit the maximum length of a line" id="FORMAT.LL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce the order of annotations and modifiers" id="FORMAT.MO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Place a single space character or no space character between a method name and the opening &quot;(&quot; parenthesis" id="FORMAT.MSP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Do not place statements on the same line as the '{' opening brace" id="FORMAT.NSAB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Write one statement per line" id="FORMAT.OSPL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) after every comma" id="FORMAT.SAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) on each side of an assignment operator" id="FORMAT.SAOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) after the opening parenthesis &quot;(&quot; of a conditional statement" id="FORMAT.SAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) after every semicolon" id="FORMAT.SAS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) between a prefixed unary operator and its operand" id="FORMAT.SAUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) on each side of a bitwise operator" id="FORMAT.SBOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) between a postfixed unary operator and its operand" id="FORMAT.SBUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) between a conditional statement and the opening &quot;(&quot; parenthesis" id="FORMAT.SC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) before and after the &quot;?&quot; conditional operator" id="FORMAT.SCOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) on each side of a logical operator" id="FORMAT.SLOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) on each side of a relational operator" id="FORMAT.SROP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Avoid using trailing comments" id="FORMAT.TC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Avoid or enforce the use of trailing commas in array initializers" id="FORMAT.TCOMMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Use the preferred formatting for conditional expressions" id="FORMAT.TE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Make sure all files are terminated with a newline character" id="FORMAT.TNL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="15;" authUrg="2;" cat="FORMAT" desc="Enforce number of blank line(s) between major sections" id="FORMAT.U2BL" sev="3" total="15"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Avoid unnecessary parentheses" id="FORMAT.UP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Do not use 'finalize()' methods to unregister listeners" id="GC.FM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Do not call 'finalize()' explicitly" id="GC.NCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Be cautious when calling methods which may cause memory leaks" id="GC.MML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Prevent potential memory leaks in ObjectOutputStreams by calling 'reset()'" id="GC.OSTM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="GC" desc="Do not use unnecessary temporaries when converting primitive types to String" id="GC.AUTP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="GC" desc="Avoid using 'Date[]', use 'long[]' instead" id="GC.DUD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Call 'super.finalize()' from 'finalize()'" id="GC.FCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="GC" desc="Do not explicitly call 'System.gc()' or 'Runtime.gc()'" id="GC.GC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="GC" desc="Reuse calls to 'getClipBounds()'" id="GC.GCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Call 'super.finalize()' in the &quot;finally&quot; block of 'finalize()' methods" id="GC.IFF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Reuse immutable constant objects to conserve memory" id="GC.RCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Avoid &quot;static&quot; collections or maps; they can grow without bounds" id="GC.STV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid unused &quot;throws&quot; clauses" id="GLOBAL.AUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="GLOBAL" desc="Declare package-private fields as inaccessible as possible" id="GLOBAL.DPAF" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare package-private methods as inaccessible as possible" id="GLOBAL.DPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare a package-private &quot;class&quot; &quot;final&quot; if it is not subclassed" id="GLOBAL.SPAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare a package-private method &quot;final&quot; if it is not overridden" id="GLOBAL.SPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Ensure correct constructor declarations in utility classes" id="GLOBAL.UCC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused package-private types" id="GLOBAL.UPAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused package-private fields" id="GLOBAL.UPAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused package-private methods" id="GLOBAL.UPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Make methods &quot;static&quot; if they do not use instance class members" id="GLOBAL.ASI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare non-private fields &quot;final&quot; if they are read-only" id="GLOBAL.SF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Ensure that files do not contain cyclical dependencies" id="GLOBAL.ACD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;package-private&quot; types as inaccessible as possible" id="GLOBAL.DPAC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="5;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;public/protected&quot; types as inaccessible as possible" id="GLOBAL.DPPC" sev="4" total="5"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;public/protected&quot; fields as inaccessible as possible" id="GLOBAL.DPPF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;public/protected&quot; methods as inaccessible as possible" id="GLOBAL.DPPM" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid interfaces which are never implemented and &quot;abstract&quot; classes which are never extended" id="GLOBAL.NIE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused enum constants" id="GLOBAL.UEC" sev="4" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="5;" authUrg="1;" cat="GLOBAL" desc="Avoid globally unused &quot;public/protected&quot; types" id="GLOBAL.UPPC" sev="4" total="5"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused &quot;public/protected&quot; fields" id="GLOBAL.UPPF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="1;" cat="GLOBAL" desc="Avoid globally unused &quot;public/protected&quot; methods" id="GLOBAL.UPPM" sev="4" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="GLOBAL" desc="Declare a &quot;public/protected&quot; &quot;class&quot; &quot;final&quot; if it is not subclassed" id="GLOBAL.SPPC" sev="5" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="GLOBAL" desc="Declare a &quot;public/protected&quot; method &quot;final&quot; if it is not overridden" id="GLOBAL.SPPM" sev="5" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="HIBERNATE.LHII" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Call 'setLockMode()' before executing a Hibernate Query" id="HIBERNATE.SLM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Roll back any active transactions in 'catch' blocks" id="HIBERNATE.RBT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Call 'addClass()' instead of 'addResource()' to add a mapping to a 'Configuration'" id="HIBERNATE.CAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Close Hibernate Sessions in &quot;finally&quot; blocks" id="HIBERNATE.CHS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Close all 'SessionFactory' objects" id="HIBERNATE.CSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Include getter and setter methods and an id field for any object mapped to a column in a database table" id="HIBERNATE.GSIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Declare a no-argument constructor for Hibernate persistent classes" id="HIBERNATE.IDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Override the 'equals' and 'hashCode' methods for mapped Hibernate objects" id="HIBERNATE.OHCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Declare the setter method for the Hibernate identifier 'private'" id="HIBERNATE.PIDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Use mapped, named HQL queries instead of writing queries in Java code" id="HIBERNATE.UGNQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Use named parameters in HQL queries" id="HIBERNATE.UNP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Avoid uninitialized reads of fields before or during constructor execution" id="INIT.UIRC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use a &quot;static&quot; initializer that creates an instance of the current class before all &quot;static final&quot; fields are assigned" id="INIT.SICUI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Avoid explicitly initializing fields which have already been initialized by a superclass' constructor" id="INIT.ADI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Ensure that the &quot;if&quot; check for lazy initialization uses the correct operator" id="INIT.AULI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Use diamond to invoke the constructor of a generic class" id="INIT.DIA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use initialization circularities for fields" id="INIT.IC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Initialize all local variables explicitly at the declaration statement" id="INIT.LV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use non-final &quot;static&quot; fields during the initialization" id="INIT.NFS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Use explicit initializations/Do not initialize &quot;static&quot; fields to default values" id="INIT.SF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not initialize &quot;static&quot; &quot;final&quot; variables with non &quot;final&quot; &quot;static&quot; variables" id="INIT.SFA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use array initializers" id="INIT.AAI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not put code other than initialization code in lazy initialization blocks" id="INIT.CLIB" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="INIT" desc="Explicitly initialize all fields" id="INIT.CSI" sev="4" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Avoid double initialization of fields" id="INIT.DI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Use the optional java.util.Locale parameter" id="INTER.CCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Do not use single characters with logic operators in an Internationalized environment" id="INTER.CLO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'Character.toLowerCase(char)' or 'Character.toUpperCase(char)' in an internationalized environment" id="INTER.CTLC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="INTER" desc="Isolate translatable text in resource bundles in an Internationalized environment" id="INTER.ITT" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Provide a 'Locale' argument when instantiating 'SimpleDateFormat' objects" id="INTER.SDFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Avoid calling methods and constructors which do not allow you to specify a character encoding option" id="INTER.SEO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Avoid unnecessary &quot;$NON-NLS&quot; and &quot;NOI18N&quot; comments" id="INTER.UNLS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'toString()' or 'String.valueOf()' on Date objects in an Internationalized environment" id="INTER.DTS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Use &quot;static final&quot; constants for single character literals in an Internationalized environment" id="INTER.NCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="1;" cat="INTER" desc="Do not call 'toString()' or 'String.valueOf()' on numeric values in an Internationalized environment" id="INTER.NTS" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call the 'parse' methods of the 'Number' types in an Internationalized environment" id="INTER.PN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'toString()' or 'String.valueOf()' on Time objects in an Internationalized environment" id="INTER.TTS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="4;" authUrg="1;" cat="INTER" desc="Do not use String concatenation in an Internationalized environment" id="INTER.COS" sev="5" total="4"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'String.compareTo()' in an Internationalized environment" id="INTER.SCT" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'String.equals()' in an Internationalized environment" id="INTER.SE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'String.indexOf()' or 'String.lastIndexOf()' in an Internationalized environment" id="INTER.SIO" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not use 'StringTokenizer' in an Internationalized environment" id="INTER.ST" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="9;" authUrg="2;" cat="JAVADOC" desc="Always include a description of whether or not a method can return null in the Javadoc" id="JAVADOC.CRN" sev="3" total="9"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Avoid unused Javadoc tags" id="JAVADOC.DPMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Enforce custom Javadoc tags for methods/annotation member types" id="JAVADOC.ECTM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Enforce custom Javadoc tags for types" id="JAVADOC.ECTT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Do not insert non-Javadoc comments between Javadoc comments and declarations" id="JAVADOC.JNJD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Include a meaningful description in Javadoc tags" id="JAVADOC.MDJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Avoid misformatted Javadoc tags" id="JAVADOC.MISFORMAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@return' Javadoc tag in method Javadoc comments" id="JAVADOC.MRDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@version' tag in type Javadoc comments" id="JAVADOC.MVJDT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Order Javadoc tags appropriately" id="JAVADOC.ORDER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@param' Javadoc tag for each parameter of methods" id="JAVADOC.PARAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="12;" authUrg="2;" cat="JAVADOC" desc="Provide Javadoc comments and descriptions for types" id="JAVADOC.PJDC" sev="3" total="12"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Provide Javadoc comments and descriptions for fields" id="JAVADOC.PJDF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="16;" authUrg="3;" cat="JAVADOC" desc="Provide Javadoc comments and descriptions for methods" id="JAVADOC.PJDM" sev="3" total="16"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Enforce restraint on number of lines used for Javadoc comments" id="JAVADOC.SINGLE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@concurrency' Javadoc tag on &quot;synchronized&quot; methods and blocks" id="JAVADOC.SMJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="1;" cat="JAVADOC" desc="Avoid misspelling words in Javadoc comments and string literals" id="JAVADOC.SPELL" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Specify 'RUNTIME' as the retention policy when using the '@Documented' annotation" id="JAVADOC.SRRP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@throws' or '@exception' Javadoc tag in methods" id="JAVADOC.THROW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="JAVADOC" desc="Provide a Javadoc comment for 'toString()' methods" id="JAVADOC.TSMJT" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Ensure that certain Javadoc tags only span one line" id="JAVADOC.TSOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Avoid using the '@return' Javadoc tag on &quot;void&quot; methods" id="JAVADOC.VMCR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Avoid unsupported '@' tags and other tags that should not be used in Javadoc comments" id="JAVADOC.BT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Enforce custom Javadoc tags for fields" id="JAVADOC.ECTF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@author' Javadoc tag in declaration Javadoc comments" id="JAVADOC.MAJDT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Ensure index is valid in JDBC method invocation" id="JDBC.BRSA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Close JDBC connections in &quot;finally&quot; blocks" id="JDBC.CDBC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Close JDBC resources in &quot;finally&quot; blocks" id="JDBC.RRWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Use &quot;PreparedStatements&quot; correctly" id="JDBC.UPSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Close JDBC objects in the correct order" id="JDBC.COCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JDBC" desc="Reuse data sources for JDBC connections" id="JDBC.DSLV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Do not open or close JDBC connections in loops" id="JDBC.ODBIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JDBC" desc="Do not store database connection objects in &quot;static&quot; fields" id="JDBC.SCSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JDBC" desc="Use javax.sql.DataSource to get the database connection" id="JDBC.UDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Use instance of RowSetFactory to create a RowSet object" id="JDBC.URSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not include assertion statements in threads other than the main thread" id="JUNIT.AST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Avoid extending 'TestCase' in test classes which contain the '@Test' annotation" id="JUNIT.ETCTA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that JUnit 5 test classes that use @Ignore are annotated with @ExtendWith(IgnoreCondition.class) or @EnableJUnit4MigrationSupport" id="JUNIT.IGNORE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure JUnit test cases include assertion methods" id="JUNIT.SIA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Make 'suite()' methods &quot;public&quot; and &quot;static&quot;" id="JUNIT.SUITE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not use the TemporaryFolder Rule in JUnit 5 tests" id="JUNIT.TDIR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="14;" authUrg="2;" cat="JUNIT" desc="Make sure all methods have at least one JUnit test method" id="JUNIT.TEST" sev="2" total="14"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Prefer assertEquals and assertNotEquals over assertTrue and assertFalse" id="JUNIT.AEAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not hard code the location to data used by a unit test" id="JUNIT.AHLOD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Prefer assertNull and assertNotNull over assertTrue and assertFalse" id="JUNIT.ANAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Avoid negating boolean parameters to assertTrue() or assertFalse()" id="JUNIT.ANBA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Prefer assertSame and assertNotSame over assertTrue and assertFalse" id="JUNIT.ASAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Include a message string in JUnit assertions" id="JUNIT.ASSERT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Avoid using loops in JUnit tests" id="JUNIT.AUL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Avoid calling 'assert' methods in catch blocks" id="JUNIT.CBA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JUNIT" desc="Call the superclass' 'setUp' and 'tearDown' methods in the 'setUp' and 'tearDown' methods of JUnit test classes" id="JUNIT.CSUPER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that 'setUp()' and 'tearDown()' methods are implemented correctly" id="JUNIT.CSUTD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Use the fail() method instead of forcing a failed condition using the assertTrue(false) or assertFalse(true) method" id="JUNIT.FAIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not invoke the 'fail()' method in a 'catch' block in a JUnit test method" id="JUNIT.FICB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not implement the 'suite()' method in JUnit test classes" id="JUNIT.ISMTC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not use the constructor to set up test cases" id="JUNIT.OSIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that a setup method is defined in the test class" id="JUNIT.OSUM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that a cleanup method is defined in the test class" id="JUNIT.OTDM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not use JUnit 4 annotations when migrating tests to JUnit 5" id="JUNIT.RPL5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Set all fields which are initialized in the 'setUp()' method to &quot;null&quot; in the 'tearDown()' method" id="JUNIT.SIFN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Use '@Test' annotation instead of extending 'TestCase'" id="JUNIT.TATC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JUNIT" desc="Include at least one test method in each 'TestCase' class" id="JUNIT.TCWNT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Include an appropriate Javadoc tag in the Javadoc for JUnit test methods" id="JUNIT.UPJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Use the correct signature for the 'suite()' method in JUnit test classes" id="JUNIT.UPSS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that JUnit classes have a main() allowing them to be executed in isolation" id="JUNIT.MAIN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Place each test class in the same location as the class that it tests" id="JUNIT.DIR" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.metrics.analyzer" authTot="18;" authUrg="0;" cat="METRIC" desc="McCabe Cyclomatic Complexity" id="METRIC.CC" sev="3" total="18"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of lines in &quot;class&quot; or &quot;interface&quot;" id="METRICS.CTNL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of comment lines in a method" id="METRICS.NOMCML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of package-private fields" id="METRICS.NPKGF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of package-private methods" id="METRICS.NPKGM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of &quot;private&quot; fields" id="METRICS.NPRIF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of &quot;private&quot; methods" id="METRICS.NPRIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of &quot;protected&quot; fields" id="METRICS.NPROF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of &quot;protected&quot; methods" id="METRICS.NPROM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of &quot;public&quot; fields" id="METRICS.NPUBF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of &quot;public&quot; methods" id="METRICS.NPUBM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of parameters" id="METRICS.PAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of lines in a method" id="METRICS.TNLM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of method calls" id="METRICS.TNMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of &quot;return&quot; statements" id="METRICS.TRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Cyclomatic Complexity" id="METRICS.VG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of statement lines in a method" id="METRICS.ECLM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of statement lines in a &quot;class&quot; or &quot;interface&quot;" id="METRICS.ECLT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of statements in a method" id="METRICS.NSTMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="10;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Percentage of Javadoc comments (%)" id="METRICS.PJDC" sev="3" total="10"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of fields" id="METRICS.NOFT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of methods" id="METRICS.NOM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: Number of comment lines in a &quot;class&quot; or &quot;interface&quot;" id="METRICS.NOTCML" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="METRICS" desc="DEPRECATED: &quot;class&quot; or &quot;interface&quot; inheritance level" id="METRICS.ID" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="5;" authUrg="0;" cat="MOBILE" desc="Avoid accessing same fields and methods multiple times" id="MOBILE.ACFM" sev="3" total="5"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid using 'getter' and 'setter' methods" id="MOBILE.AMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid using array of primtive wrapper objects" id="MOBILE.APTA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid using enhanced &quot;for&quot; loop to walk through a &quot;java.lang.Iterable&quot; object" id="MOBILE.AUEF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="6;" authUrg="1;" cat="MOBILE" desc="Avoid declaring &quot;interface&quot; types" id="MOBILE.AUI" sev="3" total="6"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid multiple dimension arrays" id="MOBILE.DARRAY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="2;" authUrg="0;" cat="MOBILE" desc="Avoid using enums" id="MOBILE.ENUM" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid using floats" id="MOBILE.FLOATER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.ANDROID" desc="Always override 'onSaveInstanceState()'" id="MOBILE.ANDROID.AOSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="MOBILE.ANDROID" desc="Make sure that widgets aren't updated too often" id="MOBILE.ANDROID.WUP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Do not use anonymous classes as interface implementors" id="MOBILE.J2ME.ACII" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Do not use an array length in a loop condition expression" id="MOBILE.J2ME.ARLL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Avoid constant initializations of primitive arrays that exceed a certain size" id="MOBILE.J2ME.CIPA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Avoid classes that are subclassed only once and are not publicly used" id="MOBILE.J2ME.CSOO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Do not access a field excessively" id="MOBILE.J2ME.EAOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Ensure methods use return parameters instead of returning new objects" id="MOBILE.J2ME.EURP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Catch 'OutOfMemoryError' for large array allocations" id="MOBILE.J2ME.OOME" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not declare types with the same name as types in the Java platform" id="NAMING.DJLO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="NAMING" desc="Avoid using potential Java keywords as identifiers" id="NAMING.ID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not use a package name that is reserved by Sun" id="NAMING.RPKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow class name conventions defined for annotations" id="NAMING.ANNS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Avoid using dollar signs in names" id="NAMING.DSN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Ensure class names reflect classes which they extend" id="NAMING.ECN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow class name conventions defined for base classes" id="NAMING.EXTENDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow a naming convention for getter methods" id="NAMING.GETA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow a naming convention for &quot;boolean&quot; getter methods" id="NAMING.GETB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="NAMING" desc="Use all uppercase letters for the names of fields in an &quot;interface&quot;" id="NAMING.IFV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow class name conventions defined for implemented interfaces" id="NAMING.IMPLS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use 'is...'  only for naming methods that return a &quot;boolean&quot;" id="NAMING.IRB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for annotations" id="NAMING.NA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for array and collection variables" id="NAMING.NAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for &quot;abstract&quot; classes" id="NAMING.NACL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for classes" id="NAMING.NCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for exceptions" id="NAMING.NE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for enum type declarations" id="NAMING.NENUM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for &quot;final&quot; local variables" id="NAMING.NFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for non-&quot;static&quot; fields" id="NAMING.NIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for interfaces" id="NAMING.NITF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for local variables" id="NAMING.NLV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for non-&quot;static&quot; methods" id="NAMING.NM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for method parameters" id="NAMING.NMP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for type parameters" id="NAMING.NPH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for non-&quot;final&quot; &quot;static&quot; fields" id="NAMING.NSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for &quot;static&quot; methods" id="NAMING.NSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for JUnit test classes" id="NAMING.NTEST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="NAMING" desc="Use a naming convention for &quot;package&quot; names" id="NAMING.PKG" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow a naming convention for setter methods" id="NAMING.SETA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for singleton classes" id="NAMING.SINGLETON" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for tag handlers and associated classes" id="NAMING.THAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not use lowercase letters in &quot;final&quot; &quot;static&quot; field names" id="NAMING.USF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for utility classes" id="NAMING.UTIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not use variables with identical names or names that differ only in case" id="NAMING.UUVN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use conventional variable names" id="NAMING.CVN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="6;" authUrg="2;" cat="NAMING" desc="Follow limits for the lengths of type, method, field, parameter, and variable names" id="NAMING.LLI" sev="4" total="6"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="8;" authUrg="2;" cat="NAMING" desc="Use Hungarian notation for variables" id="NAMING.UHN" sev="4" total="8"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not hide inherited fields" id="OOP.AHF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OOP" desc="Do not declare a method in an interface which conflicts with a 'protected' method of 'Object'" id="OOP.CIMOM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OOP" desc="Do not extend concrete classes in &quot;abstract&quot; classes" id="OOP.ACECC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid casts to types which are more specific than necessary" id="OOP.ACST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" id="OOP.AF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not hide inherited &quot;static&quot; member methods" id="OOP.AHSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="OOP" desc="Add the &quot;@Override&quot; annotation to overriding methods" id="OOP.AOA" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Always override certain methods when extending certain types" id="OOP.AOCM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Redeclare a class with only &quot;abstract&quot; methods and &quot;static final&quot; fields as an &quot;interface&quot;" id="OOP.ASFI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not implement or extend annotations" id="OOP.AUASI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not use an object to access &quot;static&quot; fields or methods" id="OOP.AUO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="OOP" desc="Do not hide fields and local variables declared in enclosing scopes" id="OOP.HIF" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="OOP" desc="Do not give method local variables and parameters the same name as class fields" id="OOP.HMF" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid inner classes in interfaces" id="OOP.ICIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid implementing interfaces only to access constants" id="OOP.IIAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid more than two levels of nested inner classes" id="OOP.LEVEL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Give &quot;finalize()&quot; methods &quot;protected&quot; access" id="OOP.MFP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="OOP" desc="Provide mutable classes with copy functionality" id="OOP.MUCOP" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid &quot;abstract&quot; classes without &quot;abstract&quot; methods" id="OOP.NAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not declare &quot;public&quot; or package-private constructors in &quot;abstract&quot; classes" id="OOP.NPAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not override an instance &quot;private&quot; method" id="OOP.OPM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not use &quot;protected&quot; access for members of &quot;final&quot; classes" id="OOP.PIFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Ensure 'public' classes have at least one 'public' or 'protected' member" id="OOP.PMPC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not declare a class as implementing an interface if a superclass already implements that interface" id="OOP.RI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Use a naming convention for singleton classes" id="OOP.SNGL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Specify which version of potentially ambiguous methods you wish to call for method calls in inner classes" id="OOP.SVHM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Ensure methods are either a command(change state) or a query(get state)" id="OOP.CQS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid declaring methods inherited from class &quot;Object&quot; in an interface" id="OOP.IDOM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Use &quot;instanceof&quot; only on interfaces" id="OOP.INSOF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid interfaces with no fields or methods (marker interfaces)" id="OOP.MI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Declare methods in &quot;abstract&quot; classes with empty bodies &quot;abstract&quot;" id="OOP.NOMA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not declare &quot;private&quot; or &quot;static&quot; methods as &quot;final&quot;" id="OOP.PSDF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid referencing a class' subclasses from itself" id="OOP.RSFC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Use getContextClassLoader() instead of getClassLoader()" id="OOP.THRECL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OOP" desc="Implement interface methods non-trivially or declare them &quot;abstract&quot;" id="OOP.IIN" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="When calling &quot;Math.ceil()&quot;, do not pass in an integer that has been cast to a floating point type" id="OPT.ICDPC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid questionable uses of non-short-circuit logic" id="OPT.USCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Change non-&quot;private&quot; members to &quot;private&quot; in anonymous classes" id="OPT.AAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use abbreviated assignment operators" id="OPT.AAS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Do not use the 'new String(String)' constructor" id="OPT.ACDO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Do not get the 'Class' object through new object instantiation" id="OPT.AGC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid new instantiations of primitive wrapper objects, whose values are cached" id="OPT.ANIPW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary Map operations" id="OPT.AUMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Simplify &quot;boolean&quot; returns" id="OPT.BR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Close all &quot;java.io.Closeable&quot; resources in a &quot;finally&quot; block" id="OPT.CCR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid putting constant expressions inside loops" id="OPT.CEIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not call methods in loop condition statements" id="OPT.CEL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Close input and output resources in &quot;finally&quot; blocks" id="OPT.CIO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Check the logging level before calling potentially expensive logging operations" id="OPT.CLL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="OPT" desc="Do not convert a value to a String by concatenating the empty String" id="OPT.CPTS" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid duplicate calls to the &quot;get&quot; methods of &quot;ResultSet&quot;" id="OPT.CRSG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Close resources as early as possible" id="OPT.CRWD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not use a &quot;private&quot; field that is accessed in only one method; change it to a local variable" id="OPT.CTLV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" id="OPT.DIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'String.length() == 0' instead of 'String.equals(&quot;&quot;)'" id="OPT.EES" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'equalsIgnoreCase()' instead of calls to 'toLowerCase()' or 'toUpperCase()'" id="OPT.EIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid calling expensive operations in the body of a loop" id="OPT.EOIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid accessing members which will require synthetic accessor methods" id="OPT.ICGA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not iterate through Lists using the 'get()' method" id="OPT.ILUG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'System.arraycopy()' instead of using a loop to copy arrays" id="OPT.IRB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not instantiate a class which contains only static fields and methods" id="OPT.ISC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Move invariants outside of loops wherever possible" id="OPT.LIOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not instantiate variables in a loop body" id="OPT.LOOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary comparisons to &quot;null&quot;" id="OPT.MUNC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid 'null' check before 'instanceof'" id="OPT.NCIO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid creating new instances of BigInteger and BigDecimal" id="OPT.NIW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Declare &quot;final&quot; fields with a known compile time value as &quot;static&quot;" id="OPT.NSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'charAt()' instead of 'startsWith()' for one character comparisons" id="OPT.PCTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not instantiate the wrapper classes for primitive types" id="OPT.PRIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Specify an initial 'StringBuffer' capacity" id="OPT.SB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid converting StringBuffer or StringBuilder to String to check length" id="OPT.SBL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'StringBuilder' instead of 'StringBuffer' when synchronization is not required" id="OPT.SBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid using synchronized data structures for local variables" id="OPT.SDLS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Declare member classes &quot;static&quot; if possible" id="OPT.SI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid using 'String.replaceAll()' with literal values" id="OPT.SRA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use single quotes instead of double quotes for single character string concatenation" id="OPT.STR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Simplify methods that return strings that are always concatenated" id="OPT.STRBUF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary calls to 'String' methods" id="OPT.STS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid use of if statements if they can be replaced with switch statements" id="OPT.SWIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not call a synchronized method inside of a loop" id="OPT.SYN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Do not compare boolean variables with &quot;true&quot;" id="OPT.UEQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary &quot;instanceof&quot; evaluations" id="OPT.UISO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not call the methods from 'java.lang.Math' if the result is a constant which can be easily determined" id="OPT.UMATH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary casting" id="OPT.UNC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'StringBuffer' instead of 'String' when concatenating strings" id="OPT.USB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'String' instead of 'StringBuffer' for constant strings" id="OPT.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not call ''String.toCharArray()'' unnecessarily" id="OPT.STCA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'stack' variables whenever possible" id="OPT.USV" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="2;" authUrg="0;" cat="OPT" desc="Make getter and setter methods for instance fields &quot;final&quot;" id="OPT.MAF" sev="5" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use the 'nextInt()' method to generate a random integer" id="OPT.NIVND" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Use collection size for target array in 'toArray()'" id="OPT.TOARRAY" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against Command injection" id="OWASP2017.A1.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against Jakarta Digester injection" id="OWASP2017.A1.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against Environment injection" id="OWASP2017.A1.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Exclude unsanitized user input from format strings" id="OWASP2017.A1.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against JXPath injection" id="OWASP2017.A1.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against LDAP injection" id="OWASP2017.A1.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against Reflection injection" id="OWASP2017.A1.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against SQL injection" id="OWASP2017.A1.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against XPath injection" id="OWASP2017.A1.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="OWASP2017.A1.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against log forging" id="OWASP2017.A1.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against network resource injection" id="OWASP2017.A1.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A10" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="OWASP2017.A10.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A10" desc="Ensure all sensitive method invocations are logged" id="OWASP2017.A10.ENFL" origId="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="OWASP2017.A2.ISL" origId="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Ensure proper session expiration" id="OWASP2017.A2.RUIM" origId="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="OWASP2017.A2.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Protect against using unprotected credentials" id="OWASP2017.A2.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="OWASP2017.A2.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="OWASP2017.A2.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="OWASP2017.A3.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="OWASP2017.A3.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Do not log confidential or sensitive information" id="OWASP2017.A3.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using hard-coded cryptographic keys" id="OWASP2017.A3.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="OWASP2017.A3.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using insecure algorithms for cryptography" id="OWASP2017.A3.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="MessageDigest objects must process the data with the 'update' method" id="OWASP2017.A3.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Use hash functions with a salt" id="OWASP2017.A3.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="OWASP2017.A3.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2017.A3.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Prevent exposure of sensitive data" id="OWASP2017.A3.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Initialize KeyGenerator instances" id="OWASP2017.A3.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="OWASP2017.A3.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Always verify JarFile signatures" id="OWASP2017.A3.VJFS" origId="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="OWASP2017.A3.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Ensure arguments passed to certain methods come from predefined methods list" id="OWASP2017.A3.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="OWASP2017.A3.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Properly validate server identity" id="OWASP2017.A3.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Do not hard-code IP addresses and port numbers" id="OWASP2017.A3.HCNA" origId="PORT.HCNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Safely serialize sensitive data" id="OWASP2017.A3.SSSD" origId="BD.SECURITY.SSSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Use the SSL-enabled version of classes when possible" id="OWASP2017.A3.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="OWASP2017.A3.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A4" desc="Disable XML external entity injection" id="OWASP2017.A4.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A5" desc="Protect against File names injection" id="OWASP2017.A5.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A5" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="OWASP2017.A5.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid using the DriverManagerDataSource class in production code" id="OWASP2017.A6.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid debug information from Spring Security framework to logs" id="OWASP2017.A6.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2017.A6.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="OWASP2017.A6.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not disable CSRF protection" id="OWASP2017.A6.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not disable CSRF protection" id="OWASP2017.A6.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Password information should not be included in properties file in plaintext" id="OWASP2017.A6.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="OWASP2017.A6.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="OWASP2017.A6.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not catch exception types which are too general or are unchecked exceptions" id="OWASP2017.A6.NCE" origId="CODSTA.EPC.NCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not catch 'NullPointerException'" id="OWASP2017.A6.NCNPE" origId="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not throw exception types which are too general or are unchecked exceptions" id="OWASP2017.A6.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid declaring methods to throw general or unchecked Exception types" id="OWASP2017.A6.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not declare entity beans as remote" id="OWASP2017.A6.RR" origId="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Always specify error pages in web.xml" id="OWASP2017.A6.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="1;" cat="OWASP2017.A6" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="OWASP2017.A6.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Ensure Session-ID Length is sufficient" id="OWASP2017.A6.SLID" origId="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Restrict cross-origin resource sharing to secure origins" id="OWASP2017.A6.JXCORS" origId="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A7" desc="Canonicalize data before validation" id="OWASP2017.A7.CDBV" origId="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A7" desc="Protect against HTTP response splitting" id="OWASP2017.A7.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A7" desc="Protect against XSS vulnerabilities" id="OWASP2017.A7.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Avoid parsing untrusted data with XMLDecoder" id="OWASP2017.A8.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Disable LDAP deserialization" id="OWASP2017.A8.SC" origId="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="OWASP2017.A8.DUID" origId="SERIAL.DUID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="OWASP2017.A8.RRSC" origId="SERIAL.RRSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="OWASP2017.A8.RWAF" origId="SERIAL.RWAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="OWASP2017.A8.SCBNP" origId="SERIAL.SCBNP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="OWASP2017.A8.SROS" origId="SERIAL.SROS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Validate objects before deserialization" id="OWASP2017.A8.VOBD" origId="SERIAL.VOBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes" id="OWASP2017.A8.OROM" origId="SECURITY.EAB.OROM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Do not log confidential or sensitive information" id="OWASP2019.API10.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="OWASP2019.API10.LHII" origId="HIBERNATE.LHII" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="OWASP2019.API10.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Protect against log forging" id="OWASP2019.API10.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="OWASP2019.API10.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Avoid using multiple loggers, use logging levels instead" id="OWASP2019.API10.AUML" origId="CODSTA.BP.AUML" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Avoid debug levels which are too high in Tomcat's 'server.xml'" id="OWASP2019.API10.DLTH" origId="XML.DLTH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Ensure all sensitive method invocations are logged" id="OWASP2019.API10.ENFL" origId="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Ensure that the logging level checked matches the level of the called logging method" id="OWASP2019.API10.LLM" origId="PB.LOGIC.LLM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="OWASP2019.API10" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="OWASP2019.API10.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Avoid writing to Consoles" id="OWASP2019.API10.ACW" origId="SECURITY.ESD.ACW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid hard-coding the arguments to certain methods" id="OWASP2019.API2.AHCA" origId="SECURITY.WSC.AHCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="OWASP2019.API2.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="OWASP2019.API2.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Keep all authentication methods centralized to enforce consistency" id="OWASP2019.API2.CAM" origId="SECURITY.WSC.CAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using hard-coded cryptographic keys" id="OWASP2019.API2.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="OWASP2019.API2.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using insecure algorithms for cryptography" id="OWASP2019.API2.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Use hash functions with a salt" id="OWASP2019.API2.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Call authentication methods to enforce consistency" id="OWASP2019.API2.PAC" origId="SECURITY.WSC.PAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="OWASP2019.API2.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid EJB 3 methods without security annotations" id="OWASP2019.API2.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid storing sensitive data in plaintext in a cookie" id="OWASP2019.API2.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="OWASP2019.API2.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using cryptographic keys which are too short" id="OWASP2019.API2.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="OWASP2019.API2.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Password information should not be included in properties file in plaintext" id="OWASP2019.API2.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Mark cookies as HttpOnly" id="OWASP2019.API2.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Protect against using unprotected credentials" id="OWASP2019.API2.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Clear sensitive data after use" id="OWASP2019.API2.CSD" origId="SECURITY.ESD.CSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="OWASP2019.API2.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="OWASP2019.API2.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using plain text passwords in Axis2 configuration files" id="OWASP2019.API2.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="OWASP2019.API2.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Always specify absolute paths to execute commands" id="OWASP2019.API3.PBRTE" origId="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="OWASP2019.API3.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Enforce 'SecurityManager' checks before setting or getting fields" id="OWASP2019.API3.SCF" origId="SECURITY.WSC.SCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Enforce 'SecurityManager' checks in methods of 'Cloneable' classes" id="OWASP2019.API3.SCLONE" origId="SECURITY.WSC.SCLONE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Enforce 'SecurityManager' checks in methods of 'Serializable' classes" id="OWASP2019.API3.SCSER" origId="SECURITY.WSC.SCSER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure 'SecurityManager' check in constructor of &quot;public&quot; non-&quot;final&quot; sensitive type" id="OWASP2019.API3.SCSM" origId="SECURITY.WSC.SCSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Prevent exposure of sensitive data" id="OWASP2019.API3.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Do not interrogate or modify security policy information in a web component" id="OWASP2019.API3.SPI" origId="SECURITY.ESD.SPI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare &quot;transient&quot; fields &quot;private&quot;" id="OWASP2019.API3.TFP" origId="SECURITY.ESD.TFP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="OWASP2019.API3.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Use &quot;PreparedStatements&quot; correctly" id="OWASP2019.API3.UPSC" origId="JDBC.UPSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare package-private methods as inaccessible as possible" id="OWASP2019.API3.DPAM" origId="GLOBAL.DPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Do not use static variables in servlets without synchronization" id="OWASP2019.API3.NSSS" origId="SERVLET.NSSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare a package-private method &quot;final&quot; if it is not overridden" id="OWASP2019.API3.SPAM" origId="GLOBAL.SPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare 'serialPersistentFields' &quot;private static final&quot;" id="OWASP2019.API3.SPF" origId="SERIAL.SPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Avoid &quot;transient&quot; fields in serialPersistentFields array" id="OWASP2019.API3.TSPF" origId="SECURITY.ESD.TSPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Encapsulate all redirect and forward URLs with a validation function" id="OWASP2019.API3.VRD" origId="SECURITY.IBA.VRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Properly validate server identity" id="OWASP2019.API3.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="OWASP2019.API3.ADS" origId="SECURITY.UEC.ADS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="OWASP2019.API3.AELQ" origId="SECURITY.UEC.AELQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Do not throw 'NullPointerException'" id="OWASP2019.API3.NTNPE" origId="EXCEPT.NTNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="OWASP2019.API3.PAF" origId="SECURITY.WSC.PAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare subclasses of 'Permission' and 'BasicPermission' &quot;final&quot;" id="OWASP2019.API3.PBPSF" origId="SECURITY.WSC.PBPSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="OWASP2019.API3.PDLC" origId="SECURITY.BV.PDLC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="OWASP2019.API3.PRMF" origId="SECURITY.WSC.PRMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Store sensitive data in mutable objects" id="OWASP2019.API3.SDM" origId="SECURITY.ESD.SDM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure that JavaBean classes implement 'java.io.Serializable'" id="OWASP2019.API3.SERIALIZABLE" origId="BEAN.SERIALIZABLE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Avoid using the SOAP Monitor module" id="OWASP2019.API3.SMM" origId="SECURITY.UEC.SMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure 'SecurityManager' checks before 'Socket' transfers or retrievals" id="OWASP2019.API3.SMSTR" origId="SECURITY.WSC.SMSTR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Minimize usage of System.out and System.err in Servlets" id="OWASP2019.API3.SOP" origId="SERVLET.SOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Catch all exceptions which may be thrown within Servlet methods" id="OWASP2019.API3.CETS" origId="SERVLET.CETS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="OWASP2019.API3.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="OWASP2019.API3.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Avoid using the DriverManagerDataSource class in production code" id="OWASP2019.API4.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Ensure resources are deallocated" id="OWASP2019.API4.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="OWASP2019.API4.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Close resources as early as possible" id="OWASP2019.API4.CRWD" origId="OPT.CRWD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Ensure 'wait()', 'notify()' and 'notifyAll()' are invoked on an object that is clearly synchronized in its enclosing mod scope" id="OWASP2019.API4.NSYN" origId="TRS.NSYN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Do not open or close JDBC connections in loops" id="OWASP2019.API4.ODBIL" origId="JDBC.ODBIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Do not call the 'start()' method directly on Thread class instances" id="OWASP2019.API4.ISTART" origId="TRS.ISTART" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Specify a valid 'maxlength' value for each form field in Struts validation files" id="OWASP2019.API4.MLFF" origId="STRUTS.MLFF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Ensure sufficient protection against multiple failed authentication attempts" id="OWASP2019.API4.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API5" desc="Keep all access control methods centralized to enforce consistency" id="OWASP2019.API5.CACM" origId="SECURITY.WSC.CACM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="OWASP2019.API7.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid debug information from Spring Security framework to logs" id="OWASP2019.API7.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="OWASP2019.API7.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="MessageDigest objects must process the data with the 'update' method" id="OWASP2019.API7.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Call access control methods to enforce consistency" id="OWASP2019.API7.PACC" origId="SECURITY.WSC.PACC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2019.API7.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2019.API7.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Initialize KeyGenerator instances" id="OWASP2019.API7.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="OWASP2019.API7.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="OWASP2019.API7.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not access or modify security configuration objects" id="OWASP2019.API7.AMSC" origId="EJB.AMSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not disable CSRF protection" id="OWASP2019.API7.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not disable CSRF protection" id="OWASP2019.API7.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure arguments passed to certain methods come from predefined methods list" id="OWASP2019.API7.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="OWASP2019.API7.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that the 'scope' attribute is set to either &quot;request&quot; or &quot;session&quot; for actions and exceptions in 'struts-config.xml' files" id="OWASP2019.API7.RSS" origId="STRUTS.RSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not set or create a new SecurityManager in EJBs" id="OWASP2019.API7.SMSN" origId="EJB.SMSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="OWASP2019.API7.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="OWASP2019.API7.ISOS" origId="SECURITY.UEC.ISOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid using native JDBC" id="OWASP2019.API7.JDBCTEMPLATE" origId="SPRING.JDBCTEMPLATE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="OWASP2019.API7.LCA" origId="SECURITY.UEC.LCA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not catch 'NullPointerException'" id="OWASP2019.API7.NCNPE" origId="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not throw exception types which are too general or are unchecked exceptions" id="OWASP2019.API7.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid declaring methods to throw general or unchecked Exception types" id="OWASP2019.API7.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not declare entity beans as remote" id="OWASP2019.API7.RR" origId="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="OWASP2019.API7.SDAR" origId="SECURITY.UEC.SDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Always specify error pages in web.xml" id="OWASP2019.API7.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure Session-ID Length is sufficient" id="OWASP2019.API7.SLID" origId="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="OWASP2019.API7.SRCD" origId="SECURITY.UEC.SRCD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="OWASP2019.API7.TDAR" origId="SECURITY.UEC.TDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="OWASP2019.API7.UDC" origId="SECURITY.UEC.UDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Use the SSL-enabled version of classes when possible" id="OWASP2019.API7.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCMT" origId="SECURITY.UEC.WCMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCUTS" origId="SECURITY.UEC.WCUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WMT" origId="SECURITY.UEC.WMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="OWASP2019.API7.WSS" origId="SECURITY.UEC.WSS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WUTS" origId="SECURITY.UEC.WUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid using custom MessageDigest implementations" id="OWASP2019.API7.ACMD" origId="SECURITY.WSC.ACMD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Restrict cross-origin resource sharing to secure origins" id="OWASP2019.API7.JXCORS" origId="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'" id="OWASP2019.API8.AEAF" origId="SECURITY.IBA.AEAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Canonicalize data before validation" id="OWASP2019.API8.CDBV" origId="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid untrusted input when logging messages with Seam Logging API" id="OWASP2019.API8.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="OWASP2019.API8.FMCD" origId="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Specify a valid 'type' attribute for each '&lt;form-property>' element in 'struts-config.xml' files" id="OWASP2019.API8.TAFP" origId="STRUTS.TAFP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Command injection" id="OWASP2019.API8.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Validate potentially tainted data before it is used in methods that generate code" id="OWASP2019.API8.TDCODE" origId="BD.SECURITY.TDCODE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Jakarta Digester injection" id="OWASP2019.API8.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Environment injection" id="OWASP2019.API8.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against File contents injection" id="OWASP2019.API8.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against File names injection" id="OWASP2019.API8.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Exclude unsanitized user input from format strings" id="OWASP2019.API8.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against JXPath injection" id="OWASP2019.API8.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against LDAP injection" id="OWASP2019.API8.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Library injection" id="OWASP2019.API8.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against HTTP response splitting" id="OWASP2019.API8.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Reflection injection" id="OWASP2019.API8.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against SQL injection" id="OWASP2019.API8.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against XML data injection" id="OWASP2019.API8.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against XPath injection" id="OWASP2019.API8.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against XSS vulnerabilities" id="OWASP2019.API8.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="OWASP2019.API8.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Always verify JarFile signatures" id="OWASP2019.API8.VJFS" origId="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid XPath injection when evaluating XPath queries" id="OWASP2019.API8.XPIJ" origId="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid parsing untrusted data with XMLDecoder" id="OWASP2019.API8.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Disable XML external entity injection" id="OWASP2019.API8.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Encapsulate constructor arguments with a validation function" id="OWASP2019.API8.EDPM" origId="SECURITY.IBA.EDPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against network resource injection" id="OWASP2019.API8.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Validate untrusted XML using schema or DTD before reading" id="OWASP2019.API8.XMLVAL" origId="BD.SECURITY.XMLVAL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Prevent the scripting API from executing untrusted code" id="OWASP2019.API8.ASAPI" origId="SECURITY.WSC.ASAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid calling methods and constructors which do not allow you to specify a character encoding option" id="OWASP2019.API8.SEO" origId="INTER.SEO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Enable the Struts Validator plug-in in all 'struts-config.xml' files" id="OWASP2019.API8.VPI" origId="STRUTS.VPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid using reflection methods" id="OWASP2019.API8.ARM" origId="CODSTA.BP.ARM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Avoid unused Javadoc tags" id="OWASP2019.API9.DPMT" origId="JAVADOC.DPMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Do not insert non-Javadoc comments between Javadoc comments and declarations" id="OWASP2019.API9.JNJD" origId="JAVADOC.JNJD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Avoid misformatted Javadoc tags" id="OWASP2019.API9.MISFORMAT" origId="JAVADOC.MISFORMAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Order Javadoc tags appropriately" id="OWASP2019.API9.ORDER" origId="JAVADOC.ORDER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Use the '@concurrency' Javadoc tag on &quot;synchronized&quot; methods and blocks" id="OWASP2019.API9.SMJT" origId="JAVADOC.SMJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Specify 'RUNTIME' as the retention policy when using the '@Documented' annotation" id="OWASP2019.API9.SRRP" origId="JAVADOC.SRRP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Use the '@throws' or '@exception' Javadoc tag in methods" id="OWASP2019.API9.THROW" origId="JAVADOC.THROW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="OWASP2019.API9" desc="Provide a Javadoc comment for 'toString()' methods" id="OWASP2019.API9.TSMJT" origId="JAVADOC.TSMJT" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Ensure that certain Javadoc tags only span one line" id="OWASP2019.API9.TSOL" origId="JAVADOC.TSOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Include an appropriate Javadoc tag in the Javadoc for JUnit test methods" id="OWASP2019.API9.UPJT" origId="JUNIT.UPJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Avoid using the '@return' Javadoc tag on &quot;void&quot; methods" id="OWASP2019.API9.VMCR" origId="JAVADOC.VMCR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A1" desc="Protect against File names injection" id="OWASP2021.A1.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A1" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="OWASP2021.A1.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A10" desc="Protect against network resource injection" id="OWASP2021.A10.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="OWASP2021.A2.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="OWASP2021.A2.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Do not log confidential or sensitive information" id="OWASP2021.A2.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using hard-coded cryptographic keys" id="OWASP2021.A2.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="OWASP2021.A2.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using insecure algorithms for cryptography" id="OWASP2021.A2.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="MessageDigest objects must process the data with the 'update' method" id="OWASP2021.A2.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Use hash functions with a salt" id="OWASP2021.A2.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="OWASP2021.A2.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Prevent exposure of sensitive data" id="OWASP2021.A2.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Initialize KeyGenerator instances" id="OWASP2021.A2.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="OWASP2021.A2.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="OWASP2021.A2.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Ensure arguments passed to certain methods come from predefined methods list" id="OWASP2021.A2.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="OWASP2021.A2.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Properly validate server identity" id="OWASP2021.A2.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Do not hard-code IP addresses and port numbers" id="OWASP2021.A2.HCNA" origId="PORT.HCNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Safely serialize sensitive data" id="OWASP2021.A2.SSSD" origId="BD.SECURITY.SSSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Use the SSL-enabled version of classes when possible" id="OWASP2021.A2.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="OWASP2021.A2.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Canonicalize data before validation" id="OWASP2021.A3.CDBV" origId="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Command injection" id="OWASP2021.A3.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Jakarta Digester injection" id="OWASP2021.A3.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Environment injection" id="OWASP2021.A3.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against File contents injection" id="OWASP2021.A3.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Exclude unsanitized user input from format strings" id="OWASP2021.A3.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against JXPath injection" id="OWASP2021.A3.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against LDAP injection" id="OWASP2021.A3.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Library injection" id="OWASP2021.A3.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against HTTP response splitting" id="OWASP2021.A3.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Reflection injection" id="OWASP2021.A3.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against SQL injection" id="OWASP2021.A3.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against XPath injection" id="OWASP2021.A3.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against XSS vulnerabilities" id="OWASP2021.A3.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="OWASP2021.A3.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against log forging" id="OWASP2021.A3.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid duplicated forms in the 'validation.xml'" id="OWASP2021.A4.DFV" origId="STRUTS.DFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid DNS lookups for decision making" id="OWASP2021.A4.DNSL" origId="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure method arguments are serializable" id="OWASP2021.A4.ONS" origId="PB.API.ONS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="OWASP2021.A4.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid storing sensitive data in plaintext in a cookie" id="OWASP2021.A4.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure Plugins are added in the 'struts-config.xml'" id="OWASP2021.A4.PLUGIN" origId="STRUTS.PLUGIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2021.A4.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2021.A4.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Do not store non-serializable objects as HttpSession attributes" id="OWASP2021.A4.SNSO" origId="SERIAL.SNSO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Do not store untrusted data in HTTP session" id="OWASP2021.A4.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="OWASP2021.A4.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2021.A4.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2021.A4.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure validators are enabled in the 'struts-config.xml'" id="OWASP2021.A4.EV" origId="STRUTS.EV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="OWASP2021.A4.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure sufficient protection against multiple failed authentication attempts" id="OWASP2021.A4.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid using the DriverManagerDataSource class in production code" id="OWASP2021.A5.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid debug information from Spring Security framework to logs" id="OWASP2021.A5.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="OWASP2021.A5.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not disable CSRF protection" id="OWASP2021.A5.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not disable CSRF protection" id="OWASP2021.A5.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Disable XML external entity injection" id="OWASP2021.A5.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Password information should not be included in properties file in plaintext" id="OWASP2021.A5.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="OWASP2021.A5.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="OWASP2021.A5.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not catch exception types which are too general or are unchecked exceptions" id="OWASP2021.A5.NCE" origId="CODSTA.EPC.NCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not catch 'NullPointerException'" id="OWASP2021.A5.NCNPE" origId="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not throw exception types which are too general or are unchecked exceptions" id="OWASP2021.A5.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid declaring methods to throw general or unchecked Exception types" id="OWASP2021.A5.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not declare entity beans as remote" id="OWASP2021.A5.RR" origId="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Always specify error pages in web.xml" id="OWASP2021.A5.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="OWASP2021.A5.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Ensure Session-ID Length is sufficient" id="OWASP2021.A5.SLID" origId="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Restrict cross-origin resource sharing to secure origins" id="OWASP2021.A5.JXCORS" origId="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="OWASP2021.A7.ISL" origId="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Ensure proper session expiration" id="OWASP2021.A7.RUIM" origId="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="OWASP2021.A7.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Protect against using unprotected credentials" id="OWASP2021.A7.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="OWASP2021.A7.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="OWASP2021.A7.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Always specify absolute paths to execute commands" id="OWASP2021.A8.PBRTE" origId="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Always verify JarFile signatures" id="OWASP2021.A8.VJFS" origId="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Avoid parsing untrusted data with XMLDecoder" id="OWASP2021.A8.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Disable LDAP deserialization" id="OWASP2021.A8.SC" origId="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="OWASP2021.A8.DUID" origId="SERIAL.DUID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes" id="OWASP2021.A8.MASP" origId="PB.API.MASP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="OWASP2021.A8.RRSC" origId="SERIAL.RRSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="OWASP2021.A8.RWAF" origId="SERIAL.RWAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="OWASP2021.A8.SCBNP" origId="SERIAL.SCBNP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="OWASP2021.A8.SROS" origId="SERIAL.SROS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Validate objects before deserialization" id="OWASP2021.A8.VOBD" origId="SERIAL.VOBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes" id="OWASP2021.A8.OROM" origId="SECURITY.EAB.OROM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A9" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="OWASP2021.A9.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A9" desc="Ensure all sensitive method invocations are logged" id="OWASP2021.A9.ENFL" origId="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Unrestricted lock resource" id="PB.CLOSE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Ensure that non-&quot;void&quot; methods have a return value other than empty arrays and &quot;null&quot;" id="PB.EAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Ensure that keys used in comparison operations are immutable" id="PB.IKICO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB" desc="Ensure that exactly one type has the same name as the file name" id="PB.OCSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Place &quot;default&quot; as the last case of the &quot;switch&quot; statement" id="PB.PDCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Provide &quot;default:&quot; for each &quot;switch&quot; statement" id="PB.PDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Include a 'case' statement for each constant of an 'enum' type in 'switch' statements" id="PB.NAECS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB" desc="Ensure that the type that has the same name as the file is declared &quot;public&quot;" id="PB.PCSF" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Ensure that the types passed to &quot;Collection&quot; and &quot;Map&quot; methods match the types in those data structures" id="PB.API.CMMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not call the 'next' method from the 'hasNext' method of an Iterator" id="PB.API.HNCN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not use &quot;URL&quot; objects in &quot;Collections&quot; or &quot;Maps&quot;" id="PB.API.IUMS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Ensure method arguments are serializable" id="PB.API.ONS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not call 'setSize()' in 'ComponentListener.componentResized()'" id="PB.API.DNCSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not create an empty JarFile entry or an empty ZipFile entry" id="PB.API.EJF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid calling 'equals(null)'" id="PB.API.EQNL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Ensure that all types which are used as keys in Sets and Maps override the 'equals()' and 'hashCode()' methods" id="PB.API.KOEH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not overload the 'finalize()' method" id="PB.API.OF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using &quot;.&quot; as a regular expression in 'String.replaceAll()' and 'String.replaceFirst()'" id="PB.API.REP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not pass a 'char' to the 'StringBuffer(int)' constructor" id="PB.API.SBCC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="PB.API.UNI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using the 'equals()' and 'hashCode()' methods of &quot;java.net.URL&quot;" id="PB.API.URL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Update values which may be using to compare with vendor properties" id="PB.API.VENDOR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid extending certain classes (custom rule)" id="PB.API.AECC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid 'put, 'putAll' and 'get' methods of 'java.util.Properties' objects" id="PB.API.APPG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using certain packages or types" id="PB.API.APT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Add the &quot;@Deprecated&quot; annotation to the declarations of deprecated members" id="PB.API.DANNOT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not use deprecated APIs" id="PB.API.DPRAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not extend 'java.util.HashMap' or 'java.util.Hashtable'" id="PB.API.EHM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes" id="PB.API.MASP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using objects with dangerous implementations of 'equals()' or 'hashCode()' as keys in hashed data structures" id="PB.API.MOHK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not define direct or indirect subclasses of 'Error' and 'Throwable'" id="PB.API.NDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Ensure the correct number of arguments for varargs methods with format strings" id="PB.API.VAFS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not extend &quot;Collection&quot; and &quot;Map&quot; classes" id="PB.API.ECMC" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="PB.CUB.ARCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not exit &quot;finally&quot; blocks abruptly" id="PB.CUB.ATSF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use the &quot;+&quot; string concatenation operator to concatenate numbers; use it only to add numbers" id="PB.CUB.DCP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid erroneously placing statements outside blocks" id="PB.CUB.EBI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid overloading varargs methods" id="PB.CUB.OVAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use &quot;char&quot; arrays in &quot;String&quot; concatenations" id="PB.CUB.SAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid invoking 'toString()' on array variables" id="PB.CUB.TOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use '==' or '!=' to compare objects" id="PB.CUB.UEIC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid dangling &quot;else&quot; statements" id="PB.CUB.ADE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid using 'iterator()' with PriorityQueue and PriorityBlockingQueue" id="PB.CUB.AIPQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid using multiple '!' or '~' unary operators" id="PB.CUB.AMCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid passing arrays as arguments to methods that take non-array parameters" id="PB.CUB.APAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid confusing assignments to constructor arguments" id="PB.CUB.AWP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid improper concatenation of characters with numbers" id="PB.CUB.CNVC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid usage of File.canWrite() method because it may returns true even if directory is not writable" id="PB.CUB.CWRITE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid errors in overriding methods of &quot;java.lang.Object&quot;" id="PB.CUB.EOOM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not assign loop control variables in the body of a &quot;for&quot; loop" id="PB.CUB.FLVA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Ensure overriding methods are not unintended covariants due to parameter type differences" id="PB.CUB.IMC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Ensure &quot;static&quot; &quot;final&quot; fields are immutable" id="PB.CUB.IMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Inspect &quot;private&quot; &quot;static&quot; fields which may have mistakenly been declared &quot;static&quot;" id="PB.CUB.ISF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Use the method name 'main()' only for the entry point method" id="PB.CUB.MAIN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not assume that a Java char fully represents a Unicode code point" id="PB.CUB.NCUCP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Ensure overloaded methods in superclass are overridden when overriding a method in subclass" id="PB.CUB.OSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid using &quot;public static final&quot; array fields" id="PB.CUB.PSFA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid referencing mutable fields" id="PB.CUB.RMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use a &quot;switch&quot; statement with a bad &quot;case&quot;" id="PB.CUB.SBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Specify @Retention for annotation type declarations" id="PB.CUB.SRAD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Parenthesize complex expressions in 'print()' or 'println()' statements" id="PB.CUB.STRCC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid type variable parameters when calling overloaded methods" id="PB.CUB.TVOM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not call non-&quot;final&quot;, non-&quot;static&quot; and non-&quot;private&quot; methods from constructors" id="PB.CUB.CTOR" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid suspicious octal escapes" id="PB.CUB.OE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not put code other than logging code inside logging blocks" id="PB.CUB.CILB" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not call 'equals()' methods that always return false" id="PB.LOGIC.EQUS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid calling 'equals()' with same object" id="PB.LOGIC.ESO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid infinite recursive method calls" id="PB.LOGIC.FLRC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid infinite loops" id="PB.LOGIC.AIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid off-by-one errors in loop conditions" id="PB.LOGIC.AOBO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not discard the result of a call to &quot;readLine()&quot; after checking that the return value is non-null" id="PB.LOGIC.DJNCR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not increment or decrement on the same variable over multiple nested &quot;for&quot; loop statements" id="PB.LOGIC.JI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Ensure that the objects used within a loop's condition are properly accessed within the loop's body" id="PB.LOGIC.OAMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid using the wrong index variable to access an array or List element" id="PB.LOGIC.AMOI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid loop variables which are not used in the condition of the loop" id="PB.LOGIC.AULV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not check whether the result of &quot;String.indexOf()&quot; is positive or non-positive" id="PB.LOGIC.CPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Check the return value of methods which read or skip input" id="PB.LOGIC.CRRV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Use 'getClass()' or &quot;instanceof&quot; within 'equals()' and 'compareTo()' method implementations" id="PB.LOGIC.EQLC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid bugs in the usage of loop variables" id="PB.LOGIC.INDEX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Ensure that the logging level checked matches the level of the called logging method" id="PB.LOGIC.LLM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid out of range comparisons" id="PB.LOGIC.OOR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Ensure get/set methods are accessing the correct variables" id="PB.LOGIC.SG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Make sure that methods are invoked on the correct object" id="PB.LOGIC.ROM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid calculations which result in overflow or NaN" id="PB.NUM.ICO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not assign the result of an integer division to a floating point variable" id="PB.NUM.IDCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid comparisons to Double.NaN or Float.NaN" id="PB.NUM.NAN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not initialize array dimensions with negative numbers" id="PB.NUM.NIA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid implicit casts from integer data types to floating point data types" id="PB.NUM.AIC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not pass floating point values to the 'BigDecimal' constructor" id="PB.NUM.BBDCC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not cast primitive data types to lower precision" id="PB.NUM.CLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid using compound assignment operators in cases which may cause overflow" id="PB.NUM.CACO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Possible integer overflow in a compare or compareTo method" id="PB.NUM.CMP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not compare floating point types" id="PB.NUM.DCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not use floating point variables as loop indices" id="PB.NUM.FPLI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid casting the result of an integer multiplication to &quot;long&quot;" id="PB.NUM.IMOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Use unsigned right shift instead of division when overflow is possible" id="PB.NUM.IOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" id="PB.NUM.UBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid passing integer values to 'Math.round()'" id="PB.NUM.UCM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Provide methods to read and write little-endian data" id="PB.NUM.PMRWLED" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Do not add a collection to itself" id="PB.RE.ACTI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Check whether or not &quot;readLine()&quot; returned null before dereferencing the return value" id="PB.RE.IDRL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid using methods add() from JLayer class" id="PB.RE.JLAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid dereferencing null objects" id="PB.RE.PNPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="When used HttpURLConnection always check return value from the getResponseCode() methods before call getInputStream()" id="PB.RE.RCODE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid modifying fixed-size Collections" id="PB.RE.AMFSL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid possible ArrayStoreExceptions" id="PB.RE.ASE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Always check parameters before use in array access" id="PB.RE.CAI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Check the return value of calls to 'String.indexOf()' before passing this value to other &quot;String&quot; methods" id="PB.RE.CIOR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Ensure 'Iterator.next()' method implementations throw 'NoSuchElementException'" id="PB.RE.CTNSE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Use the &quot;fromIndex&quot; argument of 'indexOf()' when necessary" id="PB.RE.IOSS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Do not call 'String.equals(constant)' or 'String.equalsIgnoreCase(constant)'" id="PB.RE.ISEM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Ensure that dereferenced variables match variables which were previously checked for &quot;null&quot;" id="PB.RE.NCMD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid calling the 'add()' method of a Queue" id="PB.RE.AQA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Make sure the IllegalArgumentException message matches the code logic" id="PB.RE.IIAE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.RE" desc="Do not define direct or indirect subclasses of 'RuntimeException'" id="PB.RE.NXRE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid methods returning &quot;null&quot; value" id="PB.RE.VRNULL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid assignment within a condition" id="PB.TYPO.ASI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure that arguments passed to Java wrapper classes do not contain typos" id="PB.TYPO.WT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid unnecessary self computation" id="PB.TYPO.BW" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure &quot;switch&quot; statements do not contain typos" id="PB.TYPO.TLS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Do not use octal integer literals" id="PB.TYPO.UOL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure that the correct &quot;super&quot; method is invoked" id="PB.TYPO.CSI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid assigning same variable in the fall-through switch case" id="PB.TYPO.DAV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid control statements with empty bodies" id="PB.TYPO.EB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure the overriding method name does not have a typo" id="PB.TYPO.IMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Do not give methods and fields the same name as the enclosing class or each other" id="PB.TYPO.NAMING" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid having more than one &quot;getter&quot; or &quot;setter&quot; method for the same field" id="PB.TYPO.RSK" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid conditional expressions that always evaluate to a constant value" id="PB.USC.CC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid classes with no accessible members" id="PB.USC.NACC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid unreachable &quot;else if&quot; and &quot;else&quot; cases" id="PB.USC.UIF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid using &quot;private&quot; fields which are never given a meaningful value" id="PB.USC.FCBS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid increment and decrement statements which have no effect" id="PB.USC.OI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.USC" desc="Do not use the unary operator '+'" id="PB.USC.UNARY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid empty statements" id="PB.USC.AES" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid empty classes" id="PB.USC.EC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.USC" desc="Do not define empty &quot;public&quot; constructors in classes with no other constructors" id="PB.USC.EPC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Ensure method and constructor return values are used" id="PB.USC.NASSIG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Do not catch exceptions only to rethrow them" id="PB.USC.RTE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid self assignments/initializations to fields and/or local variables" id="PB.USC.SAFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against Command injection" id="PCIDSS32.651.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against Jakarta Digester injection" id="PCIDSS32.651.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against Environment injection" id="PCIDSS32.651.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Exclude unsanitized user input from format strings" id="PCIDSS32.651.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against JXPath injection" id="PCIDSS32.651.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against LDAP injection" id="PCIDSS32.651.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against Reflection injection" id="PCIDSS32.651.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against SQL injection" id="PCIDSS32.651.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against XML data injection" id="PCIDSS32.651.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against XPath injection" id="PCIDSS32.651.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="PCIDSS32.651.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Avoid XPath injection when evaluating XPath queries" id="PCIDSS32.651.XPIJ" origId="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against log forging" id="PCIDSS32.651.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against network resource injection" id="PCIDSS32.651.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid DNS lookups for decision making" id="PCIDSS32.6510.DNSL" origId="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="PCIDSS32.6510.ISL" origId="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="PCIDSS32.6510.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="PCIDSS32.6510.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Ensure proper session expiration" id="PCIDSS32.6510.RUIM" origId="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="PCIDSS32.6510.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="PCIDSS32.6510.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="PCIDSS32.6510.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="PCIDSS32.6510.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="PCIDSS32.6510.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Protect against using unprotected credentials" id="PCIDSS32.6510.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="PCIDSS32.6510.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid using plain text passwords in Axis2 configuration files" id="PCIDSS32.6510.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="PCIDSS32.6510.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="PCIDSS32.653.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="PCIDSS32.653.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using insecure algorithms for cryptography" id="PCIDSS32.653.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Use hash functions with a salt" id="PCIDSS32.653.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid storing sensitive data in plaintext in a cookie" id="PCIDSS32.653.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="PCIDSS32.653.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="PCIDSS32.653.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="PCIDSS32.653.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using cryptographic keys which are too short" id="PCIDSS32.653.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Password information should not be included in properties file in plaintext" id="PCIDSS32.653.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using custom MessageDigest implementations" id="PCIDSS32.653.ACMD" origId="SECURITY.WSC.ACMD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Do not log confidential or sensitive information" id="PCIDSS32.654.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Avoid using hard-coded cryptographic keys" id="PCIDSS32.654.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="MessageDigest objects must process the data with the 'update' method" id="PCIDSS32.654.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Initialize KeyGenerator instances" id="PCIDSS32.654.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Use the SSL-enabled version of classes when possible" id="PCIDSS32.654.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="PCIDSS32.654.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="PCIDSS32.655.ARCF" origId="PB.CUB.ARCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="PCIDSS32.655.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Prevent exposure of sensitive data" id="PCIDSS32.655.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Consistently check the returned value of non-void methods" id="PCIDSS32.655.CHECKRET" origId="BD.PB.CHECKRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="PCIDSS32.655.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="PCIDSS32.655.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="PCIDSS32.655.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Check the return value of methods which read or skip input" id="PCIDSS32.655.CRRV" origId="PB.LOGIC.CRRV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Always specify error pages in web.xml" id="PCIDSS32.655.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="PCIDSS32.655" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="PCIDSS32.655.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Catch all exceptions which may be thrown within Servlet methods" id="PCIDSS32.655.CETS" origId="SERVLET.CETS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.657" desc="Canonicalize data before validation" id="PCIDSS32.657.CDBV" origId="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.657" desc="Protect against HTTP response splitting" id="PCIDSS32.657.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.657" desc="Protect against XSS vulnerabilities" id="PCIDSS32.657.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Avoid using &quot;SELECT *&quot; in SQL queries" id="PCIDSS32.658.AUSS" origId="SECURITY.IBA.AUSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Keep all authentication methods centralized to enforce consistency" id="PCIDSS32.658.CAM" origId="SECURITY.WSC.CAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="PCIDSS32.658.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Avoid EJB 3 methods without security annotations" id="PCIDSS32.658.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Ensure that an appropriate security manager is set" id="PCIDSS32.658.SSM" origId="SECURITY.WSC.SSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Protect against File names injection" id="PCIDSS32.658.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="PCIDSS32.658.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="PCIDSS32.658.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="PCIDSS32.658.LCA" origId="SECURITY.UEC.LCA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="PCIDSS32.658.SRCD" origId="SECURITY.UEC.SRCD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Ensure sufficient protection against multiple failed authentication attempts" id="PCIDSS32.658.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.659" desc="Encapsulate arguments of dangerous methods with a validation method" id="PCIDSS32.659.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.659" desc="Validate all dangerous data" id="PCIDSS32.659.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not use the non-portable 'System.getenv()' method" id="PORT.ENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PORT" desc="Avoid calling 'Thread.setPriority()'" id="PORT.CTSP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not hard code an absolute pathname when calling a constructor from the 'File' class" id="PORT.DNHCP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not use &quot;Runtime.exec()&quot;" id="PORT.EXEC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not hard-code IP addresses and port numbers" id="PORT.HCNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not hard code '\n' or '\r' as a line separator" id="PORT.LNSP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not use user-defined &quot;native&quot; methods" id="PORT.NATV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not use &quot;java.awt.peer.*&quot; interfaces directly" id="PORT.PEER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Use &quot;File.pathSeparator&quot; or &quot;File.pathSeparatorChar&quot; instead of the corresponding literals" id="PORT.PSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid duplicated property names" id="PROPS.DUPN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid empty property names" id="PROPS.EMN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid hard-coded line separators in property values" id="PROPS.HCLS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misusing arguments in property values" id="PROPS.IARG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid incomplete property entries" id="PROPS.ICK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid unmatched property entries in resources with different locales" id="PROPS.MENTRY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Password information should not be included in properties file in plaintext" id="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid adding extra white spaces to the end of property values" id="PROPS.BSPV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid duplicated property values" id="PROPS.DUPV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid empty property values" id="PROPS.EMV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Always use the '=' operator" id="PROPS.EQOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Follow the limit for number of property entries" id="PROPS.FM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misusing the line continuation character '\'" id="PROPS.IVCC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid splitting property names into multiple lines" id="PROPS.MLN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Use a naming convention for property names" id="PROPS.NAME" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misspelling words in comments and property values" id="PROPS.SPELL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Ensure that property entries are localized correctly" id="PROPS.TENTRY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Do not set custom security managers outside of the 'main' method" id="SECURITY.BV.DSSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Do not access or set System properties" id="SECURITY.BV.SYSP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Do not access the class loader in a web component" id="SECURITY.BV.ACL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Use &quot;read-only&quot; AccessMode for Castor queries" id="SECURITY.BV.CQRO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Ensure all sensitive method invocations are logged" id="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Do not call 'Socket.setSocketImplFactory()' or 'URL.setURLStreamHandlerFactory()' in a web component" id="SECURITY.BV.NSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Wrap &quot;privileged&quot; method invocations in &quot;final&quot; methods" id="SECURITY.BV.PCFM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Wrap &quot;privileged&quot; method invocations in &quot;private&quot; methods" id="SECURITY.BV.PCPM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="SECURITY.BV.PDLC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Inspect usage of 'Date', 'Time' objects and 'System.currentTimeMillis()' method invocations" id="SECURITY.BV.ADT" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Inspect usage of 'getName()' from 'java.lang.Class' object" id="SECURITY.BV.AUG" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.DRC" desc="Do not use threads in web components" id="SECURITY.DRC.THR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not use AWT classes in Web components" id="SECURITY.EAB.AWT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not compare Class objects by name" id="SECURITY.EAB.CMP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not stop the JVM in a web component" id="SECURITY.EAB.JVM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not pass byte arrays to ObjectOutputStream in the 'writeObject()' method" id="SECURITY.EAB.CBA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Enforce returning a defensive copy in 'clone()' methods" id="SECURITY.EAB.CPCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not pass user-given mutable objects directly to certain types" id="SECURITY.EAB.MPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not declare &quot;static&quot; fields in web components" id="SECURITY.EAB.SF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not change the input streams of 'java.lang.System' in a web component" id="SECURITY.EAB.SIS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not store user-given mutable objects directly into variables" id="SECURITY.EAB.SMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Inspect 'static' fields which may have intended to be declared 'static final'" id="SECURITY.EAB.SPFF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Avoid calling specified methods from web components and EJBs" id="SECURITY.EAB.ACWC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Limit the number of &quot;AccessController.doPrivileged&quot; calls per class" id="SECURITY.EAB.LDP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="SECURITY.EAB.PCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes" id="SECURITY.EAB.OROM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Do not log confidential or sensitive information" id="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Avoid storing sensitive data in plaintext in a cookie" id="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="SECURITY.ESD.SIF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Do not interrogate or modify security policy information in a web component" id="SECURITY.ESD.SPI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Declare &quot;transient&quot; fields &quot;private&quot;" id="SECURITY.ESD.TFP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Avoid &quot;transient&quot; fields in serialPersistentFields array" id="SECURITY.ESD.TSPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Clear sensitive data after use" id="SECURITY.ESD.CSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Avoid methods that might expose internal representations by returning arrays or other mutable fields" id="SECURITY.ESD.RA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Store sensitive data in mutable objects" id="SECURITY.ESD.SDM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="SECURITY.ESD" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Do not expose data with a 'FileNotFound' exception" id="SECURITY.ESD.SNFD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Avoid writing to Consoles" id="SECURITY.ESD.ACW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'" id="SECURITY.IBA.AEAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Avoid using &quot;SELECT *&quot; in SQL queries" id="SECURITY.IBA.AUSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Canonicalize data before validation" id="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Always call 'super.validate()' from validation methods in 'ActionForm' classes" id="SECURITY.IBA.CSVFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Ensure proper session expiration" id="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Avoid XPath injection when evaluating XPath queries" id="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Avoid parsing untrusted data with XMLDecoder" id="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Disable XML external entity injection" id="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Encapsulate constructor arguments with a validation function" id="SECURITY.IBA.EDPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Disable LDAP deserialization" id="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Encapsulate all redirect and forward URLs with a validation function" id="SECURITY.IBA.VRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Avoid temporary files" id="SECURITY.IBA.ATF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Use wrapper methods to secure native methods" id="SECURITY.IBA.NATIW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="SECURITY.UEC.WELC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="SECURITY.UEC.ADS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="SECURITY.UEC.AELQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="SECURITY.UEC.DSL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="SECURITY.UEC.EDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="SECURITY.UEC.ISOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="SECURITY.UEC.LCA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="SECURITY.UEC.RAJ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="SECURITY.UEC.SDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Always specify error pages in web.xml" id="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure Session-ID Length is sufficient" id="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid using the SOAP Monitor module" id="SECURITY.UEC.SMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="SECURITY.UEC.SRCD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="SECURITY.UEC.TDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="SECURITY.UEC.UDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid using plain text passwords in Axis2 configuration files" id="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="SECURITY.UEC.WSS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="SECURITY.UEC.REST" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.UEHL" desc="Avoid untrusted input when logging messages with Seam Logging API" id="SECURITY.UEHL.DCEMSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.UEHL" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid hard-coding the arguments to certain methods" id="SECURITY.WSC.AHCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Process XML and HTML with a library instead of raw text" id="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Keep all access control methods centralized to enforce consistency" id="SECURITY.WSC.CACM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Keep all authentication methods centralized to enforce consistency" id="SECURITY.WSC.CAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Always clone array parameters which are stored to fields" id="SECURITY.WSC.CAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using the DriverManagerDataSource class in production code" id="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid DNS lookups for decision making" id="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid debug information from Spring Security framework to logs" id="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure that Secure Processing is used" id="SECURITY.WSC.FXMLP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using hard-coded cryptographic keys" id="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using insecure algorithms for cryptography" id="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="MessageDigest objects must process the data with the 'update' method" id="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use hash functions with a salt" id="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Call authentication methods to enforce consistency" id="SECURITY.WSC.PAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Call access control methods to enforce consistency" id="SECURITY.WSC.PACC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Always specify absolute paths to execute commands" id="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Enforce 'SecurityManager' checks before setting or getting fields" id="SECURITY.WSC.SCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Enforce 'SecurityManager' checks in methods of 'Cloneable' classes" id="SECURITY.WSC.SCLONE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Enforce 'SecurityManager' checks in methods of 'Serializable' classes" id="SECURITY.WSC.SCSER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure 'SecurityManager' check in constructor of &quot;public&quot; non-&quot;final&quot; sensitive type" id="SECURITY.WSC.SCSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Initialize KeyGenerator instances" id="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure that an appropriate security manager is set" id="SECURITY.WSC.SSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not call 'System.setProperty()' in a web component" id="SECURITY.WSC.SSP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Always verify JarFile signatures" id="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Inspect usage of scripting API" id="SECURITY.WSC.ZOIS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using cryptographic keys which are too short" id="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure arguments passed to certain methods come from predefined methods list" id="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Mark cookies as HttpOnly" id="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid 'main()' methods because they may allow unauthorized access to classes" id="SECURITY.WSC.UMAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Properly validate server identity" id="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using anonymous &quot;privileged&quot; classes when invoking &quot;AccessController.doPrivileged()&quot;" id="SECURITY.WSC.ACDP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid constructors and overriding methods which are more accessible than those of their super classes" id="SECURITY.WSC.AMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Inspect usage of standard API calls that bypass security" id="SECURITY.WSC.APIBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Prevent the scripting API from executing untrusted code" id="SECURITY.WSC.ASAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="2;" authUrg="0;" cat="SECURITY.WSC" desc="Do not use inner classes" id="SECURITY.WSC.AUIC" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="SECURITY.WSC.BP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Prevent external processes from blocking on output or error streams" id="SECURITY.WSC.BUSSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Only call &quot;final&quot; methods from specified code blocks in non-&quot;final&quot; classes" id="SECURITY.WSC.CFM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Only &quot;clone()&quot; instances of &quot;final&quot; classes" id="SECURITY.WSC.CIFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not define custom class loaders" id="SECURITY.WSC.CL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not pass mutable objects to 'ObjectOutputStream' in the 'writeObject()' method" id="SECURITY.WSC.CMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not define custom SecurityManager's" id="SECURITY.WSC.DCSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Make all member classes &quot;private&quot;" id="SECURITY.WSC.INNER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="SECURITY.WSC.PAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Declare subclasses of 'Permission' and 'BasicPermission' &quot;final&quot;" id="SECURITY.WSC.PBPSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package" id="SECURITY.WSC.PPKG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="SECURITY.WSC.PRMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not declare fields as &quot;public&quot; &quot;static&quot; &quot;final&quot; 'Collection' or 'Map' objects" id="SECURITY.WSC.PSFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="8;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" id="SECURITY.WSC.SL" sev="3" total="8"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure 'SecurityManager' checks before 'Socket' transfers or retrievals" id="SECURITY.WSC.SMSTR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not use sockets in web components" id="SECURITY.WSC.SS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use library methods for string replacements of special characters in HTML and XML" id="SECURITY.WSC.STREP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use the SSL-enabled version of classes when possible" id="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use wrapper methods instead of calling dangerous or problematic methods directly (custom rule)" id="SECURITY.WSC.UWM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using custom MessageDigest implementations" id="SECURITY.WSC.ACMD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not override any 'ClassLoader' method except 'findClass()'" id="SECURITY.WSC.CLO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Make your 'clone()' method &quot;final&quot; for security" id="SECURITY.WSC.CLONE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;" authUrg="0;" cat="SECURITY.WSC" desc="Make immutable classes final" id="SECURITY.WSC.FIMU" sev="4" total="10"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="SECURITY.WSC" desc="Defend against partially initialized instances of non-final classes" id="SECURITY.WSC.INIVF" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Restrict cross-origin resource sharing to secure origins" id="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Validate shortcut target paths before use" id="SECURITY.WSC.LNK" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Inspect instantiations of 'ClassLoader' objects" id="SECURITY.WSC.CLI" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="7;" authUrg="0;" cat="SECURITY.WSC" desc="Make your classes nondeserializeable" id="SECURITY.WSC.DSER" sev="5" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="SECURITY.WSC.FOLLOW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid setting the write or execute file permissions to unintended users" id="SECURITY.WSC.IDP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;" authUrg="2;" cat="SECURITY.WSC" desc="Make your classes noncloneable" id="SECURITY.WSC.MCNC" sev="5" total="10"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure sufficient protection against multiple failed authentication attempts" id="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Inspect 'Random' objects or 'Math.random()' methods that could indicate areas where malicious code has been placed" id="SECURITY.WSC.RDM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;" authUrg="1;" cat="SECURITY.WSC" desc="Make your classes nonserializeable" id="SECURITY.WSC.SER" sev="5" total="10"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid classes that implement 'Externalizable' but do not define a no-argument constructor" id="SERIAL.ENNAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure the return type of 'readResolve()' and 'writeReplace()' methods are 'java.lang.Object'" id="SERIAL.MRWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure outer class is serializable if its inner class is serializable" id="SERIAL.OC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure that the 'readObject()' and 'writeObject()' methods have the correct signature" id="SERIAL.ROWO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid serializable classes that extend a superclass without a zero-argument constructor" id="SERIAL.SNNAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Do not store non-serializable objects as HttpSession attributes" id="SERIAL.SNSO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure Serializable classes are correct" id="SERIAL.NSFSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Declare 'serialPersistentFields' &quot;private static final&quot;" id="SERIAL.SPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="SERIAL.DUID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Implement Externalizable instead of Serializable" id="SERIAL.EZEE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid declaring &quot;transient&quot; fields in non-serializable classes" id="SERIAL.FT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid re-initializing fields in the 'readExternal()' method of 'Externalizable' classes" id="SERIAL.IRX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="SERIAL.RRSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="SERIAL.RWAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="SERIAL.SCBNP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Do not declare SerialVersionUID in classes that do not implement Serializable" id="SERIAL.SRLZ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="SERIAL.SROS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Validate objects before deserialization" id="SERIAL.VOBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not define instance fields in Servlet classes" id="SERVLET.IF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Declare a &quot;public&quot; constructor that takes no parameters" id="SERVLET.MDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Avoid multiple '&lt;servlet>' elements with the same '&lt;servlet-name>' in a  'web.xml' file" id="SERVLET.DSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not use static variables in servlets without synchronization" id="SERVLET.NSSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Ensure that all servlets have a corresponding mapping in 'web.xml' files" id="SERVLET.SCM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Ensure that all '&lt;servlet>' elements contain a single non-empty '&lt;servlet-name>' element in 'web.xml' files" id="SERVLET.SSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Minimize synchronization in Servlets" id="SERVLET.SYN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Use a Context Object to manage HTTP request parameters" id="SERVLET.UCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not use JDBC code in Servlet classes" id="SERVLET.AJDBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not use 'java.beans.Beans.instantiate()'" id="SERVLET.BINS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Avoid using collections without size limit in servlets" id="SERVLET.LML" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Follow a limit for the number of mappings for each servlet in a 'web.xml' file" id="SERVLET.NMS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Specify an appropriate schema or DTD file for 'web.xml' files" id="SERVLET.SDTD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Minimize usage of System.out and System.err in Servlets" id="SERVLET.SOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not use 'SingleThreadModel' in Servlet classes" id="SERVLET.STM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Catch all exceptions which may be thrown within Servlet methods" id="SERVLET.CETS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not create static variables in a servlet" id="SERVLET.NSIS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SPRING" desc="Follow configuration class conventions" id="SPRING.ATCFG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SPRING" desc="Do not disable CSRF protection" id="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Do not disable CSRF protection" id="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SPRING" desc="Ensure that methods annotated with @RequestMapping specify the HTTP request method they call" id="SPRING.REQMAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Avoid constructor injection" id="SPRING.ACARG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Use ''description'' tag in configuration file headers" id="SPRING.DESC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Avoid using ''name'' and ''id'' simultaneously" id="SPRING.IDNAME" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Avoid using relative ''../'' path reference to parent files" id="SPRING.IMPORTSRES" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SPRING" desc="Avoid using native JDBC" id="SPRING.JDBCTEMPLATE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Use ''local'' property attribute in local scope" id="SPRING.LOCAL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Follow convention for bean properties" id="SPRING.PROPLIMIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Use naming conventions for spring beans" id="SPRING.SPRNAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Use ids as bean identifiers" id="SPRING.USEID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Prefer ''type'' over ''index'' for constructor argument matching" id="SPRING.PREFTYPE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid accessing a database from Action Classes" id="STRUTS.ACDA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify an @input attribute if '&lt;action>' element has validation in 'struts-config.xml' files" id="STRUTS.AIV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a '&lt;form-bean>' for each named '&lt;action>' element in 'struts-config.xml' files" id="STRUTS.AMFB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid duplicated forms in the 'validation.xml'" id="STRUTS.DFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a non-empty name and path for each '&lt;forward>' element in 'struts-config.xml' files" id="STRUTS.FWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Do not declare instance variables in Struts Action classes" id="STRUTS.INST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a name and type for each form bean in 'struts-config.xml' files" id="STRUTS.NTFB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure Plugins are added in the 'struts-config.xml'" id="STRUTS.PLUGIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a valid 'type' attribute for each '&lt;form-property>' element in 'struts-config.xml' files" id="STRUTS.TAFP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid defining multiple form beans with the same name in 'struts-config.xml' files" id="STRUTS.MFBSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure that the @path attribute of '&lt;action>' and '&lt;forward>' elements begins with '/' in 'struts-config.xml' files" id="STRUTS.PFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure that the 'scope' attribute is set to either &quot;request&quot; or &quot;session&quot; for actions and exceptions in 'struts-config.xml' files" id="STRUTS.RSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid accessing a JSP page from Action Classes" id="STRUTS.ACJC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid @prefix, @suffix, and @attribute for unnamed '&lt;action>' elements in 'struts-config.xml'" id="STRUTS.APSN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid using relative paths for attributes in 'struts-config.xml' files" id="STRUTS.ARP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure validators are enabled in the 'struts-config.xml'" id="STRUTS.EV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Provide an appropriate getter and setter method for each field in a form bean" id="STRUTS.FIELDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid calling methods of Action Classes" id="STRUTS.IACM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid public methods in Action Classes" id="STRUTS.PMAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a non-empty path and type for each '&lt;exception>' element in 'struts-config.xml' files" id="STRUTS.PTE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Use a Struts DTD for validation in 'struts-config.xml' files" id="STRUTS.SCDTD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Enable the Struts Validator plug-in in all 'struts-config.xml' files" id="STRUTS.VPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid local and global forwards with the same name in 'struts-config.xml' files" id="STRUTS.DLGF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Include only getter and setter methods in form beans" id="STRUTS.FORM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a valid 'maxlength' value for each form field in Struts validation files" id="STRUTS.MLFF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS.STRUTS2" desc="Avoid duplicated field validators" id="STRUTS.STRUTS2.S2DAFV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS.STRUTS2" desc="Avoid duplicated validators" id="STRUTS.STRUTS2.S2DV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS.STRUTS2" desc="Avoid duplicated validation files" id="STRUTS.STRUTS2.S2DVF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS.STRUTS2" desc="Ensure each validation file has a corresponding Action" id="STRUTS.STRUTS2.S2NA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not cause deadlocks by calling a &quot;synchronized&quot; method from a &quot;synchronized&quot; method" id="TRS.CSFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'" id="TRS.IRUN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Release Locks in a &quot;finally&quot; block" id="TRS.RLF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on constant Strings" id="TRS.SCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Manually synchronize on 'synchronized' collections when iterating over them" id="TRS.SSCI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Call 'wait()' and 'await()' only inside a loop that tests the liveness condition" id="TRS.UWIL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use variables of the unsafe type 'java.lang.ThreadGroup'" id="TRS.AUTG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call the &quot;start&quot; method of threads from inside a constructor" id="TRS.CSTART" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="TRS.DCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="TRS" desc="Do not catch 'IllegalMonitorStateException' since this exception likely indicates a design flaw" id="TRS.IMSE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Ensure that nested locks are ordered correctly" id="TRS.LORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not mix &quot;static&quot; and non-&quot;static&quot; &quot;synchronized&quot; methods" id="TRS.SNSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on &quot;public&quot; fields since doing so may cause deadlocks" id="TRS.SOPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'" id="TRS.THRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks" id="TRS.TSHL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use 'notify()'; use 'notifyAll()' instead so that all waiting threads will be notified" id="TRS.ANF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid accidental use of &quot;Thread.interrupted()&quot;" id="TRS.ATI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use 'Thread.yield()' because it may behave differently under different Virtual Machines" id="TRS.AUTY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid invoking methods using &quot;static&quot; 'Calendar', 'DateFormat', or 'SimpleDateFormat'" id="TRS.CDF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use ConcurrentLinkedQueue instead of Vector and synchronizedList when possible" id="TRS.CLQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid compound synchronized collection accesses which violate atomicity" id="TRS.CMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not let &quot;this&quot; reference escape during construction" id="TRS.CTRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use DiscardOldestPolicy with PriorityBlockingQueue" id="TRS.DOPQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Inspect accesses to &quot;static&quot; fields which may require synchronization" id="TRS.IASF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Make lazy initializations thread-safe" id="TRS.ILI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Implement Runnable instead of extending Thread" id="TRS.IRET" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Give subclasses of Thread a 'run()' method so they can run as separate threads" id="TRS.MRUN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Ensure threads are named" id="TRS.NAME" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Ensure 'wait()', 'notify()' and 'notifyAll()' are invoked on an object that is clearly synchronized in its enclosing mod scope" id="TRS.NSYN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid overriding synchronized methods with non-synchronized methods" id="TRS.OSNS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on the class object returned by the 'getClass' method" id="TRS.SGC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not perform synchronization using the &quot;synchronized&quot; keyword on implementations of &quot;java.util.concurrent.locks.Lock&quot;" id="TRS.SOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on non-final fields since doing so makes it difficult to guarantee mutual exclusion" id="TRS.SOUF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Synchronize access to &quot;static&quot; SimpleDataFormats" id="TRS.SSDF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Make the get method for a field synchronized if the set method is synchronized" id="TRS.SSUG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not perform synchronization nor call semaphore methods on an Object's 'this' reference" id="TRS.STR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid unsynchronized accesses of &quot;Collections.synchronized&quot; wrapped Collections" id="TRS.UACS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use unsynchronized Collections/Maps only when safe" id="TRS.UCM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use the same locking object to access variables" id="TRS.USL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not start a thread without specifying a 'run()' method" id="TRS.UT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use 'wait()' and 'notifyAll()' instead of polling loops" id="TRS.UWNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use the correct method calls on &quot;java.util.concurrent.locks.Condition&quot; objects" id="TRS.WOC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not make the &quot;writeObject()&quot; method synchronized if no other method is synchronized" id="TRS.WOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use Atomic variables when always accessed in synchronized manner" id="TRS.AIL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not catch InterruptedException except in classes extending Thread" id="TRS.CIET" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use &quot;getState&quot; except for debugging purposes" id="TRS.GSD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call the 'start()' method directly on Thread class instances" id="TRS.ISTART" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Access related Atomic variables in a synchronized block" id="TRS.MRAV" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on a collection view if the backing collection is accessible" id="TRS.SOBC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use ConcurrentHashMap instead of Hashtable and &quot;synchronizedMap&quot; wrapped HashMap when possible" id="TRS.CHM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use &quot;synchronized&quot; blocks instead of making the whole method declaration &quot;synchronized&quot;" id="TRS.NSM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use synchronization on methods that implement 'Runnable.run()'" id="TRS.RUN" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused &quot;import&quot; statements" id="UC.UIMPORT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary modifiers in an &quot;interface&quot;" id="UC.AAI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Remove commented out Java code" id="UC.ACC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Ensure that classes do not explicitly extend 'java.lang.Object'" id="UC.AEEO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid empty static and non-static initializers" id="UC.AESTAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Do not override &quot;abstract&quot; methods of a parent class with &quot;abstract&quot; methods" id="UC.AMAMI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused labels" id="UC.AUL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid collection objects that are never read" id="UC.AURCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="UC" desc="Avoid local variables that are never read" id="UC.AURV" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary &quot;boolean&quot; comparisons" id="UC.BCMP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid duplicate code in 'if' branches" id="UC.DIEB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Do not explicitly &quot;import&quot; the java.lang.* &quot;package&quot;" id="UC.DIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid empty &quot;finalize()&quot; methods" id="UC.EF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid redundant 'finalize()' methods which only call the superclass' 'finalize()' method" id="UC.FCSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid redundant &quot;final&quot; keywords in method declarations in &quot;final&quot; classes" id="UC.FMFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused &quot;private&quot; fields" id="UC.PF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused &quot;private&quot; methods" id="UC.PM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid redundant 'static' keywords in enum type declarations" id="UC.RSKE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid empty &quot;synchronized&quot; statements" id="UC.SNE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Use a caught exception in the &quot;catch&quot; block" id="UC.UCATCH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary 'if' statements" id="UC.UCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary &quot;else&quot; statements" id="UC.UES" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused parameters" id="UC.UP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused &quot;private&quot; classes or interfaces" id="UC.UPC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary &quot;return&quot; statement at the end of &quot;void&quot; methods" id="UC.VR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid redundant throw clauses" id="UC.ARTD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Do not import classes from the package that contains the current class" id="UC.PIMPORT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid methods that only call the overridden implementation (superclass implementation)" id="UC.SO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="XML" desc="Ensure that classes have a &quot;public&quot; constructor with zero arguments" id="XML.IVCC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="XML" desc="Ensure that XML files are well-formatted" id="XML.WF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="XML" desc="Avoid debug levels which are too high in Tomcat's 'server.xml'" id="XML.DLTH" sev="3" total="0"/>
         </RulesList>
         <SeverityList>
            <Severity authTot="3;" authUrg="0;" id="1" total="3"/>
            <Severity authTot="42;" authUrg="7;" id="2" total="42"/>
            <Severity authTot="267;" authUrg="30;" id="3" total="267"/>
            <Severity authTot="64;" authUrg="7;" id="4" total="64"/>
            <Severity authTot="53;" authUrg="6;" id="5" total="53"/>
         </SeverityList>
      </Rules>
      
  <Supps/>

      
  <StdViols>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="1" sev="3" auth="user" locRef="1" rule="APSC_DV.003215.MCH" lnHash="-640264574" pkg="" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="-640264574" unbViolId="628eec1c-10cc-3839-89d2-1e3c0f0f27a3" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c3f56a24-e642-38db-8da8-c204442db29f" locEndPos="44" locType="sr" hash="1741334343" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="1" sev="2" auth="user" locRef="1" rule="FORMAT.MCH" lnHash="-640264574" pkg="" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="-640264574" unbViolId="d1a9fed7-42f7-3db1-98c0-2a1917fdaedf" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="968e3a31-57cc-38ed-bac0-26b87345aa10" locEndPos="44" locType="sr" hash="1741334343" locEndLn="1" goals="0,"/>
    <StdViol msg="Compilation unit should be placed inside a non-default package" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="1" sev="3" auth="user" locRef="1" rule="CODSTA.ORG.UNDPN" lnHash="-640264574" pkg="" rule.header="Ensure all types have a non default package name" tool="jtest" lineHash="-640264574" unbViolId="1f23b551-2cb6-354b-a763-c9b3864138ff" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="a617f8cd-3413-3dad-b0b6-c77f61ea95a1" locEndPos="0" locType="sr" hash="1741334343" locEndLn="1" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="3" auth="user" locRef="1" rule="FORMAT.BLCD" lnHash="707665141" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="707665141" unbViolId="cc4b1f50-7b1e-3afa-9f82-2472a2410179" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cb2f99ad-f6e8-3c95-8631-6aa5db3984f7" locEndPos="2" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="3" auth="user" locRef="1" rule="APSC_DV.003215.BLCD" lnHash="707665141" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="707665141" unbViolId="f769fd16-b605-3833-b7ea-ca271fadd88b" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3f22d624-2a1b-314b-80c6-f92de3fa644a" locEndPos="2" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user" locRef="1" rule="SECURITY.WSC.MCNC" lnHash="707665141" pkg="" rule.header="Make your classes noncloneable" tool="jtest" lineHash="707665141" unbViolId="c56886c9-6740-32fd-a959-9022b27ab679" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="114a1bb4-621f-3760-be16-9df02962b705" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="2" auth="user" locRef="1" rule="CERT.OBJ07.MCNC" lnHash="707665141" pkg="" rule.header="Make your classes noncloneable" tool="jtest" lineHash="707665141" unbViolId="22412992-78a5-3782-b4c6-888b9305e3b0" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="25358972-6a01-37e5-be21-936a517fdabd" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Calculator'" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="3" auth="user" locRef="1" rule="JAVADOC.PJDC" lnHash="707665141" pkg="" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="707665141" unbViolId="0d7e299a-39dd-3433-8918-49c3003fe9c3" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="224b4b50-da56-313d-a7d0-590b82110115" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: Calculator" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="4" auth="user" locRef="1" rule="GLOBAL.UPPC" lnHash="707665141" pkg="" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="707665141" unbViolId="abb19e1a-5bfe-3142-9435-fb9ebfbad847" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9578ff9e-888c-3a35-be5f-98b7356cbd35" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="4" auth="user" locRef="1" rule="SECURITY.WSC.FIMU" lnHash="707665141" pkg="" rule.header="Make immutable classes final" tool="jtest" lineHash="707665141" unbViolId="8fe341fb-36a7-341f-9210-9612c9b66435" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1f33d49f-bfbf-33b8-8923-dfd0d5c3a624" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user" locRef="1" rule="SECURITY.WSC.SER" lnHash="707665141" pkg="" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="707665141" unbViolId="d6f9ee91-6a87-3d73-9334-0c3656f0ebbb" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb01f365-04a8-3887-a05e-b7518c5e36c7" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user" locRef="1" rule="CWE.499.SER" lnHash="707665141" pkg="" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="707665141" unbViolId="0661d235-bc12-3274-b507-23ce9d7b9b90" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="60a72a91-2671-32ab-a00a-8a5fc81c3c64" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: Calculator" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user" locRef="1" rule="CODSTA.POD.DCTOR" lnHash="707665141" pkg="" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="707665141" unbViolId="0d799803-fae5-3455-8ba0-ebb294ad1ba8" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="c559ab7b-6530-3f98-a314-5e788beba8de" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="3" auth="user" locRef="1" rule="METRICS.PJDC" lnHash="707665141" pkg="" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="707665141" unbViolId="113610ce-8ceb-3a7d-b11d-c8f72ca3e59f" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="9abdbe3f-504a-39dc-8950-54dd47038779" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user" locRef="1" rule="SECURITY.WSC.DSER" lnHash="707665141" pkg="" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="707665141" unbViolId="925b0824-4d4d-3446-b608-c19da028f380" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="c4380469-d76e-3180-9b52-832330a6deaa" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="interface type 'ICalculator' is used" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="3" sev="3" auth="user" locRef="1" rule="MOBILE.AUI" lnHash="707665141" pkg="" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="707665141" unbViolId="1854c448-366f-3cef-8bc6-92048979f7d2" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="510b7193-e06e-3f8d-b67b-79299b12bfc4" locEndPos="46" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="Constant value should be declared &quot;final&quot;: screen" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="5" sev="3" auth="user" locRef="1" rule="CODSTA.READ.FF" lnHash="-2008629378" pkg="" rule.header="Declare &quot;private&quot; constant fields &quot;final&quot;" tool="jtest" lineHash="-2008629378" unbViolId="d16c385f-337b-3bd5-9f37-c1a7ca00fab9" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="32285d36-def6-3999-b9fd-aadf362eb0f8" locEndPos="25" locType="sr" hash="1741334343" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing 'getScreen()' method for field 'screen'" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="5" sev="4" auth="user" locRef="1" rule="BEAN.NFM" lnHash="-2008629378" pkg="" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-2008629378" unbViolId="854126ec-d6d0-32dd-b4fe-9a6db4985196" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5d8e3990-5c4f-3c06-b477-79efda26d38d" locEndPos="25" locType="sr" hash="1741334343" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing 'setScreen()' method for field 'screen'" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="5" sev="4" auth="user" locRef="1" rule="BEAN.NFM" lnHash="-2008629378" pkg="" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-2008629378" unbViolId="ab00e4dd-486a-366a-8475-bb0364f85501" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b1dc6f8d-561d-35b1-959b-c1de4fe16698" locEndPos="25" locType="sr" hash="1741334343" locEndLn="5" goals="0,"/>
    <StdViol msg="The 'screen' field of the immutable class is not declared final" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="5" sev="4" auth="user" locRef="1" rule="SECURITY.WSC.FIMU" lnHash="-2008629378" pkg="" rule.header="Make immutable classes final" tool="jtest" lineHash="-2008629378" unbViolId="ef6dd75c-84f5-32ac-9793-ce399d5e910a" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d950c72d-1b99-3499-a054-9207b66f1c4b" locEndPos="25" locType="sr" hash="1741334343" locEndLn="5" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user" locRef="1" rule="FORMAT.U2BL" lnHash="1262617896" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1262617896" unbViolId="56252173-0e44-3525-889e-bf798ed27e92" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8d9bea92-8564-32ad-9ac1-78e313a31fb2" locEndPos="34" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user" locRef="1" rule="APSC_DV.003215.U2BL" lnHash="1262617896" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1262617896" unbViolId="97e38d3a-f107-304c-babb-1e6bbcae7537" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f5a1d9f3-a6e5-3f8d-a6b8-172c466a06fe" locEndPos="34" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user" locRef="1" rule="METRIC.CC" lnHash="1262617896" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="1262617896" unbViolId="ab41da0d-3aa8-35cc-9613-efd6aa63bf38" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="5039c023-4296-3698-883f-d86f255b585b" locType="sr" locEndPos="0" hash="1741334343" locEndLn="7" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'add()'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="2" auth="user" locRef="1" rule="JUNIT.TEST" lnHash="1262617896" pkg="" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="1262617896" unbViolId="68678c2e-c417-3f78-98cb-9b398f3caeaf" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6f3fbb35-c7e0-3e7d-8370-6fd00247b0b4" locEndPos="18" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'add()'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user" locRef="1" rule="JAVADOC.PJDM" lnHash="1262617896" pkg="" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="1262617896" unbViolId="6b25e298-9231-3112-9306-aee12557f065" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f32cfd4a-c3b9-3f50-af80-1bd28d9e0f39" locEndPos="18" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: add()" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user" locRef="1" rule="GLOBAL.UPPM" lnHash="1262617896" pkg="" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="1262617896" unbViolId="7f25ac30-32ae-38bf-ac82-b062eb53ff22" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c36e776f-5166-3275-934c-e76e1f4f2cc2" locEndPos="18" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Formal parameter 'a' is not declared as final" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user" locRef="1" rule="CODSTA.BP.FPF" lnHash="1262617896" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="1262617896" unbViolId="35ed5cd5-d968-30ab-b91e-3d90a2865b2d" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6a16101b-387d-3cf2-9b57-f252750fe48d" locEndPos="24" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="The length of the identifier &quot;a&quot; is less than the minimum length (2)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user" locRef="1" rule="NAMING.LLI" lnHash="1262617896" pkg="" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="1262617896" unbViolId="7ae7c083-4540-394a-b7bc-5c76582e9220" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="93f3b971-6491-3ff0-8d7d-df12def8eb62" locEndPos="24" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Variable 'a' does not end with 'int'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user" locRef="1" rule="NAMING.UHN" lnHash="1262617896" pkg="" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="1262617896" unbViolId="814c74f7-f478-331a-a655-296aed292c13" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="592e130e-567b-31a7-a8e1-d521fe65afd3" locEndPos="24" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Formal parameter 'b' is not declared as final" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user" locRef="1" rule="CODSTA.BP.FPF" lnHash="1262617896" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="1262617896" unbViolId="ced7bdf1-e3f4-38a3-86c6-4c29d02f6832" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="533bd97f-d787-36ee-9e97-408bb3996ed1" locEndPos="31" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="The length of the identifier &quot;b&quot; is less than the minimum length (2)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user" locRef="1" rule="NAMING.LLI" lnHash="1262617896" pkg="" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="1262617896" unbViolId="bcf6ee50-a427-34a7-8fc0-0f21efd6a3f1" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2e2740ce-392c-3dd6-b84a-b51fdf05a399" locEndPos="31" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Variable 'b' does not end with 'int'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user" locRef="1" rule="NAMING.UHN" lnHash="1262617896" pkg="" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="1262617896" unbViolId="91b171ac-b075-359b-83e4-91a4249d3010" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4ed2479d-8e5f-35e8-a8f3-a2b8e96ca3f0" locEndPos="31" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Local constant not declared &quot;final&quot;: result" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="7" sev="3" auth="user" locRef="1" rule="CODSTA.READ.FLV" lnHash="1928371266" pkg="" rule.header="Declare constant local variables &quot;final&quot;" tool="jtest" lineHash="1928371266" unbViolId="7d6d8cff-73c9-3cdb-bc11-7d2475153079" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e34487e9-a011-3bd0-b7b0-53c023881eb5" locEndPos="18" locType="sr" hash="1741334343" locEndLn="7" goals="0,"/>
    <StdViol msg="Variable 'result' does not end with 'int'" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="7" sev="4" auth="user" locRef="1" rule="NAMING.UHN" lnHash="1928371266" pkg="" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="1928371266" unbViolId="14e2cfd5-7edd-36b9-89f4-15f56eaf92b6" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8d1a6f78-ff47-3fd7-95c8-475b880dd892" locEndPos="18" locType="sr" hash="1741334343" locEndLn="7" goals="0,"/>
    <StdViol msg="The declaration of the local variable 'result' is not followed by a comment" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="7" sev="5" auth="user" locRef="1" rule="CODSTA.READ.CLV" lnHash="1928371266" pkg="" rule.header="Comment local variables" tool="jtest" lineHash="1928371266" unbViolId="c8eab40e-53e2-3e78-81ab-5c53ac89e1ab" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ef77cd33-9a7a-3fdd-ad43-702245c4eafc" locEndPos="18" locType="sr" hash="1741334343" locEndLn="7" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user" locRef="1" rule="FORMAT.BLCD" lnHash="-394619638" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-394619638" unbViolId="4202b65d-cd88-3fee-a04a-eaad2ef512db" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fc097999-3bda-30f4-9a8b-62b5b7b4c72c" locEndPos="6" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user" locRef="1" rule="APSC_DV.003215.BLCD" lnHash="-394619638" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-394619638" unbViolId="9fe91847-3936-3b20-b2aa-fe80c8cba652" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="99ce1ddf-cf7d-3025-868e-3e1110c2b771" locEndPos="6" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user" locRef="1" rule="SECURITY.WSC.MCNC" lnHash="-394619638" pkg="" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-394619638" unbViolId="d8d3601f-1794-3cc0-99c5-83854dc973bc" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b69ac1fa-71dc-34de-8590-f561877f9b6b" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="2" auth="user" locRef="1" rule="CERT.OBJ07.MCNC" lnHash="-394619638" pkg="" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-394619638" unbViolId="6ae64b37-b700-3653-9cd2-1a63e4486dc2" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ed90833e-6c51-3c3c-9ae3-791d3426ab87" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Elements in 'Calculator' not ordered appropriately, first violation: member class 'Screen' at line 12 should be placed before field 'screen' at line 5" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user" locRef="1" rule="CODSTA.ORG.FO" lnHash="-394619638" pkg="" rule.header="Order class elements appropriately" tool="jtest" lineHash="-394619638" unbViolId="276b655b-4e4d-38ef-89c8-488f0a8dfa06" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8a96fe2d-ecd2-3409-b358-ea4258246933" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Screen'" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user" locRef="1" rule="JAVADOC.PJDC" lnHash="-394619638" pkg="" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-394619638" unbViolId="ec6a2175-3075-3ae1-9c36-58fb5d1411d7" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ad05384d-7df7-3a33-8ad2-da1d286319d4" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Class 'Calculator.Screen' should be declared &quot;private&quot;" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="4" auth="user" locRef="1" rule="GLOBAL.DPPC" lnHash="-394619638" pkg="" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="-394619638" unbViolId="4e18398a-6ce1-31c7-853e-1bee62c9da82" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="88c400d2-2471-3a97-a24c-4a342d8a1cf7" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="4" auth="user" locRef="1" rule="SECURITY.WSC.FIMU" lnHash="-394619638" pkg="" rule.header="Make immutable classes final" tool="jtest" lineHash="-394619638" unbViolId="a8a03ac4-38ed-3391-9bc5-0c662434b6bf" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="675306bd-474a-36b3-81cc-de16f3bb8d4a" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user" locRef="1" rule="SECURITY.WSC.SER" lnHash="-394619638" pkg="" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-394619638" unbViolId="f5f7cdf2-673b-3b0d-9b36-6773bc6d3e06" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1d9ee34e-ed4b-3165-ab12-0e3516306e11" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user" locRef="1" rule="CWE.499.SER" lnHash="-394619638" pkg="" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-394619638" unbViolId="763e3fb6-0326-3066-82b6-e630dbec4020" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="747e92fe-b2e4-38ec-bda3-76a41b8a6997" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Class 'Calculator.Screen' should be declared &quot;final&quot;" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user" locRef="1" rule="GLOBAL.SPPC" lnHash="-394619638" pkg="" rule.header="Declare a &quot;public/protected&quot; &quot;class&quot; &quot;final&quot; if it is not subclassed" tool="jtest" lineHash="-394619638" unbViolId="c0cd11e9-a2be-3835-b0ca-6ebc25726e0b" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1c82d350-af3f-3a3c-b072-9101087d8e67" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user" locRef="1" rule="METRICS.PJDC" lnHash="-394619638" pkg="" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="-394619638" unbViolId="29647506-e745-37b1-9629-ef57e70ddb7d" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="1befe27e-9062-3178-848e-4100a6a623fb" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Inner class 'Screen' should be avoided" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user" locRef="1" rule="SECURITY.WSC.AUIC" lnHash="-394619638" pkg="" rule.header="Do not use inner classes" tool="jtest" lineHash="-394619638" unbViolId="70d207a7-8ced-357d-a816-a38afe255f2a" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="33001757-381b-34ec-8c06-e8bd33107b2e" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user" locRef="1" rule="SECURITY.WSC.DSER" lnHash="-394619638" pkg="" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-394619638" unbViolId="fd215bea-e59b-3f5f-8862-da9500193876" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="888206fc-682f-3765-a290-5fa9946a897f" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="13" sev="3" auth="user" locRef="1" rule="FORMAT.U2BL" lnHash="1173913624" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1173913624" unbViolId="34e27938-ba8f-356b-a65e-12f5ca3345bf" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6f3f08e7-6bd0-3179-a4bc-a5d509fcd691" locEndPos="38" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="13" sev="3" auth="user" locRef="1" rule="APSC_DV.003215.U2BL" lnHash="1173913624" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1173913624" unbViolId="7c8c7fa0-a803-3edc-b0e1-a5e7b9f80ab2" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="91d51c77-6ff2-3c3c-bc86-7cd8a76589d1" locEndPos="38" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <StdViol msg="Missing 'getBrightness()' method for field 'brightness'" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="13" sev="4" auth="user" locRef="1" rule="BEAN.NFM" lnHash="1173913624" pkg="" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="1173913624" unbViolId="ed1965bb-62f8-3c3f-b912-d39fbac65f5d" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="60dc7e36-3ae4-3695-837c-be5d34fd6ab7" locEndPos="37" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <StdViol msg="Missing 'setBrightness()' method for field 'brightness'" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="13" sev="4" auth="user" locRef="1" rule="BEAN.NFM" lnHash="1173913624" pkg="" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="1173913624" unbViolId="12eb66b5-5036-3003-a3bd-b93ee6d3a19b" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="19a3d509-5781-3244-8b56-28f6209c2b27" locEndPos="37" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <StdViol msg="The 'brightness' field of the immutable class is not declared final" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="13" sev="4" auth="user" locRef="1" rule="SECURITY.WSC.FIMU" lnHash="1173913624" pkg="" rule.header="Make immutable classes final" tool="jtest" lineHash="1173913624" unbViolId="e62fe8ed-7f40-3b47-9d37-f4428cd4dc47" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b1cb7608-f5e1-30ff-8db7-1a1b3f2ccfbd" locEndPos="37" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user" locRef="1" rule="METRIC.CC" lnHash="1528369737" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="1528369737" unbViolId="bcc1fd29-b834-3aa8-b274-ac3775ca26f8" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="93012dbe-d626-36b5-9cad-2babda411633" locType="sr" locEndPos="0" hash="1741334343" locEndLn="16" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'Screen()'" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="2" auth="user" locRef="1" rule="JUNIT.TEST" lnHash="1528369737" pkg="" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="1528369737" unbViolId="e8b5f6c3-7ce7-301d-a02c-a426a602e2b8" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7b0be753-edd0-3bce-8cdc-34c5ce511e3d" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="'public' constructor declared" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user" locRef="1" rule="CODSTA.BP.CMUTA" lnHash="1528369737" pkg="" rule.header="Avoid 'public' or 'protected' constructors for immutable classes" tool="jtest" lineHash="1528369737" unbViolId="0fa2f846-6613-30e8-8a07-52dfab2cd007" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5b8f0893-672c-3528-9063-4e86cffa4c4b" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'Screen()'" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user" locRef="1" rule="JAVADOC.PJDM" lnHash="1528369737" pkg="" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="1528369737" unbViolId="75297385-bd6d-3145-95b7-d1c7c307db01" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="96450a14-15bc-3947-8b82-904b22a0e720" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Constructor 'Screen()' should be declared &quot;private&quot;" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="4" auth="user" locRef="1" rule="GLOBAL.DPPM" lnHash="1528369737" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="1528369737" unbViolId="74c55eef-1881-3fc3-89c3-d71d2d84b9ac" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7e158107-3dbc-3ed8-a3fa-7aad447094aa" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Constructor 'Screen()' should be declared &quot;private&quot;" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="4" auth="user" locRef="1" rule="CWE.749.DPPM" lnHash="1528369737" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="1528369737" unbViolId="bcab087a-92aa-3b15-9746-c7d751eabb79" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c1c44d74-4eed-37ab-890b-78c0f87c719e" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Flag not present" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="4" auth="user" locRef="1" rule="SECURITY.WSC.INIVF" lnHash="1528369737" pkg="" rule.header="Defend against partially initialized instances of non-final classes" tool="jtest" lineHash="1528369737" unbViolId="c9f939aa-57ee-33d0-b891-ac8d77049e24" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4e7b2d13-1369-34bb-97ce-d953b79a97b8" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Formal parameter 'brightness' is not declared as final" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user" locRef="1" rule="CODSTA.BP.FPF" lnHash="1528369737" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="1528369737" unbViolId="b2038201-ce15-3276-952a-2492caf6a101" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9f2ca2a3-f698-3823-8e73-3b8fb1ec8aa6" locEndPos="43" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="The parameter 'brightness' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user" locRef="1" rule="OOP.HIF" lnHash="1528369737" pkg="" rule.header="Do not hide fields and local variables declared in enclosing scopes" tool="jtest" lineHash="1528369737" unbViolId="15ccd2f5-e618-3e9d-96a1-a6dc9a36d13c" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="60cae937-db48-3aae-8445-2c5bde2adaad" locEndPos="43" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Parameter 'brightness' has the same name as a field" ln="15" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user" locRef="1" rule="OOP.HMF" lnHash="1528369737" pkg="" rule.header="Do not give method local variables and parameters the same name as class fields" tool="jtest" lineHash="1528369737" unbViolId="14c320eb-180d-36f8-af92-b83dfc677d57" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="74fc59cf-42d6-39e8-ab9e-cbc4e432b0b3" locEndPos="43" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="19" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="19" sev="3" auth="user" locRef="1" rule="METRIC.CC" lnHash="-1397540739" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-1397540739" unbViolId="93ae00a2-4ad8-327e-82eb-f936c87b16ba" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="f5bfb66e-7071-34ca-ae67-6037be81c183" locType="sr" locEndPos="0" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'showResult()'" ln="19" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="19" sev="2" auth="user" locRef="1" rule="JUNIT.TEST" lnHash="-1397540739" pkg="" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-1397540739" unbViolId="7b666180-e8f1-32f1-8166-cb667f504985" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="58682760-c701-35dd-85ad-09118cbc9151" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'showResult()'" ln="19" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="19" sev="3" auth="user" locRef="1" rule="JAVADOC.PJDM" lnHash="-1397540739" pkg="" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1397540739" unbViolId="88106283-a1e1-392e-b72e-5a0f44b8090f" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4ce6ce6c-d7f0-3e80-ba09-e71435289fc6" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Method 'showResult()' should be declared &quot;private&quot;" ln="19" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="19" sev="4" auth="user" locRef="1" rule="GLOBAL.DPPM" lnHash="-1397540739" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="-1397540739" unbViolId="6eeeedb7-9be6-3fab-9f5d-4f9f54248773" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b8cd2038-0437-3f95-9398-ffccf54b9d92" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Method 'showResult()' should be declared &quot;private&quot;" ln="19" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="19" sev="4" auth="user" locRef="1" rule="CWE.749.DPPM" lnHash="-1397540739" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="-1397540739" unbViolId="2bb3bbe2-d26f-36d0-9dc1-6efd0b14aaa0" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dd141fb9-d69a-3855-afce-88c9e74c63e8" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Method 'showResult()' should be declared &quot;final&quot;" ln="19" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="19" sev="5" auth="user" locRef="1" rule="GLOBAL.SPPM" lnHash="-1397540739" pkg="" rule.header="Declare a &quot;public/protected&quot; method &quot;final&quot; if it is not overridden" tool="jtest" lineHash="-1397540739" unbViolId="97d43ce5-7938-3c28-9b6f-6849bb35b640" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="16082e28-267c-3f9e-896c-6329036d3b98" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Formal parameter 'result' is not declared as final" ln="19" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="19" sev="3" auth="user" locRef="1" rule="CODSTA.BP.FPF" lnHash="-1397540739" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-1397540739" unbViolId="c875252d-9e6f-38d3-8655-7d5058d565d0" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3fb8f850-4bab-3e1e-8db5-3ea620ce9bb3" locEndPos="41" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Variable 'result' does not end with 'int'" ln="19" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="19" sev="4" auth="user" locRef="1" rule="NAMING.UHN" lnHash="-1397540739" pkg="" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-1397540739" unbViolId="b26a75f4-7450-3a76-9482-a1b4dd552d8e" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ae8fb7b2-9ae8-35e5-904e-3deb3baee8de" locEndPos="41" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="3" auth="user" locRef="1" rule="CWE.200.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="-1397641892" unbViolId="8321e421-9089-32f3-8964-c89d7aaac96a" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="91069100-f784-306c-b7f5-493d7a9a2d15" locEndPos="58" locType="sr" urgent="true" hash="1741334343" locEndLn="20" goals="1,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="3" auth="user" locRef="1" rule="CWE.209.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="-1397641892" unbViolId="07df3226-05b1-33ac-b671-6539777256a9" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e130e539-ac0c-3e90-96ee-e2f99cf0c81e" locEndPos="58" locType="sr" urgent="true" hash="1741334343" locEndLn="20" goals="1,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="3" auth="user" locRef="1" rule="OWASP2017.A6.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="-1397641892" unbViolId="3b7931ac-dc41-39ae-a463-817cf22ebd22" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1a73d823-4dec-3e5c-ada3-304c8be70922" locEndPos="58" locType="sr" urgent="true" hash="1741334343" locEndLn="20" goals="1,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="3" auth="user" locRef="1" rule="OWASP2019.API10.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="-1397641892" unbViolId="cb0f840a-af72-31d7-b5bb-a3a1cdbfea35" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="23831f17-86fe-35bc-be35-d354e4ea2532" locEndPos="58" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="3" auth="user" locRef="1" rule="OWASP2021.A5.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="-1397641892" unbViolId="af49b82b-de48-3c83-9bb9-d3633d1b0eb8" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7d4a7364-329f-36e8-b8a3-3c2de40f1602" locEndPos="58" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="3" auth="user" locRef="1" rule="PCIDSS32.655.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="-1397641892" unbViolId="e97988dd-5bf0-37e4-b72f-985fda8ffe1f" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8f28f0b3-543c-35c3-a2af-4abd433f3ed9" locEndPos="58" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="3" auth="user" locRef="1" rule="SECURITY.ESD.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="-1397641892" unbViolId="c500bb95-b915-35fa-949f-23d66de14c47" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9dbdbfcf-6a70-308d-81d6-91b4c824e0a8" locEndPos="58" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="2" auth="user" locRef="1" rule="APSC_DV.001460.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="-1397641892" unbViolId="8dc70fa8-8839-3f8d-8354-e3a301ab9fa2" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="87911651-d0c2-388f-b058-c528f7491e36" locEndPos="58" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="5" auth="user" locRef="1" rule="INTER.COS" lnHash="-1397641892" pkg="" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="-1397641892" unbViolId="3fdb9d82-a6d5-327c-91e6-7fd699fec07a" locStartPos="31" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="515932a6-5704-3dfa-93a6-1b5a24a7068a" locEndPos="57" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="3" auth="user" locRef="1" rule="CERT.STR00.COS" lnHash="-1397641892" pkg="" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="-1397641892" unbViolId="ef0c98de-6997-35f3-a938-d2687a49ebde" locStartPos="31" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c22d3d3a-11cf-3ff0-84c9-43297d5004be" locEndPos="57" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Called 'toString()' implicitly on a numeric object" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="20" sev="4" auth="user" locRef="1" rule="INTER.NTS" lnHash="-1397641892" pkg="" rule.header="Do not call 'toString()' or 'String.valueOf()' on numeric values in an Internationalized environment" tool="jtest" lineHash="-1397641892" unbViolId="d9112c33-8e60-33db-87d7-1436eb9c94f7" locStartPos="51" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="13d68862-a84c-34fc-a7a3-6e4c36acc18e" locEndPos="57" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="23" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user" locRef="1" rule="FORMAT.BLCD" lnHash="-619022508" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-619022508" unbViolId="623dfce5-7c58-3145-a920-91b7491d5f50" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="662a7cf0-f442-32ec-a275-17236f1cb503" locEndPos="10" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="23" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user" locRef="1" rule="APSC_DV.003215.BLCD" lnHash="-619022508" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-619022508" unbViolId="6595862b-593f-3e47-914a-52ad2360a267" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c2af1816-1b99-3bd9-800b-ba9d7b16e2af" locEndPos="10" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Elements in 'Screen' not ordered appropriately, first violation: member enum declaration 'Brightness' at line 23 should be placed before field 'brightness' at line 13" ln="23" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user" locRef="1" rule="CODSTA.ORG.FO" lnHash="-619022508" pkg="" rule.header="Order class elements appropriately" tool="jtest" lineHash="-619022508" unbViolId="80a027dc-05b6-36be-927b-078906bca242" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="43e90df0-21ac-39bc-a63c-e712a5f877e9" locEndPos="30" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Brightness'" ln="23" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user" locRef="1" rule="JAVADOC.PJDC" lnHash="-619022508" pkg="" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-619022508" unbViolId="25f4e29c-e61b-3979-8857-9a6e7a05565c" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="27f78d26-aaa8-32e0-ae52-e6afae9d9d59" locEndPos="30" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Enum 'Calculator.Screen.Brightness' should be declared &quot;private&quot;" ln="23" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="23" sev="4" auth="user" locRef="1" rule="GLOBAL.DPPC" lnHash="-619022508" pkg="" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="-619022508" unbViolId="95c85425-e901-3032-9bdb-80a30e27daeb" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c36dc59a-919d-37ad-83db-6a9f5cdb5f23" locEndPos="30" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="'Brightness' is an expensive enum declaration" ln="23" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user" locRef="1" rule="MOBILE.ENUM" lnHash="-619022508" pkg="" rule.header="Avoid using enums" tool="jtest" lineHash="-619022508" unbViolId="66452041-4bb1-3d06-8dee-e19a1ff8c3f7" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="1adb5e68-c5ba-3d2e-a8a6-4503d9475a91" locEndPos="30" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Use 1 blank line before every enum constant declaration (or corresponding Javadoc)" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="24" sev="3" auth="user" locRef="1" rule="FORMAT.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1760446347" unbViolId="9c2452d3-9519-3626-8554-df613b285401" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3240904a-0708-363a-99a9-958d9100e580" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Use 1 blank line before every enum constant declaration (or corresponding Javadoc)" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="24" sev="3" auth="user" locRef="1" rule="APSC_DV.003215.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1760446347" unbViolId="fd0afdf1-9f7d-3df6-9f63-b9700245a46e" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9459314f-4a04-3ccb-8beb-70878793e192" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="24" sev="3" auth="user" locRef="1" rule="FORMAT.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1760446347" unbViolId="128bd3ac-16c2-3721-92c9-971c16270d4a" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="29a65579-d8e8-37cb-87d7-6765c817a197" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="24" sev="3" auth="user" locRef="1" rule="APSC_DV.003215.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1760446347" unbViolId="9938341a-6f7a-3851-8235-26926e24451d" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c8cbee48-ba99-32ff-9580-66d7902165bd" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Enum constant not directly used: HIGH" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="24" sev="4" auth="user" locRef="1" rule="GLOBAL.UEC" lnHash="-1760446347" pkg="" rule.header="Avoid globally unused enum constants" tool="jtest" lineHash="-1760446347" unbViolId="2f411ded-e4b2-37d7-944f-cb184f710b25" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a5e5f54d-faea-38ff-b0e0-a164b33edd32" locEndPos="16" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Enum constant not directly used: LOW" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locStartln="24" sev="4" auth="user" locRef="1" rule="GLOBAL.UEC" lnHash="-1760446347" pkg="" rule.header="Avoid globally unused enum constants" tool="jtest" lineHash="-1760446347" unbViolId="ea131fa7-3c61-3b08-abc6-fb056883bb7a" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b3526a16-441b-3ea9-8bff-71868ae85efe" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="1" sev="3" auth="user" locRef="2" rule="APSC_DV.003215.MCH" lnHash="1284421354" pkg="com.parasoft" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1284421354" unbViolId="4a9ae5d2-05be-34a4-8007-7e0e5c6e403d" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="18c0fd05-c4b2-3703-9588-717e70193d2e" locEndPos="21" locType="sr" hash="-662881149" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="1" sev="2" auth="user" locRef="2" rule="FORMAT.MCH" lnHash="1284421354" pkg="com.parasoft" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1284421354" unbViolId="563abcef-fd90-3d47-becf-49b7a8d01d13" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bb79e63e-608e-3405-9bdc-f924d85cf1a2" locEndPos="21" locType="sr" hash="-662881149" locEndLn="1" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="3" auth="user" locRef="2" rule="FORMAT.BLCD" lnHash="-1890058929" pkg="com.parasoft" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1890058929" unbViolId="6f255a90-3547-3998-8028-7df57a298c43" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2232566e-2d66-303d-8377-11cb354b08fb" locEndPos="2" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="3" auth="user" locRef="2" rule="APSC_DV.003215.BLCD" lnHash="-1890058929" pkg="com.parasoft" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1890058929" unbViolId="23ffca37-ea66-3271-b86f-dba10737424a" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c4d9c463-0063-3535-9fac-c215522e6c52" locEndPos="2" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user" locRef="2" rule="SECURITY.WSC.MCNC" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1890058929" unbViolId="0edaf2c5-ea6e-35ee-a2e5-856432e778b3" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1cee2ce6-156c-3144-b0e5-d21fd0142647" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="2" auth="user" locRef="2" rule="CERT.OBJ07.MCNC" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1890058929" unbViolId="35fc9458-584a-3296-853d-61e9929fd2b7" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="744fa483-ec2d-3fe9-b58d-ef965e29459d" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Convertor'" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="3" auth="user" locRef="2" rule="JAVADOC.PJDC" lnHash="-1890058929" pkg="com.parasoft" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1890058929" unbViolId="13083323-145b-3d25-a525-8b37861e594e" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="122a5045-4fdb-38b7-a84a-6db389908497" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.Convertor" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="4" auth="user" locRef="2" rule="GLOBAL.UPPC" lnHash="-1890058929" pkg="com.parasoft" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="-1890058929" unbViolId="6aa5f1b3-fc39-3b69-a8a6-a4f204f40856" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e8ad86c7-7b2c-3a56-88af-0fa0d107043e" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="4" auth="user" locRef="2" rule="SECURITY.WSC.FIMU" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make immutable classes final" tool="jtest" lineHash="-1890058929" unbViolId="84a48d69-d68a-3328-a85e-dc2c357efa38" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f6f78237-8179-3362-825d-ffc699505d40" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user" locRef="2" rule="SECURITY.WSC.SER" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1890058929" unbViolId="e48fae72-e98d-3366-8e20-fda9a3cf8b72" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e675f140-a385-3f3e-97d0-ea9c4b631b2c" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user" locRef="2" rule="CWE.499.SER" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1890058929" unbViolId="89213e55-4957-3eaf-b756-24a06611fe58" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="699243a9-7cf3-30c3-be1c-38e41214f86d" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: Convertor" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user" locRef="2" rule="CODSTA.POD.DCTOR" lnHash="-1890058929" pkg="com.parasoft" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="-1890058929" unbViolId="c9e8e684-1162-3596-9a93-30bdb067a897" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="bc397f75-0e0a-3d2c-8a78-c813f95f5116" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="3" auth="user" locRef="2" rule="METRICS.PJDC" lnHash="-1890058929" pkg="com.parasoft" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="-1890058929" unbViolId="bcd5a22b-1ebc-33e5-b395-d559878459ef" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="406d21ec-eaae-33b7-aa8d-f6e08399b789" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user" locRef="2" rule="SECURITY.WSC.DSER" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-1890058929" unbViolId="988f3c56-1156-32fe-9e38-d1b4f268e614" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="6f4a74bf-bb09-3ad0-99fd-2180d892c60f" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="interface type 'IConvertor' is used" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="3" auth="user" locRef="2" rule="MOBILE.AUI" lnHash="-1890058929" pkg="com.parasoft" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="-1890058929" unbViolId="591330c6-0b30-3ff9-9971-03dfc8d931f9" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d78af163-4541-37b1-9f68-5ea696624c3e" locEndPos="44" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user" locRef="2" rule="FORMAT.U2BL" lnHash="-750708491" pkg="com.parasoft" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-750708491" unbViolId="7f369452-1982-3cff-9ab9-2d0da0b22f31" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0709526a-e845-31c7-999a-fd718408588c" locEndPos="42" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user" locRef="2" rule="APSC_DV.003215.U2BL" lnHash="-750708491" pkg="com.parasoft" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-750708491" unbViolId="1215b0dc-788a-33bd-96e2-c319b69dbc19" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="06d44bdd-fa02-3625-a583-1638fe7f51fd" locEndPos="42" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user" locRef="2" rule="METRIC.CC" lnHash="-750708491" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-750708491" unbViolId="2284b444-1924-3c54-a952-f2e5707040ce" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="7e1ab143-b5ba-3b80-82cf-459ab766ea05" locType="sr" locEndPos="0" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'convertToString()'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="2" auth="user" locRef="2" rule="JUNIT.TEST" lnHash="-750708491" pkg="com.parasoft" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-750708491" unbViolId="cba13db1-a3d7-3fba-88d9-1b2fc19e1082" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bc2d4eeb-b4d3-3748-b8b3-4469809e0c33" locEndPos="33" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="The method 'convertToString' does not have a Javadoc comment describing whether or not the method can return null" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user" locRef="2" rule="JAVADOC.CRN" lnHash="-750708491" pkg="com.parasoft" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="-750708491" unbViolId="519f161d-090c-38ab-affe-770bf49fee5b" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dcc6ccf3-b827-3c71-a658-e15eff60ee57" locEndPos="33" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'convertToString()'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user" locRef="2" rule="JAVADOC.PJDM" lnHash="-750708491" pkg="com.parasoft" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-750708491" unbViolId="a1e44fec-8a19-3319-b174-efc89c02f5f5" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c3612bab-81fd-37fb-8a07-79909ba13a4a" locEndPos="33" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: convertToString()" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="4" auth="user" locRef="2" rule="GLOBAL.UPPM" lnHash="-750708491" pkg="com.parasoft" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="-750708491" unbViolId="83061f90-781f-321a-af85-b30f1f238683" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f1586cf6-491c-320d-97e0-62226da7bca8" locEndPos="33" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Formal parameter 'a' is not declared as final" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user" locRef="2" rule="CODSTA.BP.FPF" lnHash="-750708491" pkg="com.parasoft" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-750708491" unbViolId="5f75ba10-9720-3312-a9c7-896b0ab5ec3e" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="591a984e-4825-361c-a50d-bd516b10e146" locEndPos="39" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="The length of the identifier &quot;a&quot; is less than the minimum length (2)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="4" auth="user" locRef="2" rule="NAMING.LLI" lnHash="-750708491" pkg="com.parasoft" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="-750708491" unbViolId="1a7e045b-fa05-324e-bba3-2b9fcdf50d25" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9b3e8002-0e52-3d9a-b4ff-11a76e42fe5a" locEndPos="39" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Variable 'a' does not end with 'int'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="4" auth="user" locRef="2" rule="NAMING.UHN" lnHash="-750708491" pkg="com.parasoft" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-750708491" unbViolId="289da129-c087-3c04-9f17-76376f20a5b7" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1be78a21-86ac-382a-9599-b16261abb768" locEndPos="39" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="5" auth="user" locRef="2" rule="INTER.COS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="380198143" unbViolId="f477f880-8934-3a90-a846-825c6d81ef88" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="86fe4f7c-c3fd-388b-9fb5-28a51dcb7100" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="3" auth="user" locRef="2" rule="CERT.STR00.COS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="380198143" unbViolId="65981f33-9fa7-375b-8541-2d1c1964de3f" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="79c985c8-f993-3d71-ab50-e4f36c97767e" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="The value 'a' is converted to a String here by concatenation with the empty String" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="3" auth="user" locRef="2" rule="OPT.CPTS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not convert a value to a String by concatenating the empty String" tool="jtest" lineHash="380198143" unbViolId="b34b5d77-e371-3135-bfc8-7cb9d83823c2" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bb8ba2f6-cd35-37dd-a618-ee4c3f456023" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="The value 'a' is converted to a String here by concatenation with the empty String" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="3" auth="user" locRef="2" rule="CWE.704.CPTS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not convert a value to a String by concatenating the empty String" tool="jtest" lineHash="380198143" unbViolId="55ef42fd-912e-3899-a08c-1a87a9b1d35b" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3010560c-a7c1-3108-80b1-c73d6d33bc36" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="The String literal &quot;&quot; is used" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="3" auth="user" locRef="2" rule="SECURITY.WSC.SL" lnHash="380198143" pkg="com.parasoft" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="380198143" unbViolId="9a1ca1b6-710b-3771-a45f-4fb7f35b1313" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="1933d756-6b61-3f6b-8adf-3073cdf01c07" locEndPos="17" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="Called 'toString()' implicitly on a numeric object" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="4" auth="user" locRef="2" rule="INTER.NTS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not call 'toString()' or 'String.valueOf()' on numeric values in an Internationalized environment" tool="jtest" lineHash="380198143" unbViolId="ff3d6859-fc38-3ce6-bd92-8a2f0456b0d6" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3bbc9d8c-90eb-346a-8225-c35ea76e314d" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="10" sev="3" auth="user" locRef="2" rule="METRIC.CC" lnHash="552024108" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="552024108" unbViolId="c13a01dc-bb5c-3f28-ae8e-56ee2dcad939" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="4a6e896b-7af9-3127-a3ac-14c1b5899496" locType="sr" locEndPos="0" hash="-662881149" locEndLn="11" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'name()'" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="11" sev="2" auth="user" locRef="2" rule="JUNIT.TEST" lnHash="-1435350657" pkg="com.parasoft" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-1435350657" unbViolId="38bcbbfa-7d2d-33cf-8e50-d91813958313" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ae57ecd0-96a0-3386-8ebf-5542e212c398" locEndPos="22" locType="sr" hash="-662881149" locEndLn="11" goals="0,"/>
    <StdViol msg="The method 'name' does not have a Javadoc comment describing whether or not the method can return null" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="11" sev="3" auth="user" locRef="2" rule="JAVADOC.CRN" lnHash="-1435350657" pkg="com.parasoft" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="-1435350657" unbViolId="536a0256-7db6-363f-a249-b6f2c176b22c" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="80172d8b-e810-3d00-9069-3fadffe059d9" locEndPos="22" locType="sr" hash="-662881149" locEndLn="11" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'name()'" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="11" sev="3" auth="user" locRef="2" rule="JAVADOC.PJDM" lnHash="-1435350657" pkg="com.parasoft" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1435350657" unbViolId="f33fc515-2c6c-389d-b13a-d3d4a198694d" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="56305e3a-e91c-33a0-86d7-5e14192d635e" locEndPos="22" locType="sr" hash="-662881149" locEndLn="11" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;number to string convertor&quot;" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="12" sev="3" auth="user" locRef="2" rule="INTER.ITT" lnHash="-31285632" pkg="com.parasoft" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="-31285632" unbViolId="bc351fe0-821c-3e3e-912f-d9ba1535e02c" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="45bbc996-a8a1-3bba-9b62-05d66dbcd77f" locEndPos="43" locType="sr" hash="-662881149" locEndLn="12" goals="0,"/>
    <StdViol msg="The String literal &quot;number to string convertor&quot; is used" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locStartln="12" sev="3" auth="user" locRef="2" rule="SECURITY.WSC.SL" lnHash="-31285632" pkg="com.parasoft" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="-31285632" unbViolId="a162585a-9129-3964-a694-f563d0c6abd5" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="4ab3feab-2b49-3f23-aa97-f81fe8591b3b" locEndPos="43" locType="sr" hash="-662881149" locEndLn="12" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="1" sev="3" auth="user" locRef="3" rule="APSC_DV.003215.MCH" lnHash="1607033717" pkg="com.parasoft.another" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1607033717" unbViolId="93c1e029-6b9f-3598-8720-fb2c4107d3ea" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d9935ece-7fe8-39e2-b269-69a264748594" locEndPos="29" locType="sr" urgent="true" hash="469181545" locEndLn="1" goals="1,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="1" sev="2" auth="user" locRef="3" rule="FORMAT.MCH" lnHash="1607033717" pkg="com.parasoft.another" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1607033717" unbViolId="e9509980-6de3-3860-8f91-5874e966839f" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="95e8d5bc-18ee-3f5f-84e9-4ec7e5af70db" locEndPos="29" locType="sr" urgent="true" hash="469181545" locEndLn="1" goals="1,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="3" auth="user" locRef="3" rule="FORMAT.BLCD" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1890058929" unbViolId="1061bbed-d261-3992-bc8d-fa0828d41fb2" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="38efa90c-9216-34f0-933e-2c757dcca62d" locEndPos="2" locType="sr" urgent="true" hash="469181545" locEndLn="5" goals="1,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="3" auth="user" locRef="3" rule="APSC_DV.003215.BLCD" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1890058929" unbViolId="c0ef16a7-3f08-3a32-8a0b-87179b9c39df" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="354adefa-28de-318c-bd6d-ab13c05c372c" locEndPos="2" locType="sr" urgent="true" hash="469181545" locEndLn="5" goals="1,"/>
    <StdViol msg="'clone()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="5" auth="user" locRef="3" rule="SECURITY.WSC.MCNC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1890058929" unbViolId="ff88eb75-0677-35b9-b6ff-37df1bea2e28" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a7734912-c2c6-3d21-8602-c901f515044c" locEndPos="22" locType="sr" urgent="true" hash="469181545" locEndLn="5" goals="1,"/>
    <StdViol msg="'clone()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="2" auth="user" locRef="3" rule="CERT.OBJ07.MCNC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1890058929" unbViolId="3f02788b-d0f6-30fd-888d-a837f9197323" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f3837a5f-a332-30bd-8965-c391823d371f" locEndPos="22" locType="sr" urgent="true" hash="469181545" locEndLn="5" goals="1,"/>
    <StdViol msg="Missing Javadoc comment for 'Convertor'" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="3" auth="user" locRef="3" rule="JAVADOC.PJDC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1890058929" unbViolId="ad2ea5b6-78fc-3b25-8f8b-04f97d684272" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb9b3800-ce45-385b-8981-6437f408c786" locEndPos="22" locType="sr" urgent="true" hash="469181545" locEndLn="5" goals="1,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.another.Convertor" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="4" auth="user" locRef="3" rule="GLOBAL.UPPC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="-1890058929" unbViolId="0e4665ca-25e9-348c-8216-bcb7aa5b37c4" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2b23a0cb-2301-3ffc-b9a2-4b19970c4287" locEndPos="22" locType="sr" urgent="true" hash="469181545" locEndLn="5" goals="1,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="4" auth="user" locRef="3" rule="SECURITY.WSC.FIMU" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make immutable classes final" tool="jtest" lineHash="-1890058929" unbViolId="beeadad0-3ca8-3239-b57f-63574f8ac010" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c788f190-1180-3ac4-8f06-0aafa292b62d" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="5" auth="user" locRef="3" rule="SECURITY.WSC.SER" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1890058929" unbViolId="8b981ff9-0c70-3664-bdb1-573769b8aaf6" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="30ba13b1-5269-3303-99bb-6cab91bbb36f" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="5" auth="user" locRef="3" rule="CWE.499.SER" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1890058929" unbViolId="87293b2c-7232-3068-a5da-655c82b9d92a" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="727b643f-0fd1-3603-b71c-2690e15e1c38" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: Convertor" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="5" auth="user" locRef="3" rule="CODSTA.POD.DCTOR" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="-1890058929" unbViolId="8f182fb2-af3d-3e5f-8409-542eb83f826e" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="e404bd65-7e84-38fa-8bc4-309bca9d0e39" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="3" auth="user" locRef="3" rule="METRICS.PJDC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="-1890058929" unbViolId="3fd7deba-ec0b-34dd-9265-5145ae1e1866" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="bab9a2e2-3ea4-34df-a0c2-90985c07b910" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="5" auth="user" locRef="3" rule="SECURITY.WSC.DSER" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-1890058929" unbViolId="b827109a-1c2a-3533-84d9-f79285dcbdad" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="683ad8fb-0f06-3cfe-b81c-feb9cfb928eb" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="interface type 'IConvertor' is used" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="3" auth="user" locRef="3" rule="MOBILE.AUI" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="-1890058929" unbViolId="58c239cb-6e57-3341-9152-024a4b4f4059" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e2d5a870-702c-3a9c-b04a-6838ec6c56d1" locEndPos="44" locType="sr" urgent="true" hash="469181545" locEndLn="5" goals="1,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user" locRef="3" rule="FORMAT.U2BL" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-750708491" unbViolId="f797697f-bdb6-3d9b-b742-4546d6096dfc" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="172cd698-ea48-3f17-8aba-5d73c4d91abf" locEndPos="42" locType="sr" urgent="true" hash="469181545" locEndLn="6" goals="1,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user" locRef="3" rule="APSC_DV.003215.U2BL" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-750708491" unbViolId="1ef323ab-0868-3575-b746-e0d5fecca6fb" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="de984586-dcf3-38f4-9ef8-bc6b36a1cc0d" locEndPos="42" locType="sr" urgent="true" hash="469181545" locEndLn="6" goals="1,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user" locRef="3" rule="METRIC.CC" lnHash="-750708491" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-750708491" unbViolId="3a8af527-ed64-316b-be37-7b5287d1de74" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="4673d714-2bfc-3d8b-93b4-f2c867627718" locType="sr" locEndPos="0" hash="469181545" locEndLn="7" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'convertToString()'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="2" auth="user" locRef="3" rule="JUNIT.TEST" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-750708491" unbViolId="042ff4bc-25e6-34aa-b76a-0e84b4719166" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f7adbdb5-34fe-30c3-b441-e31418bea1f0" locEndPos="33" locType="sr" urgent="true" hash="469181545" locEndLn="6" goals="1,"/>
    <StdViol msg="The method 'convertToString' does not have a Javadoc comment describing whether or not the method can return null" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user" locRef="3" rule="JAVADOC.CRN" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="-750708491" unbViolId="06ff0238-8bda-33f9-87d2-a367b6e2cd69" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9ec683b7-03e2-3e84-a6b2-d72b07338cd8" locEndPos="33" locType="sr" urgent="true" hash="469181545" locEndLn="6" goals="1,"/>
    <StdViol msg="Missing Javadoc comment for method 'convertToString()'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user" locRef="3" rule="JAVADOC.PJDM" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-750708491" unbViolId="f305e217-f375-3de8-8023-ef9ffe20ccd4" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cd28c8a2-085b-3238-ba5d-09a2d838d263" locEndPos="33" locType="sr" urgent="true" hash="469181545" locEndLn="6" goals="1,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: convertToString()" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="4" auth="user" locRef="3" rule="GLOBAL.UPPM" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="-750708491" unbViolId="f4bd09af-88be-322e-9906-85a858e0bfdb" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a73d06aa-1743-3603-b5a8-f4f25e592ad7" locEndPos="33" locType="sr" urgent="true" hash="469181545" locEndLn="6" goals="1,"/>
    <StdViol msg="Formal parameter 'a' is not declared as final" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user" locRef="3" rule="CODSTA.BP.FPF" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-750708491" unbViolId="317d4366-a808-3dbb-9587-186e8a229e30" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4fbf2bf5-83ca-3ca9-bc40-f090f7a5c788" locEndPos="39" locType="sr" urgent="true" hash="469181545" locEndLn="6" goals="1,"/>
    <StdViol msg="The length of the identifier &quot;a&quot; is less than the minimum length (2)" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="4" auth="user" locRef="3" rule="NAMING.LLI" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="-750708491" unbViolId="69c1b747-47b5-3fb9-88e5-a588f079c805" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="595b93be-e3cb-38d4-832b-29e6e189c3d0" locEndPos="39" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="Variable 'a' does not end with 'int'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="4" auth="user" locRef="3" rule="NAMING.UHN" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-750708491" unbViolId="8b9ce08c-158e-395e-af6c-cf535e83a29d" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="524a6daf-b8d3-3a2a-a3d8-04ad029ffbec" locEndPos="39" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="5" auth="user" locRef="3" rule="INTER.COS" lnHash="936757658" pkg="com.parasoft.another" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="936757658" unbViolId="42f65b04-73e6-391f-906b-d3999cd4e606" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8aa61e67-8abf-3aee-9a22-fbfac3eefd05" locEndPos="33" locType="sr" urgent="true" hash="469181545" locEndLn="7" goals="1,"/>
    <StdViol msg="Concatenating strings" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="3" auth="user" locRef="3" rule="CERT.STR00.COS" lnHash="936757658" pkg="com.parasoft.another" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="936757658" unbViolId="2658260f-8764-3ed6-b04d-30660d92e434" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0e929afe-7c6a-3050-808f-c00d26b894a2" locEndPos="33" locType="sr" urgent="true" hash="469181545" locEndLn="7" goals="1,"/>
    <StdViol msg="Non internationalized string: &quot;parasoftcn: &quot;" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="3" auth="user" locRef="3" rule="INTER.ITT" lnHash="936757658" pkg="com.parasoft.another" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="936757658" unbViolId="dd8c949c-22d9-3c9c-9166-50aa97b41dd5" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0860e089-ce30-3e4b-8a4a-ea7b017afde4" locEndPos="29" locType="sr" urgent="true" hash="469181545" locEndLn="7" goals="1,"/>
    <StdViol msg="The String literal &quot;parasoftcn: &quot; is used" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="3" auth="user" locRef="3" rule="SECURITY.WSC.SL" lnHash="936757658" pkg="com.parasoft.another" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="936757658" unbViolId="c2e07915-6152-360a-bc57-d0a9e5addd05" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="5a426c4c-7dfe-3f55-9145-3f702e7c01e9" locEndPos="29" locType="sr" hash="469181545" locEndLn="7" goals="0,"/>
    <StdViol msg="Misspelled word 'parasoftcn'" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="3" auth="user" locRef="3" rule="JAVADOC.SPELL" lnHash="936757658" pkg="com.parasoft.another" rule.header="Avoid misspelling words in Javadoc comments and string literals" tool="jtest" lineHash="936757658" unbViolId="600e8152-0fe9-30bd-8af4-8dfd5cae0b8a" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f5d9595d-f3fa-39fa-ad67-329edba78078" locEndPos="26" locType="sr" urgent="true" hash="469181545" locEndLn="7" goals="1,"/>
    <StdViol msg="Called 'toString()' implicitly on a numeric object" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="4" auth="user" locRef="3" rule="INTER.NTS" lnHash="936757658" pkg="com.parasoft.another" rule.header="Do not call 'toString()' or 'String.valueOf()' on numeric values in an Internationalized environment" tool="jtest" lineHash="936757658" unbViolId="e3a7fc95-cfa9-3f50-a084-5ff85df02647" locStartPos="32" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2a35dc63-7f00-3164-a6ac-110b8bd129b4" locEndPos="33" locType="sr" urgent="true" hash="469181545" locEndLn="7" goals="1,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="10" sev="3" auth="user" locRef="3" rule="METRIC.CC" lnHash="552024108" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="552024108" unbViolId="89062db9-500a-3c3d-a493-5100ee8de98d" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="491037a7-6f75-3a3a-873f-0519ed06d278" locType="sr" locEndPos="0" hash="469181545" locEndLn="11" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'name()'" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="11" sev="2" auth="user" locRef="3" rule="JUNIT.TEST" lnHash="-1435350657" pkg="com.parasoft.another" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-1435350657" unbViolId="41c07a65-9e61-3b0d-93a8-f528ae8c28f6" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d3762e35-5136-377e-9791-28b1ce06449f" locEndPos="22" locType="sr" urgent="true" hash="469181545" locEndLn="11" goals="1,"/>
    <StdViol msg="The method 'name' does not have a Javadoc comment describing whether or not the method can return null" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="11" sev="3" auth="user" locRef="3" rule="JAVADOC.CRN" lnHash="-1435350657" pkg="com.parasoft.another" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="-1435350657" unbViolId="8672c42d-a959-3658-aa9e-93d9b81426bb" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e3cb8a36-4457-3ba0-820b-1801188f0446" locEndPos="22" locType="sr" urgent="true" hash="469181545" locEndLn="11" goals="1,"/>
    <StdViol msg="Missing Javadoc comment for method 'name()'" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="11" sev="3" auth="user" locRef="3" rule="JAVADOC.PJDM" lnHash="-1435350657" pkg="com.parasoft.another" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1435350657" unbViolId="14bf4143-43ce-3131-a088-040edae96327" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f87b9231-f883-381d-a832-059721cc5a19" locEndPos="22" locType="sr" urgent="true" hash="469181545" locEndLn="11" goals="1,"/>
    <StdViol msg="Non internationalized string: &quot;number to string convertor&quot;" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="12" sev="3" auth="user" locRef="3" rule="INTER.ITT" lnHash="-31285632" pkg="com.parasoft.another" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="-31285632" unbViolId="8538b1a6-dc9c-3abd-830c-b9f3a6c713a0" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="13db4d01-a393-39d6-9c9e-7742f9c0af57" locEndPos="43" locType="sr" urgent="true" hash="469181545" locEndLn="12" goals="1,"/>
    <StdViol msg="The String literal &quot;number to string convertor&quot; is used" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locStartln="12" sev="3" auth="user" locRef="3" rule="SECURITY.WSC.SL" lnHash="-31285632" pkg="com.parasoft.another" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="-31285632" unbViolId="cd634a38-3c57-3861-aef8-eef462bffc0e" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="80d755c0-bea5-3333-aaaf-5ec8425abf22" locEndPos="43" locType="sr" hash="469181545" locEndLn="12" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="1" sev="3" auth="user" locRef="4" rule="APSC_DV.003215.MCH" lnHash="-1503458703" pkg="com.parasoft.differentViolations" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="-1503458703" unbViolId="8ce37f79-09a7-3b85-9f08-1bb7570682b4" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="73b9f5a4-2a97-3231-93e5-b024736771c6" locEndPos="41" locType="sr" hash="473374080" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="1" sev="2" auth="user" locRef="4" rule="FORMAT.MCH" lnHash="-1503458703" pkg="com.parasoft.differentViolations" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="-1503458703" unbViolId="a15135d5-2c0b-32d1-ad0d-72e3b9adea33" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cb2593fc-9082-350e-941e-4ca009bb10d1" locEndPos="41" locType="sr" hash="473374080" locEndLn="1" goals="0,"/>
    <StdViol msg="Package 'com.parasoft.differentViolations' does not match user-specified regular expression '^[a-z]([a-z]|[0-9]|\.|_)+$'" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="1" sev="3" auth="user" locRef="4" rule="NAMING.PKG" lnHash="-1503458703" pkg="com.parasoft.differentViolations" rule.header="Use a naming convention for &quot;package&quot; names" tool="jtest" lineHash="-1503458703" unbViolId="dfb45471-e2da-3217-9103-020d13b4cd73" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ee8616cb-8efd-3a7c-ad26-e27d29295461" locEndPos="40" locType="sr" hash="473374080" locEndLn="1" goals="0,"/>
    <StdViol msg="Use 1 blank line before the import statements (or corresponding import comments)" ln="2" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="2" sev="3" auth="user" locRef="4" rule="FORMAT.U2BL" lnHash="1636312570" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1636312570" unbViolId="88e44bc5-d240-3024-b6d4-17eaa3f4f84c" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e507638b-3ce0-32bc-bd1b-fafe68bd788f" locEndPos="21" locType="sr" hash="473374080" locEndLn="2" goals="0,"/>
    <StdViol msg="Use 1 blank line before the import statements (or corresponding import comments)" ln="2" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="2" sev="3" auth="user" locRef="4" rule="APSC_DV.003215.U2BL" lnHash="1636312570" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1636312570" unbViolId="8da77f57-f362-3845-affd-470ad7f97595" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ebb6b83d-bf43-367d-b2e1-92978fa546bb" locEndPos="21" locType="sr" hash="473374080" locEndLn="2" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="FORMAT.BLCD" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-334993219" unbViolId="92023451-f30f-381c-a18e-0f378db2a1bf" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6d0a1f8a-b45c-376f-a293-6de06d06be3a" locEndPos="2" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="APSC_DV.003215.BLCD" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-334993219" unbViolId="f41cdf1a-72bd-3406-986b-a296bb167895" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2daf75ce-98d6-3343-a4dc-c2539e22665c" locEndPos="2" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Public clone method missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="2" auth="user" locRef="4" rule="CERT.OBJ06.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="5133d4aa-59d7-3753-9f83-8f056646a34a" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9ebcf858-f100-3752-a028-4d624560d9d6" locEndPos="31" locType="sr" urgent="true" hash="473374080" locEndLn="4" goals="1,"/>
    <StdViol msg="Public clone method missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="CERT.OBJ04.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="51d066ab-48d9-3e79-af09-fb64683fdfd8" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cddd6337-3cda-3e97-ad24-f132fd8279ec" locEndPos="31" locType="sr" urgent="true" hash="473374080" locEndLn="4" goals="1,"/>
    <StdViol msg="Public clone method missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="OOP.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="c6cce056-446e-3051-b32a-bfea2ca438e5" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="340a9adc-fa56-3fdb-98ca-e018f96015a8" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Public clone method missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="1" auth="user" locRef="4" rule="CERT.OBJ05.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="2830a8c8-488c-3571-90f3-e520592a648a" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="64fa4bca-ba15-3ad7-b6c0-48e224999908" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Static creation method missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="2" auth="user" locRef="4" rule="CERT.OBJ06.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="e177c8db-7c1b-30e0-82b5-2cf169f38e48" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="636a1839-467e-34e7-992f-5b2162f6deb0" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Static creation method missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="CERT.OBJ04.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="b0a9eebe-f2bb-3ea6-b56f-ef4f51787493" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5b9b2a38-690e-3d94-9d8c-1cab7523176a" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Static creation method missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="OOP.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="249e3ee0-d404-3613-897f-f100cf800ffc" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d4a51092-2dcf-3d7c-b41b-76680ce8c99c" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Static creation method missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="1" auth="user" locRef="4" rule="CERT.OBJ05.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="ae931847-de6b-3b80-adb0-74668bb21a10" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="379752ed-c1ea-3be3-b91a-f8af77b819b0" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Copy constructor missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="2" auth="user" locRef="4" rule="CERT.OBJ06.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="e0316703-60a3-3271-9c91-42e14adcc2fc" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3bc9d946-6a97-36f0-aefb-dedc16ef08bc" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Copy constructor missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="CERT.OBJ04.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="4889a518-d75c-324f-b913-86348c9b1d53" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c917669d-d187-3b01-ba58-1d355be21589" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Copy constructor missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="OOP.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="32e86322-a0d3-3eeb-9297-8c1d8496fd40" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="356b2a04-3980-3fa7-8dd3-d895ff85171f" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Copy constructor missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="1" auth="user" locRef="4" rule="CERT.OBJ05.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="36b68a2c-9748-3b23-948c-decc04c9eac3" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8dcffda4-5826-3da6-8eaf-d8b1e5711b1f" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user" locRef="4" rule="SECURITY.WSC.MCNC" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-334993219" unbViolId="ca6687d7-7d80-31df-97e3-f704dd738dd2" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="58c372c2-3ad6-3993-ad25-01e656e9d1c8" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="2" auth="user" locRef="4" rule="CERT.OBJ07.MCNC" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-334993219" unbViolId="dff3f1a4-43e8-35ea-84bb-d3baf54da8b1" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="57baa7bc-c497-3fe4-af0e-0c7a346f20b4" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'GenerateViolations'" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="JAVADOC.PJDC" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-334993219" unbViolId="79b87d93-18d8-3b36-a44b-d887c1662bac" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="95eb4965-78b0-36f6-a599-89ebf6fec866" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.differentViolations.GenerateViolations" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="4" auth="user" locRef="4" rule="GLOBAL.UPPC" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="-334993219" unbViolId="e1cd45db-84aa-38f0-9b06-c139cbc34862" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9edaa25e-00ed-33b8-b4eb-01a9dcb092f2" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user" locRef="4" rule="SECURITY.WSC.SER" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-334993219" unbViolId="fa59a983-6c4a-3a4c-96fb-77130b4f11a9" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a35fcb9e-df42-378a-bca3-434b3e175807" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user" locRef="4" rule="CWE.499.SER" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-334993219" unbViolId="264d8eef-a21c-3988-a152-e931cceeb932" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6720e237-3f2f-3d9d-bcfb-5e5956adba4d" locEndPos="31" locType="sr" urgent="true" hash="473374080" locEndLn="4" goals="1,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: GenerateViolations" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user" locRef="4" rule="CODSTA.POD.DCTOR" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="-334993219" unbViolId="bd4f51db-bf97-35ac-a385-1c85ded7b856" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="4cb28e8f-c24c-3271-8b8a-16bd543f094e" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user" locRef="4" rule="METRICS.PJDC" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="-334993219" unbViolId="d5da9fe3-0350-3643-85e4-5a8f01113939" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="5568a411-4335-380f-8b0f-f4a3199bf222" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user" locRef="4" rule="SECURITY.WSC.DSER" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-334993219" unbViolId="b1b35f4c-320c-37d0-854b-1e158e74f8cf" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="c7d1b7e0-eebd-393b-912a-1437ce4f94fd" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="3" auth="user" locRef="4" rule="FORMAT.U2BL" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1349339453" unbViolId="61021f43-28dc-3604-923a-60c523e7c984" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0f08e9e5-36c4-39e3-9267-8cc85e9a5f31" locEndPos="12" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="3" auth="user" locRef="4" rule="APSC_DV.003215.U2BL" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1349339453" unbViolId="78aaa23e-8c64-31ad-836f-94a5539e1073" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="86f20c47-129f-3bb8-8f58-bcef536d2d71" locEndPos="12" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Consider changing the raw type 'Map' to a parameterized type" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="3" auth="user" locRef="4" rule="CODSTA.POD.UPT" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Enforce or avoid the use of parameterized types" tool="jtest" lineHash="-1349339453" unbViolId="7d7905c1-7c67-3181-9c31-dcff23196d6f" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="08da944c-006b-341c-846b-b650c4393893" locEndPos="7" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="interface type 'Map' is used" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="3" auth="user" locRef="4" rule="MOBILE.AUI" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="-1349339453" unbViolId="63a7eb45-ab7f-3a84-8782-f92cf716c1de" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4a6fcf7f-bf57-37d0-87d5-62389f495017" locEndPos="7" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Field 'map' should be declared &quot;private&quot;" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="2" auth="user" locRef="4" rule="GLOBAL.DPAF" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Declare package-private fields as inaccessible as possible" tool="jtest" lineHash="-1349339453" unbViolId="4b60f508-a79e-300c-9591-87ae5f5de93d" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7a904873-2503-3a02-9329-822657e12b37" locEndPos="11" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing 'getMap()' method for field 'map'" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="4" auth="user" locRef="4" rule="BEAN.NFM" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-1349339453" unbViolId="6549e7bb-8938-3026-8247-ca006fe454d4" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="30b3b16d-53f2-3208-a430-081fcb87b2bb" locEndPos="11" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing 'setMap()' method for field 'map'" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="4" auth="user" locRef="4" rule="BEAN.NFM" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-1349339453" unbViolId="9fe43603-3c39-3583-82b3-fda619aef7ad" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8b1bd7d0-ab15-3206-b3c6-146c3407c590" locEndPos="11" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Field 'map' is not initialized in its declaration" ln="5" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="4" auth="user" locRef="4" rule="INIT.CSI" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Explicitly initialize all fields" tool="jtest" lineHash="-1349339453" unbViolId="f23af81a-d260-3a6d-bf26-90bed44c8da6" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bdce4a2f-96d1-3fb5-ab3f-cc75ff49d6b0" locEndPos="11" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="7" sev="3" auth="user" locRef="4" rule="METRIC.CC" lnHash="676514228" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="676514228" unbViolId="24501ac0-7ce4-3e16-bfec-f3fd89ffc617" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="54ef58a9-23de-3a84-84a8-6fae9d5aecd3" locType="sr" locEndPos="0" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'generateViolations()'" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="7" sev="2" auth="user" locRef="4" rule="JUNIT.TEST" lnHash="676514228" pkg="com.parasoft.differentViolations" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="676514228" unbViolId="aefa083f-c6b1-3b1d-bb60-eafa01e6800e" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ea8e0f26-83f4-37e2-9fdc-b7a22f2a53b0" locEndPos="34" locType="sr" hash="473374080" locEndLn="7" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'generateViolations()'" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="7" sev="3" auth="user" locRef="4" rule="JAVADOC.PJDM" lnHash="676514228" pkg="com.parasoft.differentViolations" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="676514228" unbViolId="4b9fdf31-3818-3665-b311-63b3bc13fba5" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bbc4cdfe-f77b-3be0-959b-7f744c6fe282" locEndPos="34" locType="sr" hash="473374080" locEndLn="7" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: generateViolations()" ln="7" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="7" sev="4" auth="user" locRef="4" rule="GLOBAL.UPPM" lnHash="676514228" pkg="com.parasoft.differentViolations" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="676514228" unbViolId="dd9ce818-33dd-3b29-bb95-8d41b824896d" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4f41edb6-6770-3e9f-af5c-3bc4cb555324" locEndPos="34" locType="sr" hash="473374080" locEndLn="7" goals="0,"/>
    <FlowViol msg="Value of &quot;map1&quot; is never used" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="23" auth="user" FirstElSrcRngEndLn="8" rule="BD.PB.VOVR" FirstElSrcRngStartPos="8" lnHash="-723063895" ruleSCSCMsg="Point where value is declared" pkg="com.parasoft.differentViolations" FirstElSrcRngFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" rule.header="Avoid unused values" FirstElSrcRngStartln="8" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="2029395117" lang="java" violId="7cc50db4-929d-3edf-b3b4-caaef5346e3a" locEndPos="23" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="4" tool="jtest" lineHash="-723063895" unbViolId="1d3cfa5b-ae51-3b8b-bea5-c2372e938030" locType="sr" hash="473374080" causeLocRef="4">
      <Props/>
      <ElDescList>
        <ElDesc lineHash="-723063895" ln="8" srcRngStartPos="8" srcRngEndPos="23" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="8" srcRngEndLn="8" srcRngFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="Map map1 = map;" ElType="CP" rngLn="8">
          <Anns>
            <Ann msg="Point where value is declared" kind="cause"/>
            <Ann msg="Point where value is declared" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;map1&quot; is never used" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="23" auth="user" FirstElSrcRngEndLn="8" rule="CWE.563.VOVR" FirstElSrcRngStartPos="8" lnHash="-723063895" ruleSCSCMsg="Point where value is declared" pkg="com.parasoft.differentViolations" FirstElSrcRngFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" rule.header="Avoid unused values" FirstElSrcRngStartln="8" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1729587270" lang="java" violId="b5503c27-712d-38c1-946e-0ed7b35e8b74" locEndPos="23" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="4" tool="jtest" lineHash="-723063895" unbViolId="a6260ca7-4554-3a71-847e-5f21717aa28c" locType="sr" hash="473374080" causeLocRef="4">
      <Props/>
      <ElDescList>
        <ElDesc lineHash="-723063895" ln="8" srcRngStartPos="8" srcRngEndPos="23" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="8" srcRngEndLn="8" srcRngFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="Map map1 = map;" ElType="CP" rngLn="8">
          <Anns>
            <Ann msg="Point where value is declared" kind="cause"/>
            <Ann msg="Point where value is declared" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Consider changing the raw type 'Map' to a parameterized type" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="3" auth="user" locRef="4" rule="CODSTA.POD.UPT" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Enforce or avoid the use of parameterized types" tool="jtest" lineHash="-723063895" unbViolId="bf74e16c-64ba-397c-80a1-3778ab947517" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ed9ed7ac-43b2-3412-9985-ae4a0b1612e7" locEndPos="11" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="interface type 'Map' is used" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="3" auth="user" locRef="4" rule="MOBILE.AUI" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="-723063895" unbViolId="1a3e538d-6056-3656-ad00-ce5ec7a19b7f" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9fb1c6a9-1910-3549-86b2-c06a87b84275" locEndPos="11" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="Variable 'map1' is never used" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="3" auth="user" locRef="4" rule="UC.AURV" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="-723063895" unbViolId="cb7ca882-d57c-3735-9446-e96255e166d4" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d57b249d-29b5-3d68-a387-c186f3a24e66" locEndPos="16" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="Variable 'map1' is never used" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="3" auth="user" locRef="4" rule="CWE.563.AURV" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="-723063895" unbViolId="2d971b86-1d1b-391f-bf3a-c063ecd19e2e" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9825e137-b4b2-3785-ba56-9fbe32a96850" locEndPos="16" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="The declaration of the local variable 'map1' is not followed by a comment" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="5" auth="user" locRef="4" rule="CODSTA.READ.CLV" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Comment local variables" tool="jtest" lineHash="-723063895" unbViolId="271803bb-cb09-3988-95e7-5059e650e5b7" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="14c2961d-2de7-365c-af33-41c6f378ead9" locEndPos="16" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user" locRef="4" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="6e5ff65c-ee11-3c4e-a04a-e17f582960c7" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9ec2d55a-b9e2-3286-a689-1f9eb5f9a6fb" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user" locRef="4" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="c7b98b6e-8eb1-3767-b561-2504b6ae9c7a" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="124b43e4-6a2e-3d81-b568-e869b4461398" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user" locRef="4" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="74ec9535-b528-31af-b913-0f7c7436c634" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a4fff5a1-cfd4-37a2-a3a0-cae33824456c" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user" locRef="4" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="929cf1fb-5e52-349d-b8d9-67683a17ccaf" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="70dc1728-6a42-386e-8b1e-67cb65ad01c5" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user" locRef="4" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="fcbb7c00-d7ba-3507-8ff9-b8f144bba564" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c87b88ab-50ca-3168-9178-9138f8010e78" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user" locRef="4" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="162423cf-d5f3-399c-9ebe-6b9cf3bf8b96" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="049f650a-95fd-3b1e-81fc-5e710f99d8a0" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user" locRef="4" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="69286c9c-439b-39ec-8575-50b105b71cab" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d5c343fa-aba4-3999-bae8-1bf92efefeb7" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="2" auth="user" locRef="4" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="34a588d4-d57f-3387-9e52-2c2d5d3df336" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e20a8a58-1651-3be6-a7fd-cd9c5f0ccfe5" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user" locRef="4" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="ad4f5ca9-097f-323e-8f9b-72313ee5ffda" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e36c636d-0d96-363f-b601-4678127194a1" locEndPos="18" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <DupViol msg="Duplicated string literal: &quot;string literal&quot;" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user" locRef="4" rule="CDD.DUPS" lnHash="344278090" rule.header="Avoid string literal duplication" tool="jtest" lineHash="344278090" unbViolId="e0c301a0-272c-3254-8e38-8b3ca643cc33" locStartPos="27" analyzer="com.parasoft.jtest.standards.dupcode" lang="java" violId="59fd43e3-75dd-3d89-8516-1f281fd16a9b" locType="sr" locEndPos="42" urgent="true" hash="473374080" locEndLn="9" goals="1,">
      <ElDescList>
        <ElDesc lineHash="344278090" ln="9" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="9" srcRngEndLn="9" srcRngFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 9] Duplicated string literal in file 'GenerateViolations.java'" rngLn="9"/>
        <ElDesc lineHash="344278090" ln="10" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="10" srcRngEndLn="10" srcRngFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 10] Duplicated string literal in file 'GenerateViolations.java'" rngLn="10"/>
        <ElDesc lineHash="344278090" ln="11" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="11" srcRngEndLn="11" srcRngFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 11] Duplicated string literal in file 'GenerateViolations.java'" rngLn="11"/>
        <ElDesc lineHash="344278090" ln="12" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="12" srcRngEndLn="12" srcRngFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 12] Duplicated string literal in file 'GenerateViolations.java'" rngLn="12"/>
        <ElDesc lineHash="344278090" ln="13" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="13" srcRngEndLn="13" srcRngFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 13] Duplicated string literal in file 'GenerateViolations.java'" rngLn="13"/>
      </ElDescList>
    </DupViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user" locRef="4" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="82651977-7f07-30db-bd5b-8cb7e1eaebcb" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="046229bd-d5fe-3439-929f-6f85a7c638f4" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user" locRef="4" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="24914ac8-69ef-30ca-b10b-ba1bac9b83d0" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4cd337a5-f1b7-3eaf-8ee1-f5eeefa8a8ff" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user" locRef="4" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="0ea0441f-86ef-3176-bd13-0b124e390803" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8122202d-5f9c-30e9-a90d-6e5394f1866f" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user" locRef="4" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="37f579e8-b7f3-38a7-b8d6-8de617d59c8f" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c82b0bf0-046c-352a-a9c0-b366260e0827" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user" locRef="4" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="81130c45-a4d7-3f5c-afa4-03b8159294d9" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6449613b-e845-336d-bae1-32cf28cdc54f" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user" locRef="4" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="b7bd25ca-bcf0-37fb-a45d-973c19c85449" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9f280487-8e09-3581-be81-3d537ce44b30" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user" locRef="4" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="487f6c79-37f1-30a8-81fe-3b97859d2796" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d5fa905b-1e67-3de4-b5d8-23c6e6b1dae4" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="2" auth="user" locRef="4" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="41f8dc62-99da-3a17-a615-54529f09cf9a" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dd69ab94-4ad6-3051-8978-20e096d40142" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="10" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user" locRef="4" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="344e5ff9-5088-3e64-b8df-bddf1c461d06" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="869178e8-f1d0-354d-9c6c-c384f2c459a5" locEndPos="18" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user" locRef="4" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="3b3dd57a-6e9f-3afc-86c8-d97f07de5264" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff2081ab-d22b-3d6a-9fbc-4283d8568db4" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user" locRef="4" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="d2da73a0-486c-33ac-8773-ab0b82a2f6d3" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6dc4c915-45f6-3d26-a7f5-0b8e90bbf074" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user" locRef="4" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="d4f6bb3f-d0d9-3f67-9c61-18b592b4f437" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fb03d5f4-4913-3c9d-8b62-b7528cc846c7" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user" locRef="4" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="8de125b8-af34-32d1-83a0-c50f1a0e498b" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="71040b96-da83-3e13-bfb3-1a244e7eb752" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user" locRef="4" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="f405b4d4-1aef-33da-a8b3-139968f910cd" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6b803a1d-8dc9-3b8a-8a43-d1254dcbea55" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user" locRef="4" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="12a135b3-6f26-349d-801c-ff7384aec527" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6f2a9905-85a3-3d53-b4fb-2205123cc91a" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user" locRef="4" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="13a46c3a-cc7f-309c-b92d-13e4d6290dd7" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8c18689b-8fc9-3ed0-8021-0592e75344fb" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="2" auth="user" locRef="4" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="c7f9f9de-0186-3cc4-ba95-3200dee8a573" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4d8046fa-9e52-314f-b485-702c4bd0b61e" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="11" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user" locRef="4" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="1e00f027-cb8d-3e92-a1df-fc8a17b04089" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="05066668-87e0-35a6-993f-758b087d4a5f" locEndPos="18" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user" locRef="4" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="884ad368-c3b0-3cff-b48f-37b2e374ad92" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e656104f-5075-348f-bd8e-9de48ebf73f4" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user" locRef="4" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="9a5a206e-b981-3771-9f97-601af498b802" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f2c6ce54-18f7-3f05-ba56-dcea7bc725f7" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user" locRef="4" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="157f8136-8e2a-3d83-afda-4b4f0ecefd93" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="36c00314-f9b7-39ab-b269-21bdccb1ce07" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user" locRef="4" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="20f01d02-d1bf-3f2e-8ba8-0677187d4ea4" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="67703d9b-01c1-356f-88d0-3c0b7d297d06" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user" locRef="4" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="fdf6aa9c-85a3-3601-ae93-15d228689844" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b0a0261c-206d-3ac2-90fe-01795ee363fd" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user" locRef="4" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="b1b5c407-6282-3ebf-8d30-1289ff754e04" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c11b1736-04aa-3b3b-a28b-d26f743fdd91" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user" locRef="4" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="5e2f5e61-0a9c-37c1-87fe-a73f5112f805" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3b3aa144-348d-3e52-988f-f232cfaef84d" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="2" auth="user" locRef="4" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="04f892d5-b809-33e8-a444-683fbffd98db" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d5fc750d-3508-3df5-9f07-d10e2d8bb538" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user" locRef="4" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="ef877cb0-f024-3f32-bca3-29fce9cfb7bf" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="04eddf5e-c3f8-327f-8e74-2b99c1cc9c01" locEndPos="18" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user" locRef="4" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="ae9f9a45-660b-371c-868a-6f1d3cd30427" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9d2eef41-e5e0-3beb-afc2-60868352d0be" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user" locRef="4" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="aaa0e972-de59-37fa-885c-c55d4fa48b05" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7f1868aa-19a6-336f-aaac-b47e35e0c6a0" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user" locRef="4" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="98d2fd6a-7f33-34c4-8bea-231a363f8119" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="046bc18c-a52e-36bd-b75f-656d6c0e8eb0" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user" locRef="4" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="6add30fd-173b-38bb-82e9-271e04730afd" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="053ceb61-7365-397d-a2e1-28a4223b3ef8" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user" locRef="4" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="1145c55d-591d-391b-a4df-94c11500f373" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="039431d1-fd54-35f8-a0e9-1fc6ae0e2cad" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user" locRef="4" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="dd458324-fbb2-38b1-97f1-f32f5cfaed0c" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="925d76af-ef7c-3ec9-ae28-6fdcc944954e" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user" locRef="4" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="0cada231-5b42-355a-8ee4-600fcdf22273" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3fa9b070-19c8-3047-9c34-fca0a240adf7" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="2" auth="user" locRef="4" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="e7ac7d51-9f1c-39a1-8596-7ab3545f7800" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="585f5a76-784a-3559-8f53-bba6642ca2f5" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user" locRef="4" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="c7d6f575-7d49-392e-aad8-46ef3eb4104f" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5152dfc6-7e31-3fbd-bf5e-16caaa9ff98f" locEndPos="18" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="1" sev="3" auth="user" locRef="5" rule="APSC_DV.003215.MCH" lnHash="1424907812" pkg="com.parasoft.interfaces" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1424907812" unbViolId="7aac6a27-fd6b-3905-bdf5-abee3e65445f" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b33d21fe-9599-3730-a5f2-2f757fdd6597" locEndPos="32" locType="sr" hash="-1706285489" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="1" sev="2" auth="user" locRef="5" rule="FORMAT.MCH" lnHash="1424907812" pkg="com.parasoft.interfaces" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1424907812" unbViolId="655b4138-dc4d-39a5-bb2f-6bc16eb37b36" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="21c8de3d-e546-3b86-bf9c-f831bf77700b" locEndPos="32" locType="sr" hash="-1706285489" locEndLn="1" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="3" sev="3" auth="user" locRef="5" rule="FORMAT.BLCD" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1541850938" unbViolId="6709082f-e493-3afd-a49d-ea9820cfa041" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="14b17df0-1e93-3cb1-a713-de4964e4e8cf" locEndPos="2" locType="sr" hash="-1706285489" locEndLn="3" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="3" sev="3" auth="user" locRef="5" rule="APSC_DV.003215.BLCD" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1541850938" unbViolId="6bfc874d-f5a8-316f-901f-be4a4ab43a6b" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6c928970-71c6-3735-aa8c-85faed545ffa" locEndPos="2" locType="sr" hash="-1706285489" locEndLn="3" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="3" sev="5" auth="user" locRef="5" rule="SECURITY.WSC.MCNC" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1541850938" unbViolId="40dd174d-9474-3f1f-b2cc-badd5e3809a7" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5ff1609d-e36c-3052-99a3-7b808b75b707" locEndPos="27" locType="sr" hash="-1706285489" locEndLn="3" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="3" sev="2" auth="user" locRef="5" rule="CERT.OBJ07.MCNC" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1541850938" unbViolId="8f87332b-413d-3603-99e8-8cbdfe9da9ef" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d9ceab7d-e571-3725-8b6d-b2c0a7d2f884" locEndPos="27" locType="sr" hash="-1706285489" locEndLn="3" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'IConvertor'" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="3" sev="3" auth="user" locRef="5" rule="JAVADOC.PJDC" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1541850938" unbViolId="3ae4c45b-4291-3890-87ca-0e42ff22876d" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="83ef68a9-b2f5-345d-bf4f-8e15bcd9e3b3" locEndPos="27" locType="sr" hash="-1706285489" locEndLn="3" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="3" sev="5" auth="user" locRef="5" rule="SECURITY.WSC.SER" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1541850938" unbViolId="e7d08c00-9d2d-3d68-b4c9-4a2bc9368030" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba7cb69c-f2c1-35e2-85e1-a50ba892dd9c" locEndPos="27" locType="sr" hash="-1706285489" locEndLn="3" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="3" sev="5" auth="user" locRef="5" rule="CWE.499.SER" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1541850938" unbViolId="6b65358e-d4a9-3a59-999b-3929a18388c4" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9c475995-27ee-3bf3-8964-51669a03a01c" locEndPos="27" locType="sr" hash="-1706285489" locEndLn="3" goals="0,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="3" sev="3" auth="user" locRef="5" rule="METRICS.PJDC" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="-1541850938" unbViolId="05f0e4a8-e78a-3ba6-93bf-d2bb3c3f437e" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="cfe8b478-f922-34b2-98be-b2f8b6bc589f" locEndPos="27" locType="sr" hash="-1706285489" locEndLn="3" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="4" sev="3" auth="user" locRef="5" rule="FORMAT.U2BL" lnHash="-466599936" pkg="com.parasoft.interfaces" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-466599936" unbViolId="f161979c-d2de-31ee-a163-a7510151fd3b" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="80b477c1-f2bc-35ad-b28e-775b74f2b175" locEndPos="18" locType="sr" hash="-1706285489" locEndLn="4" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="4" sev="3" auth="user" locRef="5" rule="APSC_DV.003215.U2BL" lnHash="-466599936" pkg="com.parasoft.interfaces" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-466599936" unbViolId="afdbf373-454e-3eeb-ad9e-fb8511c9c528" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="23833eec-9a11-3c91-b1e1-6302b13aa724" locEndPos="18" locType="sr" hash="-1706285489" locEndLn="4" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="4" sev="3" auth="user" locRef="5" rule="METRIC.CC" lnHash="-466599936" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-466599936" unbViolId="28ff3bc6-e7b3-3fca-a2a7-8be43b5b9e2b" locStartPos="5" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="23dc9df7-807f-3fed-9bdc-1b306a47d593" locType="sr" locEndPos="18" hash="-1706285489" locEndLn="4" goals="0,"/>
    <StdViol msg="The method 'name' does not have a Javadoc comment describing whether or not the method can return null" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="4" sev="3" auth="user" locRef="5" rule="JAVADOC.CRN" lnHash="-466599936" pkg="com.parasoft.interfaces" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="-466599936" unbViolId="d22e6189-6aa9-382f-a7f5-f330df430cbc" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e91fc502-d057-3dc6-8cd7-c90aee7ec7e4" locEndPos="15" locType="sr" hash="-1706285489" locEndLn="4" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'name()'" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="4" sev="3" auth="user" locRef="5" rule="JAVADOC.PJDM" lnHash="-466599936" pkg="com.parasoft.interfaces" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-466599936" unbViolId="8e588eb1-3a69-306f-88e8-81b3d62979cb" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5ff924b1-5745-3e34-939b-af284887c8d5" locEndPos="15" locType="sr" hash="-1706285489" locEndLn="4" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="1" sev="3" auth="user" locRef="6" rule="APSC_DV.003215.MCH" lnHash="1222468992" pkg="com.parasoft.interfaces2" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1222468992" unbViolId="7a8c4139-cfd1-3c14-81be-4cbb72c5f59e" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1734db2e-0a1a-397b-83dd-70b99e043dc7" locEndPos="33" locType="sr" urgent="true" hash="1200206342" locEndLn="1" goals="1,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="1" sev="2" auth="user" locRef="6" rule="FORMAT.MCH" lnHash="1222468992" pkg="com.parasoft.interfaces2" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1222468992" unbViolId="f1548e5e-2cf4-3874-b242-4b3096236844" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dec8a110-4a18-3a0d-b9cc-7b0c5b7eee79" locEndPos="33" locType="sr" urgent="true" hash="1200206342" locEndLn="1" goals="1,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="3" sev="3" auth="user" locRef="6" rule="FORMAT.BLCD" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-244542872" unbViolId="5f7134d6-2ce4-362a-9126-93eff00777e2" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e5f8d46-d869-3141-9dc2-f61df8219f8d" locEndPos="2" locType="sr" urgent="true" hash="1200206342" locEndLn="3" goals="1,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="3" sev="3" auth="user" locRef="6" rule="APSC_DV.003215.BLCD" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-244542872" unbViolId="7d01ce9c-134c-36a0-a06a-cfde4ad428eb" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4d81a3b2-31fd-3de4-91ed-e8c023a93b40" locEndPos="2" locType="sr" urgent="true" hash="1200206342" locEndLn="3" goals="1,"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="3" sev="5" auth="user" locRef="6" rule="SECURITY.WSC.MCNC" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-244542872" unbViolId="8208a55b-b5bc-3843-9b1c-e3b7616bfbd1" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b7610fe3-86c4-3fd4-8cb8-bfb8b6975522" locEndPos="28" locType="sr" urgent="true" hash="1200206342" locEndLn="3" goals="1,"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="3" sev="2" auth="user" locRef="6" rule="CERT.OBJ07.MCNC" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-244542872" unbViolId="66d6fcd4-c0ec-3247-b66b-811a0a096682" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d2f51bcc-08de-350e-a325-5e68e034541a" locEndPos="28" locType="sr" urgent="true" hash="1200206342" locEndLn="3" goals="1,"/>
    <StdViol msg="Missing Javadoc comment for 'ICalculator'" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="3" sev="3" auth="user" locRef="6" rule="JAVADOC.PJDC" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-244542872" unbViolId="7a0e9a55-5a8b-362e-8f18-5cee01dd2498" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="68141b89-0646-3eaf-9943-575289bd2aee" locEndPos="28" locType="sr" urgent="true" hash="1200206342" locEndLn="3" goals="1,"/>
    <StdViol msg="'writeObject()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="3" sev="5" auth="user" locRef="6" rule="SECURITY.WSC.SER" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-244542872" unbViolId="826bcfe7-ed30-34c1-a8d5-6ceabceb4f6c" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1d96f080-8b9c-3a72-849b-4a4f47a4a223" locEndPos="28" locType="sr" urgent="true" hash="1200206342" locEndLn="3" goals="1,"/>
    <StdViol msg="'writeObject()' method is missing" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="3" sev="5" auth="user" locRef="6" rule="CWE.499.SER" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-244542872" unbViolId="0b1ea420-892a-320e-b479-dbf423dce629" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="853afa8e-f6d6-381d-8619-d7f102db3d16" locEndPos="28" locType="sr" urgent="true" hash="1200206342" locEndLn="3" goals="1,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="3" sev="3" auth="user" locRef="6" rule="METRICS.PJDC" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="-244542872" unbViolId="4915e7e9-c6f8-3625-99bd-860a732a64cb" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="750ff400-331a-3922-aa5c-996c7be67ba8" locEndPos="28" locType="sr" hash="1200206342" locEndLn="3" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="3" auth="user" locRef="6" rule="FORMAT.U2BL" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1576147249" unbViolId="1255d76b-26a4-39ef-bf1d-da9b97931332" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ea4664d8-4164-345e-8d09-a2739d7802c5" locEndPos="37" locType="sr" urgent="true" hash="1200206342" locEndLn="4" goals="1,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="3" auth="user" locRef="6" rule="APSC_DV.003215.U2BL" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1576147249" unbViolId="54f7d028-fb96-316b-8886-e1b2b54278d1" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4ab4d4cd-021f-3cf4-99f3-80860eb96991" locEndPos="37" locType="sr" urgent="true" hash="1200206342" locEndLn="4" goals="1,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="3" auth="user" locRef="6" rule="METRIC.CC" lnHash="-1576147249" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-1576147249" unbViolId="0911f019-3b7d-3019-9338-208fce18b89d" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="8ef39451-846a-330e-956e-a1fd8308c336" locType="sr" locEndPos="0" hash="1200206342" locEndLn="5" goals="0,"/>
    <StdViol msg="Indentation should be 0 spaces" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="3" auth="user" locRef="6" rule="FORMAT.IND" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Enforce number of space(s) for indentation" tool="jtest" lineHash="-1576147249" unbViolId="7d5b14a8-f204-36d6-876c-075ed7ee4ad3" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="64b6a3da-ef7e-3745-b921-8c47a558d938" locEndPos="37" locType="sr" urgent="true" hash="1200206342" locEndLn="4" goals="1,"/>
    <StdViol msg="Indentation should be 0 spaces" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="3" auth="user" locRef="6" rule="APSC_DV.003215.IND" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Enforce number of space(s) for indentation" tool="jtest" lineHash="-1576147249" unbViolId="47d42019-3985-3563-9c21-24c5e6bdc56c" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9187e9e7-7002-3595-98d4-12b978373df4" locEndPos="37" locType="sr" urgent="true" hash="1200206342" locEndLn="4" goals="1,"/>
    <StdViol msg="Missing Javadoc comment for method 'minus()'" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="3" auth="user" locRef="6" rule="JAVADOC.PJDM" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1576147249" unbViolId="4ce41405-60b2-390b-9b29-51fe60e63558" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="61ad1988-694e-38f0-8461-f0d04e193c95" locEndPos="21" locType="sr" urgent="true" hash="1200206342" locEndLn="4" goals="1,"/>
    <StdViol msg="The length of the identifier &quot;a&quot; is less than the minimum length (2)" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="4" auth="user" locRef="6" rule="NAMING.LLI" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="-1576147249" unbViolId="e8a27025-b4e5-3e18-8744-8d8f947c4354" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="11c2f329-ec37-3dc6-b22a-716ab72690a1" locEndPos="27" locType="sr" urgent="true" hash="1200206342" locEndLn="4" goals="1,"/>
    <StdViol msg="Variable 'a' does not end with 'int'" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="4" auth="user" locRef="6" rule="NAMING.UHN" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-1576147249" unbViolId="4cb5ccd8-03b2-3fd5-bbfb-a49ef5d4f6be" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="db0d5ca2-ad4f-316e-af96-96e5edcbee7c" locEndPos="27" locType="sr" urgent="true" hash="1200206342" locEndLn="4" goals="1,"/>
    <StdViol msg="The length of the identifier &quot;b&quot; is less than the minimum length (2)" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="4" auth="user" locRef="6" rule="NAMING.LLI" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="-1576147249" unbViolId="3679549b-b25a-37cc-b334-62712a3de7ea" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="593ec7db-b9ac-3e69-b870-f2a0cec36c3e" locEndPos="34" locType="sr" urgent="true" hash="1200206342" locEndLn="4" goals="1,"/>
    <StdViol msg="Variable 'b' does not end with 'int'" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="4" auth="user" locRef="6" rule="NAMING.UHN" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-1576147249" unbViolId="6ab63d22-0388-3444-87ea-7eca4e14100e" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6a3fb791-8e99-3564-bd70-5ef38e97909a" locEndPos="34" locType="sr" urgent="true" hash="1200206342" locEndLn="4" goals="1,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="1" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.MCH" lnHash="1221461159" pkg="com.parasoft.nested" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1221461159" unbViolId="b0915a1f-1fd5-31bf-9777-9aa3162e6f66" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="36d693bc-c1df-3d1b-a851-458014467df0" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="1" sev="2" auth="user" locRef="7" rule="FORMAT.MCH" lnHash="1221461159" pkg="com.parasoft.nested" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1221461159" unbViolId="b34063b3-a1a3-315b-8180-668f17ff6b23" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e7d7fd53-bd75-367e-8e29-92e755e5f0b9" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="1" goals="0,"/>
    <StdViol msg="This static import should be eliminated" ln="3" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="3" sev="3" auth="user" locRef="7" rule="CODSTA.READ.ASIS" lnHash="-882382877" pkg="com.parasoft.nested" rule.header="Avoid static import statements" tool="jtest" lineHash="-882382877" unbViolId="d4a0aa6e-1842-3289-bbf5-71a16d3777be" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="534b210b-42bf-3ff0-9559-f5caba1f9496" locEndPos="59" locType="sr" hash="-1917579824" locEndLn="3" goals="0,"/>
    <StdViol msg="This static import should be eliminated" ln="4" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="4" sev="3" auth="user" locRef="7" rule="CODSTA.READ.ASIS" lnHash="1898483036" pkg="com.parasoft.nested" rule.header="Avoid static import statements" tool="jtest" lineHash="1898483036" unbViolId="fb446843-ccaa-33a2-aca2-18b3248bb79d" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5d0287bb-78ba-3c30-9bd8-72f6c5ab7ae3" locEndPos="61" locType="sr" hash="-1917579824" locEndLn="4" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="3" auth="user" locRef="7" rule="FORMAT.BLCD" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-784183754" unbViolId="1ab614b1-b60f-38af-bc52-7f537de20e33" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cf8e7bb5-5359-3931-beb8-81184cf6563b" locEndPos="2" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.BLCD" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-784183754" unbViolId="d2b39127-6b61-313a-93ec-a5f72d35b06e" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f22a9ea4-f75f-3171-a34a-9908630c63cd" locEndPos="2" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user" locRef="7" rule="SECURITY.WSC.MCNC" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-784183754" unbViolId="e03674c5-6974-3335-8f22-ba067ff43532" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2c174056-2433-3518-8635-eba92748879b" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="2" auth="user" locRef="7" rule="CERT.OBJ07.MCNC" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-784183754" unbViolId="d16406a7-900c-37b6-86c0-186f12b165ce" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ddf22bef-4743-325f-8c1c-90f66344a975" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'PhoneFactory'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDC" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-784183754" unbViolId="138556d2-fbe5-34e0-9f60-76ae7bf92029" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2a3c5a94-3d2c-3f5b-9dcc-21877591e3fb" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.nested.PhoneFactory" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="4" auth="user" locRef="7" rule="GLOBAL.UPPC" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="-784183754" unbViolId="62ec902c-024a-3440-865e-5df99ab5545f" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1722f5c7-53a7-30cd-b5ec-1b8cd159f3fc" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="4" auth="user" locRef="7" rule="SECURITY.WSC.FIMU" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make immutable classes final" tool="jtest" lineHash="-784183754" unbViolId="74bedf1a-033f-3608-84fc-bf97a4f50fd0" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="00789c1e-7626-3e5a-b33a-a98a4c35145d" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user" locRef="7" rule="SECURITY.WSC.SER" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-784183754" unbViolId="450c3ac8-a39b-3d67-be70-ae522caac75f" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b8c075b6-9792-38f7-ab85-fa02e8a5f41a" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user" locRef="7" rule="CWE.499.SER" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-784183754" unbViolId="8e17b9c1-a3fc-317b-93fe-2fcb91e9ee69" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6841a0bd-9d2f-395a-a595-f74ae753acdc" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: PhoneFactory" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user" locRef="7" rule="CODSTA.POD.DCTOR" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="-784183754" unbViolId="820db928-6cd4-35c9-8c27-98de158b1f0a" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="61d66c0c-2971-3d2c-85ed-82999194a263" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="3" auth="user" locRef="7" rule="METRICS.PJDC" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="-784183754" unbViolId="646d1a7d-bae4-3eda-ba02-ae2d216943a0" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="dd9034a5-54a2-37ba-88fb-98b35a3a6efd" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="6" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user" locRef="7" rule="SECURITY.WSC.DSER" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-784183754" unbViolId="cd7b3967-f1db-3443-a5b8-2bdda1617312" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="4bbd6066-3580-3027-96b2-cd86ede9b8ba" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="3" auth="user" locRef="7" rule="METRIC.CC" lnHash="30623970" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="30623970" unbViolId="596418f0-a6f3-3be0-b80e-224ebba171bc" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="fddaf052-366f-360e-a4c3-89859273743a" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="9" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'getIphone4()'" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="2" auth="user" locRef="7" rule="JUNIT.TEST" lnHash="30623970" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="30623970" unbViolId="b7a66052-a9b7-3d5a-900f-57fb7570ed49" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ea623249-d94d-3d72-830d-3b623801c5f7" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="8" goals="0,"/>
    <StdViol msg="The method 'getIphone4' does not have a Javadoc comment describing whether or not the method can return null" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="3" auth="user" locRef="7" rule="JAVADOC.CRN" lnHash="30623970" pkg="com.parasoft.nested" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="30623970" unbViolId="080137fe-3414-3b42-bfd5-753f1f38df30" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="87c804f8-c5b6-351f-b67e-1fe724bdb072" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="8" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'getIphone4()'" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDM" lnHash="30623970" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="30623970" unbViolId="503200c8-bf22-3a75-8783-bb3d42ec4879" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="25014a9d-095b-3a08-8568-0ffc22b0be7e" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="8" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: getIphone4()" ln="8" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="4" auth="user" locRef="7" rule="GLOBAL.UPPM" lnHash="30623970" pkg="com.parasoft.nested" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="30623970" unbViolId="213b96de-210b-391e-bd32-61bd7534cd58" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f61979ac-7903-383b-a93a-8d4413b8df78" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="8" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;iphone4&quot;" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="9" sev="3" auth="user" locRef="7" rule="INTER.ITT" lnHash="-528728787" pkg="com.parasoft.nested" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="-528728787" unbViolId="236d0267-f594-3e5a-943f-f281e550966f" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9c03dddc-e10a-3071-8c17-c0c477967d67" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="9" goals="0,"/>
    <StdViol msg="The String literal &quot;iphone4&quot; is used" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="9" sev="3" auth="user" locRef="7" rule="SECURITY.WSC.SL" lnHash="-528728787" pkg="com.parasoft.nested" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="-528728787" unbViolId="bf4df445-ceaf-3ca1-afe9-4f333ab27903" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="ca155895-498e-3fe6-b380-68daed55de71" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="9" goals="0,"/>
    <StdViol msg="Misspelled word 'iphone'" ln="9" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="9" sev="3" auth="user" locRef="7" rule="JAVADOC.SPELL" lnHash="-528728787" pkg="com.parasoft.nested" rule.header="Avoid misspelling words in Javadoc comments and string literals" tool="jtest" lineHash="-528728787" unbViolId="e35cdbd2-7c19-316b-afcd-77d9b512e70a" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="903fced1-db59-32a0-938d-1c9b77a822a0" locEndPos="32" locType="sr" hash="-1917579824" locEndLn="9" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user" locRef="7" rule="FORMAT.BLCD" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1345140166" unbViolId="44f5ae7f-04bd-3d57-9f3b-8c1fd2cd2b94" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="de30ad72-130f-3ddf-963b-12c7a1cd8399" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.BLCD" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1345140166" unbViolId="8f4aa31c-cc17-3bc8-8345-00a4caf761be" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9fb2de44-c250-3fab-84bd-e6c0bf01b956" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Elements in 'PhoneFactory' not ordered appropriately, first violation: member enum declaration 'Brand' at line 12 should be placed before method 'getIphone4' at line 8" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user" locRef="7" rule="CODSTA.ORG.FO" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Order class elements appropriately" tool="jtest" lineHash="-1345140166" unbViolId="e77707ea-2781-350b-bef5-f67a53d6278f" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="838a984c-c19e-3dc4-9e2e-1c2b4d463143" locEndPos="21" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Brand'" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDC" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1345140166" unbViolId="f883ee6f-eabc-3300-beba-b2c269073f14" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="55bd6890-75fa-3a9e-aa2c-c1cbd1a7d72b" locEndPos="21" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Enum 'com.parasoft.nested.PhoneFactory.Brand' should be declared &quot;private&quot;" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="4" auth="user" locRef="7" rule="GLOBAL.DPPC" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="-1345140166" unbViolId="569ed9a6-0a93-3efb-a291-277a1aec7ec8" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="333188d5-d2d1-3188-bfe4-909837400b56" locEndPos="21" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="'Brand' is an expensive enum declaration" ln="12" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user" locRef="7" rule="MOBILE.ENUM" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Avoid using enums" tool="jtest" lineHash="-1345140166" unbViolId="db076bed-17e4-3463-bca0-9b769ae2e020" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="b5a5d3d8-2b52-3676-b2d5-4f772fe8eca8" locEndPos="21" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Use 1 blank line before every enum constant declaration (or corresponding Javadoc)" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="13" sev="3" auth="user" locRef="7" rule="FORMAT.U2BL" lnHash="1992071219" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1992071219" unbViolId="75472053-eccd-31cc-adc8-ba2095989318" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d11292a8-ed16-3e6f-be06-4216fed46217" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 1 blank line before every enum constant declaration (or corresponding Javadoc)" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="13" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.U2BL" lnHash="1992071219" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1992071219" unbViolId="28a48ce5-9a27-358f-afd4-0a4137356562" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0cc160fb-0ffc-3934-b3ea-10547fd6e591" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="13" sev="3" auth="user" locRef="7" rule="FORMAT.U2BL" lnHash="1992071219" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1992071219" unbViolId="c4efd77e-ea89-3849-ba30-b437d4a6ccdb" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="aa8d12f0-dc49-3258-a962-259dc592e4c8" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="13" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="13" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.U2BL" lnHash="1992071219" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1992071219" unbViolId="7461d515-8b8b-31b1-8bed-d904636e6cae" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="15457756-db6a-3353-8fb7-360335c146b3" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="16" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="3" auth="user" locRef="7" rule="FORMAT.BLCD" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1094278703" unbViolId="1d28ca3e-6164-372a-9c43-fe8d38ef56bb" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="124c433e-a4bd-317f-8b42-48e1c4248b1c" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="16" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.BLCD" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1094278703" unbViolId="e4e3c3a7-4d93-361a-9d03-381f539fa6e8" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="54dff314-1176-3d04-9e3c-a04d6032cd88" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="16" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="5" auth="user" locRef="7" rule="SECURITY.WSC.MCNC" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1094278703" unbViolId="d5c18cba-fb8b-3471-98ed-d51c3ac8e8d6" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="02b46cd8-f807-34aa-9118-55e68d6d1db5" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="16" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="2" auth="user" locRef="7" rule="CERT.OBJ07.MCNC" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1094278703" unbViolId="b8ff4246-3fa4-3c1f-9fd3-13f2b8812a02" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ed77bca6-b485-39de-b558-39adc9d1789c" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Callable'" ln="16" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDC" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1094278703" unbViolId="eaa68a81-dc01-3631-8474-ac64843a2dc8" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a8d34504-cc1e-3f99-b6b0-ad70d34de558" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="Interface 'com.parasoft.nested.PhoneFactory.Callable' should be declared &quot;package-private&quot;" ln="16" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="4" auth="user" locRef="7" rule="GLOBAL.DPPC" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="-1094278703" unbViolId="5e484445-5f22-31ea-9f5b-d0ccdfd5599e" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e7d967da-e59b-34bc-8595-bb6fb0a693e4" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="16" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="5" auth="user" locRef="7" rule="SECURITY.WSC.SER" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1094278703" unbViolId="5b7caabc-e7f0-3f50-a004-f16f1ac5826e" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4f2ab045-05b0-370c-9186-89389d242c2c" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="16" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="5" auth="user" locRef="7" rule="CWE.499.SER" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1094278703" unbViolId="6cf25dfc-c05f-39b1-a842-46e8272da684" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="21e525b6-ce37-3bc1-ade3-18414433e7b3" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="16" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="3" auth="user" locRef="7" rule="METRICS.PJDC" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="-1094278703" unbViolId="54e14ee2-0317-3d9d-ab4c-446bd8afd1a0" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="a7b94e11-bfb0-3904-9555-a67ddd2f623b" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="17" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user" locRef="7" rule="FORMAT.U2BL" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-510057877" unbViolId="5bb24001-9394-398d-bc19-96f15d9592eb" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e65f490b-0c3f-3840-a8a2-f9f59142cdbb" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="17" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.U2BL" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-510057877" unbViolId="3e73b478-ce7b-350a-9052-15852d722787" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e027405e-2b9c-3408-8c81-876bebda5803" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Indentation should be 8 spaces" ln="17" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user" locRef="7" rule="FORMAT.IND" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Enforce number of space(s) for indentation" tool="jtest" lineHash="-510057877" unbViolId="93e2e661-fee8-327d-ae8c-a98bd719cb1c" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7597c958-aca4-3a2c-96ea-b790f74f36e1" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Indentation should be 8 spaces" ln="17" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.IND" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Enforce number of space(s) for indentation" tool="jtest" lineHash="-510057877" unbViolId="dc7ab4b0-fd8a-363f-9540-3ee5515eb7d2" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="804ddaa3-fdfb-394a-9b1a-71abcdf78cb0" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="17" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user" locRef="7" rule="METRIC.CC" lnHash="-510057877" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-510057877" unbViolId="0caf0c3b-9caf-3447-b87b-c4793619efb0" locStartPos="8" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="f62121d1-42ea-3fae-8974-d40d095381ae" locType="sr" locEndPos="22" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'call911()'" ln="17" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDM" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-510057877" unbViolId="f776e511-c72d-3203-8dc3-b11048824ebe" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="655fa2ad-a6ef-3b40-b1bb-cf42504d4865" locEndPos="19" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user" locRef="7" rule="FORMAT.BLCD" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="1952858190" unbViolId="9f8b13bb-fed2-376e-bc4d-c24d0c3ee714" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cfd64f9f-69c0-3724-9655-a56dfd8bde28" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.BLCD" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="1952858190" unbViolId="974e3a70-5a89-390d-85d9-16ad58f9cd03" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="82a92262-cd0c-32b3-8d70-4cc645064a6e" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user" locRef="7" rule="SECURITY.WSC.MCNC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="1952858190" unbViolId="3f0eafee-b6d5-3672-9a7a-15c68de4531c" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b6388789-aec7-3d08-aaf4-81dbe1e91fc2" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="2" auth="user" locRef="7" rule="CERT.OBJ07.MCNC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="1952858190" unbViolId="ec9bf78e-87ec-3fe2-8b47-686ff97f15a2" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2c01e579-6843-3080-aa57-817f2c2652ed" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Phone has multiple constructors and should use chain constructors" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user" locRef="7" rule="CODSTA.POD.CHAIN" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Use chain constructors in classes with multiple constructors" tool="jtest" lineHash="1952858190" unbViolId="ec693a0d-b60b-3ddd-8d33-3e0e53f2002a" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0ad5cd46-5c0f-3fef-9c53-3166def2e954" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="getter method without an @invariant contract: getName()" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user" locRef="7" rule="DBC.IGM" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Provide an '@invariant' contract for all getter methods" tool="jtest" lineHash="1952858190" unbViolId="ec77031c-3e17-34e6-b7a4-dc01aa067e4b" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c6d0bce7-047c-3983-92a3-4693cb4dad02" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="getter method without an @invariant contract: getBrand()" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user" locRef="7" rule="DBC.IGM" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Provide an '@invariant' contract for all getter methods" tool="jtest" lineHash="1952858190" unbViolId="1a20265f-6d8a-3211-a765-fe1343017824" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3344e726-6188-38d0-8eba-2156f44507cc" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Phone'" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="1952858190" unbViolId="2f424825-b6cc-3f26-95e1-df5464dd72fe" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="654e90be-5678-3f39-b25f-45a69291449e" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Class 'com.parasoft.nested.PhoneFactory.Phone' should be declared &quot;private&quot;" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="4" auth="user" locRef="7" rule="GLOBAL.DPPC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="1952858190" unbViolId="25b1627f-67dd-3c8c-a995-5d3688f2fd9e" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="024fd084-0547-3934-b349-bca4f9230e8e" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="4" auth="user" locRef="7" rule="SECURITY.WSC.FIMU" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make immutable classes final" tool="jtest" lineHash="1952858190" unbViolId="4c130a97-ac95-3378-ac03-ee61d7929034" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="69434136-3b93-32c7-bd62-815fd98e5b92" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user" locRef="7" rule="SECURITY.WSC.SER" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="1952858190" unbViolId="169d8a29-4803-3b2f-9f8d-1197ebeda4c3" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="41924ec0-0463-3bd4-b4a6-7c4ddc201860" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user" locRef="7" rule="CWE.499.SER" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="1952858190" unbViolId="02846883-afa5-3061-aaa6-7ae8fed21b68" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e9b057e6-85c3-3513-8980-2ebf5e6ff35b" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Class 'com.parasoft.nested.PhoneFactory.Phone' should be declared &quot;final&quot;" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user" locRef="7" rule="GLOBAL.SPPC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Declare a &quot;public/protected&quot; &quot;class&quot; &quot;final&quot; if it is not subclassed" tool="jtest" lineHash="1952858190" unbViolId="455a87b1-404f-3f1a-8be0-daea21fe25ae" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ebc29953-a482-3d7b-bdd5-c499a50a44bc" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Number of Javadoc comments are below thresholds (%): 0.0" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user" locRef="7" rule="METRICS.PJDC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="DEPRECATED: Percentage of Javadoc comments (%)" tool="jtest" lineHash="1952858190" unbViolId="766c5cb0-e61f-3bc8-8e6f-8420331d9968" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="1a19e6c8-306c-320e-8b1f-333d564fbcc0" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Inner class 'Phone' should be avoided" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user" locRef="7" rule="SECURITY.WSC.AUIC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Do not use inner classes" tool="jtest" lineHash="1952858190" unbViolId="019649e0-13de-310b-b2da-4cbd2221089f" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="ebcfcb60-7ca6-3315-aa4e-25f940951bbf" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user" locRef="7" rule="SECURITY.WSC.DSER" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="1952858190" unbViolId="ea2fa655-07ca-36ea-875a-b6c939ed5e14" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="573d8fe7-9ccd-3867-a4ba-a60cf8d53232" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="interface type 'Callable' is used" ln="20" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user" locRef="7" rule="MOBILE.AUI" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="1952858190" unbViolId="6d947054-ba27-39b5-907f-d54e38699bb4" locStartPos="41" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7a0f8e9f-c5dd-37df-9214-59163070b309" locEndPos="49" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="21" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="21" sev="3" auth="user" locRef="7" rule="FORMAT.U2BL" lnHash="-1102211618" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1102211618" unbViolId="aad2d722-6ed5-3ea6-abc8-6987f1c65a89" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8e12af33-91a3-3d96-b701-670c341bc48f" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="21" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="21" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="21" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.U2BL" lnHash="-1102211618" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1102211618" unbViolId="b590d428-85fb-3f24-8342-edbd58a577f4" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5a440d15-8223-3fd4-8791-e7242b8f6b5f" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="21" goals="0,"/>
    <StdViol msg="Missing 'setName()' method for field 'name'" ln="21" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="21" sev="4" auth="user" locRef="7" rule="BEAN.NFM" lnHash="-1102211618" pkg="com.parasoft.nested" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-1102211618" unbViolId="b9ed6e70-5d7f-33db-914e-2a28c041ead4" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c4b178ff-204a-3d6e-a72d-70091dcab942" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="21" goals="0,"/>
    <StdViol msg="The 'name' field of the immutable class is not declared final" ln="21" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="21" sev="4" auth="user" locRef="7" rule="SECURITY.WSC.FIMU" lnHash="-1102211618" pkg="com.parasoft.nested" rule.header="Make immutable classes final" tool="jtest" lineHash="-1102211618" unbViolId="788ada66-0dde-32bf-aa54-6b5b20d94f61" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b14e5eb7-b997-38a9-b4a0-74555011544f" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="21" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="22" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="22" sev="3" auth="user" locRef="7" rule="FORMAT.U2BL" lnHash="1952442346" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1952442346" unbViolId="55b60ef1-4ae2-355e-a657-3afd3ef52f9b" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f0ac1352-d278-3b8b-a784-47c926e68976" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="22" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="22" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="22" sev="3" auth="user" locRef="7" rule="APSC_DV.003215.U2BL" lnHash="1952442346" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1952442346" unbViolId="78fe57be-3554-31bf-895f-25a2dc62d0d8" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ede3d2a2-6a6e-3406-860e-6cd623cf52f5" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="22" goals="0,"/>
    <StdViol msg="Missing 'setBrand()' method for field 'brand'" ln="22" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="22" sev="4" auth="user" locRef="7" rule="BEAN.NFM" lnHash="1952442346" pkg="com.parasoft.nested" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="1952442346" unbViolId="aad8d2bc-9082-3c23-be48-4c35d4dd8e4e" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a70999c1-7ddd-35c6-a45b-7dd3b17f7d99" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="22" goals="0,"/>
    <StdViol msg="The 'brand' field of the immutable class is not declared final" ln="22" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="22" sev="4" auth="user" locRef="7" rule="SECURITY.WSC.FIMU" lnHash="1952442346" pkg="com.parasoft.nested" rule.header="Make immutable classes final" tool="jtest" lineHash="1952442346" unbViolId="7902058f-8798-3b82-9f28-125f4a18ba54" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f89245a6-f3df-399f-a13f-5a544e2acd75" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="22" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="3" auth="user" locRef="7" rule="METRIC.CC" lnHash="-771458445" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-771458445" unbViolId="49105ec9-b5bf-3449-b002-6f6a90ffdc0e" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="71fe8674-5422-3a5c-a0f0-85dfd2fb565c" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="25" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'Phone()'" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="2" auth="user" locRef="7" rule="JUNIT.TEST" lnHash="-771458445" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-771458445" unbViolId="b787d642-8182-3b12-af05-44776d69233e" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0426316b-4a51-327c-8349-868d2ac5a127" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="24" goals="0,"/>
    <StdViol msg="'public' constructor declared" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="3" auth="user" locRef="7" rule="CODSTA.BP.CMUTA" lnHash="-771458445" pkg="com.parasoft.nested" rule.header="Avoid 'public' or 'protected' constructors for immutable classes" tool="jtest" lineHash="-771458445" unbViolId="e72d47b5-3a14-3ef7-871f-cc0974a6ba3a" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="91fb544e-cc32-3813-8ba6-d1f60cdd4a6e" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="24" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'Phone()'" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDM" lnHash="-771458445" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-771458445" unbViolId="982303cb-eee9-3897-abb6-3fd3084237e7" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ed66c7b0-8f91-3c6d-8776-237c55720b04" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="24" goals="0,"/>
    <StdViol msg="Flag not present" ln="24" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="4" auth="user" locRef="7" rule="SECURITY.WSC.INIVF" lnHash="-771458445" pkg="com.parasoft.nested" rule.header="Defend against partially initialized instances of non-final classes" tool="jtest" lineHash="-771458445" unbViolId="5c6c4ef7-fcff-3dc7-803a-84d1fc743cb0" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff6f0c1c-7407-36dc-8c1c-29cd1adb2132" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="24" goals="0,"/>
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="25" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="25" sev="3" auth="user" locRef="7" rule="CODSTA.READ.UATS" lnHash="-1307574176" pkg="com.parasoft.nested" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" tool="jtest" lineHash="-1307574176" unbViolId="a59d4898-e3aa-37ac-9f3b-e33f2ef72123" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e8a374c1-9e38-3125-8d14-a30ef18dcb90" locEndPos="16" locType="sr" hash="-1917579824" locEndLn="25" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;default&quot;" ln="25" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="25" sev="3" auth="user" locRef="7" rule="INTER.ITT" lnHash="-1307574176" pkg="com.parasoft.nested" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="-1307574176" unbViolId="caf3fe55-f924-3b32-b64b-a32236ec5221" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="64615e22-059d-3fa8-b1b2-abb3a8050178" locEndPos="33" locType="sr" hash="-1917579824" locEndLn="25" goals="0,"/>
    <StdViol msg="The String literal &quot;default&quot; is used" ln="25" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="25" sev="3" auth="user" locRef="7" rule="SECURITY.WSC.SL" lnHash="-1307574176" pkg="com.parasoft.nested" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="-1307574176" unbViolId="73025017-57f4-30e4-ab05-46940eb25f56" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="5388ac93-3c7b-310b-b6e6-66dd735c9888" locEndPos="33" locType="sr" hash="-1917579824" locEndLn="25" goals="0,"/>
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="26" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="26" sev="3" auth="user" locRef="7" rule="CODSTA.READ.UATS" lnHash="1345644102" pkg="com.parasoft.nested" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" tool="jtest" lineHash="1345644102" unbViolId="85529698-0716-31fe-a8f5-5219f9edc192" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2cca19a5-f6b1-37c6-af0e-6c705d85d566" locEndPos="16" locType="sr" hash="-1917579824" locEndLn="26" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user" locRef="7" rule="METRIC.CC" lnHash="-20822861" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-20822861" unbViolId="139567f4-9a45-38da-b805-eac95c075b6d" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="56eeeaff-ecdc-3bc1-a28f-f80e2fbe4a0f" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="30" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'Phone()'" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="2" auth="user" locRef="7" rule="JUNIT.TEST" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-20822861" unbViolId="ae563c34-2147-376b-930a-a65df7654dc8" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="20c0ca32-d05d-31ec-b75d-0240bc1492a1" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="'public' constructor declared" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user" locRef="7" rule="CODSTA.BP.CMUTA" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Avoid 'public' or 'protected' constructors for immutable classes" tool="jtest" lineHash="-20822861" unbViolId="5c2079a0-1188-3031-8785-a5b77604f752" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ab5fcdc5-24b3-3d16-9676-8e5cca86b25e" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'Phone()'" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDM" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-20822861" unbViolId="260f4e8f-ac6c-3cb3-825e-2bb1c8098f18" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="20257975-38ad-3aa6-b524-fea845f57f68" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Constructor 'Phone()' should be declared &quot;private&quot;" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="4" auth="user" locRef="7" rule="GLOBAL.DPPM" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="-20822861" unbViolId="8d795e97-8792-36a3-960a-a5a3e28fc0d1" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1bf32325-6b50-3f7e-8ed2-6326fc2bb3d0" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Constructor 'Phone()' should be declared &quot;private&quot;" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="4" auth="user" locRef="7" rule="CWE.749.DPPM" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="-20822861" unbViolId="8f633164-7797-3486-8942-9ce77b0cdf82" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1368cc5e-b94b-3d82-acbe-94e580b37877" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Flag not present" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="4" auth="user" locRef="7" rule="SECURITY.WSC.INIVF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Defend against partially initialized instances of non-final classes" tool="jtest" lineHash="-20822861" unbViolId="260630ca-3da2-389c-a9a6-9c4f4704e7c2" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="14a998fe-e695-3bff-a052-5556848f7298" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Formal parameter 'name' is not declared as final" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user" locRef="7" rule="CODSTA.BP.FPF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-20822861" unbViolId="dfe3e730-d28c-3c7f-b1c6-fcaef3569c2f" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f622c29b-357d-3309-bc0d-ad7ee0231a4e" locEndPos="32" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="The parameter 'name' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user" locRef="7" rule="OOP.HIF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Do not hide fields and local variables declared in enclosing scopes" tool="jtest" lineHash="-20822861" unbViolId="5ab82697-3615-31d1-a2e8-ffee4ab0fa71" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="adffa015-672e-34f2-922e-0503e6cc72d6" locEndPos="32" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Parameter 'name' has the same name as a field" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user" locRef="7" rule="OOP.HMF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Do not give method local variables and parameters the same name as class fields" tool="jtest" lineHash="-20822861" unbViolId="b70dabbb-4bc8-3105-87c2-b87540ddbac7" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="335872ec-157f-3eab-8261-08a8262c9009" locEndPos="32" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Formal parameter 'brand' is not declared as final" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user" locRef="7" rule="CODSTA.BP.FPF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-20822861" unbViolId="b43cd15e-adcb-3f32-b34b-c89ede969591" locStartPos="40" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="03d12b13-2ee4-33fb-9f76-42843e8e420c" locEndPos="45" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="The parameter 'brand' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user" locRef="7" rule="OOP.HIF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Do not hide fields and local variables declared in enclosing scopes" tool="jtest" lineHash="-20822861" unbViolId="2577b216-24ff-3259-af88-332c870536eb" locStartPos="40" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0bc73931-ebe1-3c37-bf6b-10c84998da18" locEndPos="45" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Parameter 'brand' has the same name as a field" ln="29" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user" locRef="7" rule="OOP.HMF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Do not give method local variables and parameters the same name as class fields" tool="jtest" lineHash="-20822861" unbViolId="8cd247bf-e1bb-36a8-ba78-08bbe0f84ea2" locStartPos="40" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2cc2a5aa-3e79-341f-92de-f08dbee14551" locEndPos="45" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="34" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="34" sev="3" auth="user" locRef="7" rule="METRIC.CC" lnHash="-1459293982" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-1459293982" unbViolId="14bc3f03-4afa-3937-b437-4a189507928f" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="91055712-15b6-34b5-ab15-b3d9d5dba5b4" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'call911()'" ln="34" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="34" sev="2" auth="user" locRef="7" rule="JUNIT.TEST" lnHash="-1459293982" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-1459293982" unbViolId="7c6d249e-3288-3863-a9bd-a59d7007a77e" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b7e7b8b9-1149-3c7c-8c3c-ac42516f1973" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="34" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'call911()'" ln="34" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="34" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDM" lnHash="-1459293982" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1459293982" unbViolId="7e7031f0-8b94-3316-999a-f1e2d02c84c4" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8092bc62-9e4f-3932-a680-3ebf8812dd85" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="34" goals="0,"/>
    <StdViol msg="The overriding method 'call911()' does not have an &quot;@Override&quot; annotation" ln="34" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="34" sev="3" auth="user" locRef="7" rule="OOP.AOA" lnHash="-1459293982" pkg="com.parasoft.nested" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" tool="jtest" lineHash="-1459293982" unbViolId="397bec2d-7ad7-3ca4-9f38-64e178b6152f" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="70332503-9d67-38c0-a739-e38aa32506a7" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="34" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="3" auth="user" locRef="7" rule="CWE.200.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="4c2ca1aa-6812-3a83-b4b0-b1c5cfa5c50b" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb592608-8888-32fd-9593-67dc3f9e5371" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="3" auth="user" locRef="7" rule="CWE.209.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="2fe7b703-f979-3b42-9063-17f7ac5b7eca" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ede83564-c5d7-30d3-98e6-16f0008162df" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="3" auth="user" locRef="7" rule="OWASP2017.A6.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="bd9019c8-f1c3-335c-bd78-8f9622538613" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c4a867e4-82aa-368a-ac05-c3d1763780c2" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="3" auth="user" locRef="7" rule="OWASP2019.API10.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="4a908cd1-48db-3a85-9c62-71c81386e0d2" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c9355cb2-707f-339b-99df-f20b6c99328b" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="3" auth="user" locRef="7" rule="OWASP2021.A5.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="72799fa7-d28f-3e4a-9f8f-4c3182d7827a" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="69ca14f1-88dc-311f-91bc-3dc8a0911376" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="3" auth="user" locRef="7" rule="PCIDSS32.655.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="631ecf98-bf92-3c19-9c68-23109eb2511f" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="05dd6417-f111-3340-ba7a-bc2e6dbfe1bc" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="3" auth="user" locRef="7" rule="SECURITY.ESD.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="6d11f318-59f3-3674-bde7-832a464e87be" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="971e5f5c-ef4e-336b-ba83-873248cdb77c" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="2" auth="user" locRef="7" rule="APSC_DV.001460.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="8c4c704b-8a18-30ef-90bb-946d15d08951" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="67a8199f-cfa2-33eb-8288-8bf0528afcdb" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="38" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user" locRef="7" rule="METRIC.CC" lnHash="656794848" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="656794848" unbViolId="f44b2121-ceb6-37b5-84b9-66b6d8b3f1a0" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="5e35fd23-1753-377d-930c-402d2b5502b1" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="The method 'toString' does not have a Javadoc comment describing whether or not the method can return null" ln="38" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user" locRef="7" rule="JAVADOC.CRN" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="656794848" unbViolId="c9977ca3-96da-3291-a84e-b1d0bdff1c95" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cb3ebbef-cb82-3b21-ae2a-69bc61dfa0e6" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'toString()'" ln="38" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user" locRef="7" rule="JAVADOC.PJDM" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="656794848" unbViolId="9b2e207a-5246-3329-bd0d-726620f03a87" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7ba915bf-fd10-353f-bbdb-e6d687e4f49e" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="Missing Javadoc for 'toString()'" ln="38" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user" locRef="7" rule="OWASP2019.API9.TSMJT" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Provide a Javadoc comment for 'toString()' methods" tool="jtest" lineHash="656794848" unbViolId="5e5adc59-4bd5-3270-b3cd-bdc510ee2efa" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f4100509-fe9f-3cc9-b293-d3efe442b167" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="Missing Javadoc for 'toString()'" ln="38" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user" locRef="7" rule="JAVADOC.TSMJT" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Provide a Javadoc comment for 'toString()' methods" tool="jtest" lineHash="656794848" unbViolId="594e0871-188c-33b3-b351-dfb197fbf413" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ef99aa7a-b800-3a87-bc23-cd636f63aa27" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="The overriding method 'toString()' does not have an &quot;@Override&quot; annotation" ln="38" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user" locRef="7" rule="OOP.AOA" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" tool="jtest" lineHash="656794848" unbViolId="769c678d-5b4f-3acf-90f6-30cd699a4114" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d9c40d0d-d8fd-337d-a5e0-03144cd4a16f" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="39" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="5" auth="user" locRef="7" rule="INTER.COS" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="2013206282" unbViolId="b208ad53-57c9-3337-b41a-3a9a043f2f12" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3c7933ca-196d-3cdd-b7df-410e45fdceea" locEndPos="66" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="39" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user" locRef="7" rule="CERT.STR00.COS" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="2013206282" unbViolId="2aea6708-64b4-3f78-885f-527278961cce" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="035460f5-c391-3a18-9a94-918ad19f6c25" locEndPos="66" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;name: &quot;" ln="39" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user" locRef="7" rule="INTER.ITT" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="2013206282" unbViolId="e158fe67-d973-3f02-934f-9f3994653ad3" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="819eea33-791a-3a22-8064-4e3ea21820ad" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="The String literal &quot;name: &quot; is used" ln="39" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user" locRef="7" rule="SECURITY.WSC.SL" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="2013206282" unbViolId="98337741-b2aa-3514-a2a2-f7545857cd3f" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="86ef4d87-2731-3f77-8087-b988607f5277" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="39" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user" locRef="7" rule="CODSTA.READ.UATS" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" tool="jtest" lineHash="2013206282" unbViolId="256b1512-946a-3f94-94e2-ca3135c8191f" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cb5970c0-856e-3cc2-8ce4-e6960680a031" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;, brand: &quot;" ln="39" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user" locRef="7" rule="INTER.ITT" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="2013206282" unbViolId="61181694-67ea-378c-8a62-501e0f1521ac" locStartPos="42" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="065ea869-27b2-3528-8367-003abe89559b" locEndPos="53" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="The String literal &quot;, brand: &quot; is used" ln="39" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user" locRef="7" rule="SECURITY.WSC.SL" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="2013206282" unbViolId="5ae3a29c-c335-351f-9b3e-7a8c3f23c729" locStartPos="42" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="0a7792ba-029f-33c3-bcdd-4bd9aa26624a" locEndPos="53" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="39" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user" locRef="7" rule="CODSTA.READ.UATS" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" tool="jtest" lineHash="2013206282" unbViolId="927c2a84-9823-3850-87fc-25c66e299edd" locStartPos="56" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="094da4d2-689b-339d-99c9-ddf306472ecc" locEndPos="60" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="42" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="3" auth="user" locRef="7" rule="METRIC.CC" lnHash="870424901" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="870424901" unbViolId="661daaca-f9d3-3c56-a5ec-5d1e32807370" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="5dd86c99-c7d4-383a-aecd-81dc03a76fa2" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="43" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'getName()'" ln="42" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="2" auth="user" locRef="7" rule="JUNIT.TEST" lnHash="870424901" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="870424901" unbViolId="64f67967-137a-344f-a69f-d85350b5983d" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5a390382-892a-337e-b88f-6a506b7f8d91" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="42" goals="0,"/>
    <StdViol msg="The method 'getName' does not have a Javadoc comment describing whether or not the method can return null" ln="42" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="3" auth="user" locRef="7" rule="JAVADOC.CRN" lnHash="870424901" pkg="com.parasoft.nested" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="870424901" unbViolId="7c380628-20a9-30ef-9866-227f21a6ab5c" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="61601a51-d8bb-3d68-ad58-f307dc449d1b" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="42" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: getName()" ln="42" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="4" auth="user" locRef="7" rule="GLOBAL.UPPM" lnHash="870424901" pkg="com.parasoft.nested" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="870424901" unbViolId="a6999e61-eeff-36e5-88a0-f1736c12dfad" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ead84de7-b29f-397b-9df5-82794961e1d7" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="42" goals="0,"/>
    <StdViol msg="Getter method 'getName()' is not declared &quot;final&quot;" ln="42" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="5" auth="user" locRef="7" rule="OPT.MAF" lnHash="870424901" pkg="com.parasoft.nested" rule.header="Make getter and setter methods for instance fields &quot;final&quot;" tool="jtest" lineHash="870424901" unbViolId="f613ad55-c6c7-356d-8f02-ffc87bb6499e" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="f62236d3-c686-37d6-a6b1-2e39cce0b356" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="42" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="46" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="3" auth="user" locRef="7" rule="METRIC.CC" lnHash="1127417245" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="1127417245" unbViolId="97d02a33-edb4-3aba-bc3f-bb48f3da281b" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="f5a51e4c-98f5-3248-a79a-554a924b1fa2" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="47" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'getBrand()'" ln="46" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="2" auth="user" locRef="7" rule="JUNIT.TEST" lnHash="1127417245" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="1127417245" unbViolId="89af0540-ad83-3285-893a-14c7dc05183e" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f901e461-5291-34e2-add2-e3aae1db315e" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="46" goals="0,"/>
    <StdViol msg="The method 'getBrand' does not have a Javadoc comment describing whether or not the method can return null" ln="46" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="3" auth="user" locRef="7" rule="JAVADOC.CRN" lnHash="1127417245" pkg="com.parasoft.nested" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="1127417245" unbViolId="a7ba5688-4cb7-3989-93f3-1206790d8140" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e998791-2ed2-3ff4-8c53-d54021c98f45" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="46" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: getBrand()" ln="46" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="4" auth="user" locRef="7" rule="GLOBAL.UPPM" lnHash="1127417245" pkg="com.parasoft.nested" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="1127417245" unbViolId="ec97db73-ab9b-3c77-8215-870ea4638748" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d2aebb8b-a336-3280-8244-555273e8c688" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="46" goals="0,"/>
    <StdViol msg="Getter method 'getBrand()' is not declared &quot;final&quot;" ln="46" locFile="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="5" auth="user" locRef="7" rule="OPT.MAF" lnHash="1127417245" pkg="com.parasoft.nested" rule.header="Make getter and setter methods for instance fields &quot;final&quot;" tool="jtest" lineHash="1127417245" unbViolId="8969ce5a-02da-33ff-8952-f90cdb0cb50c" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="ed1e7e4e-236e-369c-bc2f-0f85410319ee" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="46" goals="0,"/>
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="429">
            <Project id="com.parasoft:project-with-default-package" name="com.parasoft:project-with-default-package" supp="0" total="429">
               <Res name="src" supp="0" total="429">
                  <Res name="main" supp="0" total="429">
                     <Res name="java" supp="0" total="429">
                        <Res loc="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locRef="1" locType="sr" name="Calculator.java" supp="0" total="95"/>
                        <Res name="com" supp="0" total="334">
                           <Res name="parasoft" supp="0" total="334">
                              <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locRef="2" locType="sr" name="Convertor.java" supp="0" total="37"/>
                              <Res name="another" supp="0" total="37">
                                 <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locRef="3" locType="sr" name="Convertor.java" supp="0" total="37"/>
                              </Res>
                              <Res name="differentViolations" supp="0" total="93">
                                 <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locRef="4" locType="sr" name="GenerateViolations.java" supp="0" total="93"/>
                              </Res>
                              <Res name="interfaces" supp="0" total="15">
                                 <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locRef="5" locType="sr" name="IConvertor.java" supp="0" total="15"/>
                              </Res>
                              <Res name="interfaces2" supp="0" total="20">
                                 <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locRef="6" locType="sr" name="ICalculator.java" supp="0" total="20"/>
                              </Res>
                              <Res name="nested" supp="0" total="132">
                                 <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locRef="7" locType="sr" name="PhoneFactory.java" supp="0" total="132"/>
                              </Res>
                           </Res>
                        </Res>
                     </Res>
                  </Res>
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>